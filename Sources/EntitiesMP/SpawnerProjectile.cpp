/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"

#include "StdH.h"
  
#define ECF_SPAWNERPROJECTILE ( \
  ((ECBI_BRUSH)<<ECB_TEST) |\
  ((ECBI_MODEL|ECBI_CORPSE|ECBI_ITEM|ECBI_PROJECTILE_MAGIC|ECBI_PROJECTILE_SOLID)<<ECB_PASS) |\
  ((ECBI_MODEL)<<ECB_IS))
#define EPF_SPAWNERPROJECTILE  ( \
  EPF_ONBLOCK_STOP|EPF_ORIENTEDBYGRAVITY|\
  EPF_TRANSLATEDBYGRAVITY|EPF_MOVABLE)


#include <EntitiesMP/SpawnerProjectile.h>
#include <EntitiesMP/SpawnerProjectile_tables.h>
CEntityEvent *ESpawnerProjectile::MakeCopy(void) { CEntityEvent *peeCopy = new ESpawnerProjectile(*this); return peeCopy;}
ESpawnerProjectile::ESpawnerProjectile() : CEntityEvent(EVENTCODE_ESpawnerProjectile) {;
 ClearToDefault(penOwner);
 ClearToDefault(penTemplate);
};
#line 26 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"

void CSpawnerProjectile_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) 
{
  pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
  pdec->PrecacheModel(MODEL_INVISIBLE);
};

void CSpawnerProjectile::SetDefaultProperties(void) {
  m_penOwner = NULL;
  m_penTemplate = NULL;
  m_fSize = 0.0f;
  m_fTimeAdjust = 0.0f;
  m_bExploding = FALSE ;
  m_fExplosionDuration = 0.25f;
  m_tmExplosionBegin = 0.0f;
  m_tmSpawn = 0.0f;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 56 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
void CSpawnerProjectile::SpawnEntity() 
#line 57 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
{
#line 58 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CEntity  * pen  = NULL ;
#line 60 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
pen  = GetWorld  () -> CopyEntityInWorld  (* m_penTemplate  , 
#line 61 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CPlacement3D (FLOAT3D (- 32000.0f + FRnd  () * 200.0f , - 32000.0f + FRnd  () * 200.0f , 0) , ANGLE3D (0 , 0 , 0)));
#line 64 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
pen  -> End  ();
#line 66 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CEnemyBase  * peb  = ((CEnemyBase  *) pen );
#line 67 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
peb  -> m_bTemplate  = FALSE ;
#line 68 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
pen  -> Initialize  ();
#line 71 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
FLOAT fEntityR  = 0;
#line 72 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
if(pen  -> en_pciCollisionInfo  != NULL ){
#line 73 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
fEntityR  = pen  -> en_pciCollisionInfo  -> GetMaxFloorRadius  ();
#line 74 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
#line 77 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
pen  -> Teleport  (GetPlacement  () , FALSE );
#line 80 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CEnemyBase  & penMonster  = (CEnemyBase  &) * pen ;
#line 82 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
if(penMonster  . m_penTacticsHolder  != NULL ){
#line 83 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
if(IsOfClass  (penMonster  . m_penTacticsHolder  , "TacticsHolder")){
#line 84 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
penMonster  . StartTacticsNow  ();
#line 85 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
#line 86 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
#line 88 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
  
#line 90 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
void CSpawnerProjectile::Explode(void) 
#line 91 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
{
#line 93 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CPlacement3D plExplosion  = GetPlacement  ();
#line 94 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CEntityPointer penExplosion  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 95 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
ESpawnEffect  eSpawnEffect ;
#line 96 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
eSpawnEffect  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 97 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
eSpawnEffect  . betType  = BET_BOMB ;
#line 98 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
eSpawnEffect  . vStretch  = FLOAT3D (1.0f , 1.0f , 1.0f);
#line 99 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
penExplosion  -> Initialize  (eSpawnEffect );
#line 102 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
eSpawnEffect  . betType  = BET_EXPLOSION_DEBRIS ;
#line 103 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CEntityPointer penExplosionDebris  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 104 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
penExplosionDebris  -> Initialize  (eSpawnEffect );
#line 107 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
eSpawnEffect  . betType  = BET_EXPLOSION_SMOKE ;
#line 108 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
CEntityPointer penExplosionSmoke  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 109 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
penExplosionSmoke  -> Initialize  (eSpawnEffect );
#line 120 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
  
#line 122 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
void CSpawnerProjectile::RenderParticles(void) {
#line 123 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
Particles_AfterBurner  (this  , m_tmSpawn  , 1.0f , 1);
#line 124 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
if(m_bExploding )
#line 125 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
{
#line 127 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
#line 128 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}
BOOL CSpawnerProjectile::
#line 136 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CSpawnerProjectile_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ESpawnerProjectile, "CSpawnerProjectile::Main expects 'ESpawnerProjectile' as input!");  const ESpawnerProjectile &esp = (const ESpawnerProjectile &)__eeInput;
#line 138 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
ASSERT  (esp  . penOwner  != NULL );
#line 139 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
ASSERT  (esp  . penTemplate  != NULL );
#line 140 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
ASSERT  (IsDerivedFromClass  (esp  . penTemplate  , "Enemy Base"));
#line 141 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_penOwner  = esp  . penOwner ;
#line 142 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_penTemplate  = esp  . penTemplate ;
#line 144 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_fTimeAdjust  = FRnd  () * 5.0f;
#line 145 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTemplate  -> GetEntityInfo  ());
#line 146 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_fSize  = pei  -> vSourceCenter  [ 1 ] * 0.2f;
#line 148 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_tmSpawn  = _pTimer  -> CurrentTick  ();
#line 151 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
InitAsModel  ();
#line 152 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SetPhysicsFlags  (EPF_SPAWNERPROJECTILE );
#line 153 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SetCollisionFlags  (ECF_SPAWNERPROJECTILE );
#line 154 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 155 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SetModel  (MODEL_INVISIBLE );
#line 157 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
Particles_AfterBurner_Prepare  (this );
#line 160 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01fb0001, FALSE, EBegin());return TRUE;}BOOL CSpawnerProjectile::H0x01fb0001_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0001
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&et= (ETouch&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01fb0002, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 164 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
}return TRUE;}BOOL CSpawnerProjectile::H0x01fb0002_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0002

#line 166 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_bExploding  = TRUE ;
#line 167 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
m_tmExplosionBegin  = _pTimer  -> CurrentTick  ();
#line 170 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SpawnEntity  ();
#line 172 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
Explode  ();
#line 174 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SwitchToEditorModel  ();
#line 175 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
SetTimerAfter(4.0f);
Jump(STATE_CURRENT, 0x01fb0003, FALSE, EBegin());return TRUE;}BOOL CSpawnerProjectile::H0x01fb0003_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01fb0004, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CSpawnerProjectile::H0x01fb0004_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01fb0004
;
#line 176 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
Destroy  ();
#line 178 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
Return(STATE_CURRENT,EVoid());
#line 178 "C:/MyMod/Sources/EntitiesMP/SpawnerProjectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};
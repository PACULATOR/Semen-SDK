/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"

#include "StdH.h"
#include "EntitiesMP/Common/PathFinding.h"
#include "EntitiesMP/NavigationMarker.h"
#include "EntitiesMP/TacticsHolder.h"
extern void JumpFromBouncer(CEntity *penToBounce, CEntity *penBouncer);
extern INDEX ent_bReportBrokenChains;

#include <EntitiesMP/EnemyBase.h>
#include <EntitiesMP/EnemyBase_tables.h>
CEntityEvent *ERestartAttack::MakeCopy(void) { CEntityEvent *peeCopy = new ERestartAttack(*this); return peeCopy;}
ERestartAttack::ERestartAttack() : CEntityEvent(EVENTCODE_ERestartAttack) {;
};
CEntityEvent *EReconsiderBehavior::MakeCopy(void) { CEntityEvent *peeCopy = new EReconsiderBehavior(*this); return peeCopy;}
EReconsiderBehavior::EReconsiderBehavior() : CEntityEvent(EVENTCODE_EReconsiderBehavior) {;
};
CEntityEvent *EForceWound::MakeCopy(void) { CEntityEvent *peeCopy = new EForceWound(*this); return peeCopy;}
EForceWound::EForceWound() : CEntityEvent(EVENTCODE_EForceWound) {;
};
#line 43 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"

#define MF_MOVEZ    (1L<<0)
#define MF_ROTATEH  (1L<<1)
#define MF_MOVEXZY  (1L<<2)

void CEnemyBase::SetDefaultProperties(void) {
  m_penWatcher = NULL;
  m_vStartPosition = FLOAT3D(0 , 0 , 0);
  m_penEnemy = NULL;
  m_ttTarget = TT_NONE ;
  m_strDescription = "Enemy base";
  m_strName = "Enemy base";
  m_soSound.SetOwner(this);
m_soSound.Stop_internal();
  m_vStartDirection = FLOAT3D(0 , 0 , - 1);
  m_bOnStartPosition = TRUE ;
  m_fFallHeight = 8.0f;
  m_fStepHeight = -1.0f;
  m_fSenseRange = 0.0f;
  m_fViewAngle = 360.0f;
  m_fWalkSpeed = 1.0f;
  m_aWalkRotateSpeed = AngleDeg(10.0f);
  m_fAttackRunSpeed = 1.0f;
  m_aAttackRotateSpeed = AngleDeg(10.0f);
  m_fCloseRunSpeed = 1.0f;
  m_aCloseRotateSpeed = AngleDeg(10.0f);
  m_fAttackDistance = 50.0f;
  m_fCloseDistance = 10.0f;
  m_fAttackFireTime = 2.0f;
  m_fCloseFireTime = 1.0f;
  m_fStopDistance = 0.0f;
  m_fIgnoreRange = 200.0f;
  m_fLockOnEnemyTime = 0.0f;
  m_fBlowUpAmount = 0.0f;
  m_fBodyParts = 4;
  m_fDamageWounded = 0.0f;
  m_vDamage = FLOAT3D(0 , 0 , 0);
  m_tmLastDamage = -1000.0f;
  m_bRobotBlowup = FALSE ;
  m_fBlowUpSize = 2.0f;
  m_fMoveTime = 0.0f;
  m_vDesiredPosition = FLOAT3D(0 , 0 , 0);
  m_dtDestination = DT_PLAYERCURRENT ;
  m_penPathMarker = NULL;
  m_vPlayerSpotted = FLOAT3D(0 , 0 , 0);
  m_fMoveFrequency = 0.0f;
  m_fMoveSpeed = 0.0f;
  m_aRotateSpeed = 0;
  m_fLockStartTime = 0.0f;
  m_fRangeLast = 0.0f;
  m_bFadeOut = FALSE ;
  m_fFadeStartTime = 0.0f;
  m_fFadeTime = 0.0f;
  m_fShootTime = 0.0f;
  m_fDamageConfused = 0.0f;
  m_iChargeHitAnimation = 0.0f;
  m_fChargeHitDamage = 0.0f;
  m_fChargeHitAngle = 0.0f;
  m_fChargeHitSpeed = 0.0f;
  m_penSpawnerTarget = NULL;
  m_penDeathTarget = NULL;
  m_eetDeathType = EET_TRIGGER ;
  m_bTemplate = FALSE ;
  m_fAttackRadius = 10000.0f;
  m_colColor = 0x00;
  m_bDeaf = FALSE ;
  m_bBlind = FALSE ;
  m_tmGiveUp = 5.0f;
  m_tmReflexMin = 0.0f;
  m_tmReflexMax = 0.0f;
  m_fActivityRange = 0.0f;
  m_bApplyRandomStretch = FALSE ;
  m_fRandomStretchFactor = 0.1f;
  m_fStretchMultiplier = 1.0f;
  m_fRandomStretchMultiplier = 1.0f;
  m_penMarker = NULL;
  m_penMainMusicHolder = NULL;
  m_tmLastFussTime = 0.0f;
  m_iScore = -100000;
  m_fMaxHealth = -1.0f;
  m_bBoss = FALSE ;
  m_fSpiritStartTime = 0.0f;
  m_tmSpraySpawned = 0.0f;
  m_fSprayDamage = 0.0f;
  m_penSpray = NULL;
  m_fMaxDamageAmmount = 0.0f;
  m_vLastStain = FLOAT3D(0 , 0 , 0);
  m_sptType = SPT_BLOOD ;
  m_penTacticsHolder = NULL;
  m_bTacticActive = FALSE ;
  m_tmTacticsActivation = 0.0f;
  m_vTacticsStartPosition = FLOAT3D(0 , 0 , 0);
  m_fTacticVar1 = 0.0f;
  m_fTacticVar2 = 0.0f;
  m_fTacticVar3 = 0.0f;
  m_fTacticVar4 = 0.0f;
  m_fTacticVar5 = 0.0f;
  m_bTacticsStartOnSense = FALSE ;
  m_colBurning = COLOR(C_WHITE  | CT_OPAQUE );
  m_bResizeAttachments = FALSE ;
  m_penPrediction = NULL;
  CMovableModelEntity::SetDefaultProperties();
}
   CEnemyBase::CEnemyBase(void) 
#line 211 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 212 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmPredict  = 0;
#line 213 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 216 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::SetPredictionTime(TIME tmAdvance) 
#line 217 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 218 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (! IsPredictor  ());
#line 219 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmPredict  = _pTimer  -> CurrentTick  () + tmAdvance ;
#line 220 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 223 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
TIME CEnemyBase::GetPredictionTime(void) 
#line 224 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 225 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return m_tmPredict ;
#line 226 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  CTString CEnemyBase::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 230 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 231 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CTString str ;
#line 232 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
str  . PrintF  (TRANS  ("%s killed %s") , GetClass  () -> ec_pdecDLLClass  -> dec_strName  , strPlayerName );
#line 233 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return str ;
#line 234 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  FLOAT CEnemyBase::GetCrushHealth(void) 
#line 237 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 238 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 0.0f;
#line 239 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::CountAsKill(void) 
#line 243 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 244 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 245 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::ForcesCannonballToExplode(void) 
#line 248 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 249 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 250 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  FLOAT & CEnemyBase::GetProp(FLOAT & m_fBase) 
#line 254 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 255 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return m_fBase ;
#line 256 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  FLOAT CEnemyBase::GetThreatDistance(void) 
#line 260 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 262 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return Max  (GetProp  (m_fCloseDistance ) , GetProp  (m_fStopDistance ));
#line 263 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 266 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::MaybeSwitchToAnotherPlayer(void) 
#line 267 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 269 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetSP  () -> sp_bSinglePlayer ){
#line 271 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 272 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 275 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < GetThreatDistance  ()){
#line 277 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 278 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 280 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penNewEnemy  = GetWatcher  () -> CheckAnotherPlayer  (m_penEnemy );
#line 281 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penNewEnemy  != m_penEnemy  && penNewEnemy  != NULL ){
#line 282 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penEnemy  = penNewEnemy ;
#line 283 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 284 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 285 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 287 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
class CWatcher * CEnemyBase::GetWatcher(void) 
#line 288 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 289 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_penWatcher  != NULL );
#line 290 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return (CWatcher  *) & * m_penWatcher ;
#line 291 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::Copy(CEntity & enOther,ULONG ulFlags) 
#line 293 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 294 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: Copy  (enOther  , ulFlags );
#line 295 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEnemyBase  * penOther  = (CEnemyBase  *) (& enOther );
#line 296 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 298 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::Precache(void) 
#line 299 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 300 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH );
#line 301 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH_APPLE );
#line 302 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH_BANANA );
#line 303 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH_BURGER );
#line 304 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_MACHINE );
#line 305 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_MACHINE );
#line 306 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_RED );
#line 307 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_GREEN );
#line 308 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_APPLE );
#line 309 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_BANANA );
#line 310 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_BURGER );
#line 311 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_LOLLY );
#line 312 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_ORANGE );
#line 313 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODSPILL );
#line 314 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODSTAIN );
#line 315 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODSTAINGROW );
#line 316 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODEXPLODE );
#line 317 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BOMB );
#line 318 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_EXPLOSIONSTAIN );
#line 319 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_DEBRIS );
#line 320 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  FLOAT3D CEnemyBase::PlayerDestinationPos(void) 
#line 324 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 325 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 326 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 329 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D CEnemyBase::CalcDelta(CEntity * penEntity) 
#line 330 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 331 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (penEntity  != NULL );
#line 333 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penEntity  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector ;
#line 334 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 336 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::CalcDist(CEntity * penEntity) 
#line 337 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 338 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return CalcDelta  (penEntity ) . Length  ();
#line 339 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 341 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IfTargetCrushed(CEntity * penOther,const FLOAT3D & vDirection) 
#line 342 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 343 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsOfClass  (penOther  , "ModelHolder2"))
#line 344 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 345 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fCrushHealth  = GetCrushHealth  ();
#line 346 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fCrushHealth  > ((CRationalEntity  &) * penOther ) . GetHealth  ())
#line 347 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 348 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
InflictDirectDamage  (penOther  , this  , 
#line 349 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DMT_EXPLOSION  , fCrushHealth  , GetPlacement  () . pl_PositionVector  , vDirection );
#line 350 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 351 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 352 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 353 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 354 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 357 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D CEnemyBase::CalcPlaneDelta(CEntity * penEntity) 
#line 358 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 359 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (penEntity  != NULL );
#line 360 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPlaneDelta ;
#line 362 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetNormalComponent  (
#line 363 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penEntity  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector  , 
#line 364 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
en_vGravityDir  , vPlaneDelta );
#line 365 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return vPlaneDelta ;
#line 366 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 369 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::CalcPlaneDist(CEntity * penEntity) 
#line 370 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 371 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return CalcPlaneDelta  (penEntity ) . Length  ();
#line 372 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 375 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetFrustumAngle(const FLOAT3D & vDir) 
#line 376 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 378 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 380 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return (vDir  / vDir  . Length  ()) % vFront ;
#line 381 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 384 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetPlaneFrustumAngle(const FLOAT3D & vDir) 
#line 385 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 386 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPlaneDelta ;
#line 388 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetNormalComponent  (vDir  , en_vGravityDir  , vPlaneDelta );
#line 390 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 391 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPlaneFront ;
#line 392 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetNormalComponent  (vFront  , en_vGravityDir  , vPlaneFront );
#line 394 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vPlaneDelta  . SafeNormalize  ();
#line 395 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vPlaneFront  . SafeNormalize  ();
#line 396 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return vPlaneDelta  % vPlaneFront ;
#line 397 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 400 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsInFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum) 
#line 401 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 403 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDelta  = CalcDelta  (penEntity );
#line 405 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 407 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fDotProduct  = (vDelta  / vDelta  . Length  ()) % vFront ;
#line 408 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return fDotProduct  >= fCosHalfFrustum ;
#line 409 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 412 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsInPlaneFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum) 
#line 413 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 415 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPlaneDelta  = CalcPlaneDelta  (penEntity );
#line 417 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 418 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPlaneFront ;
#line 419 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetNormalComponent  (vFront  , en_vGravityDir  , vPlaneFront );
#line 421 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vPlaneDelta  . SafeNormalize  ();
#line 422 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vPlaneFront  . SafeNormalize  ();
#line 423 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fDot  = vPlaneDelta  % vPlaneFront ;
#line 424 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return fDot  >= fCosHalfFrustum ;
#line 425 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 428 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsVisible(CEntity * penEntity) 
#line 429 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 430 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (penEntity  != NULL );
#line 432 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vSource  , vTarget ;
#line 433 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetPositionCastRay  (this  , penEntity  , vSource  , vTarget );
#line 436 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 437 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_NONE ;
#line 438 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
crRay  . cr_bHitTranslucentPortals  = FALSE ;
#line 439 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
en_pwoWorld  -> CastRay  (crRay );
#line 442 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return (crRay  . cr_penHit  == NULL );
#line 443 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 446 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsVisibleCheckAll(CEntity * penEntity) 
#line 447 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 448 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (penEntity  != NULL );
#line 450 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vSource  , vTarget ;
#line 451 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetPositionCastRay  (this  , penEntity  , vSource  , vTarget );
#line 454 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 455 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_COLLISIONBOX ;
#line 456 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
crRay  . cr_bHitTranslucentPortals  = FALSE ;
#line 457 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
en_pwoWorld  -> CastRay  (crRay );
#line 460 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return crRay  . cr_penHit  == penEntity ;
#line 461 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 464 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::CalculateAngularLaunchParams(
#line 465 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vShooting,FLOAT fShootHeight,
#line 466 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vTarget,FLOAT3D vSpeedDest,
#line 467 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ANGLE aPitch,
#line 468 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT & fLaunchSpeed,
#line 469 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT & fRelativeHdg) 
#line 470 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 471 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vNewTarget  = vTarget ;
#line 472 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D & vGravity  = en_vGravityDir ;
#line 473 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fYt ;
#line 474 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fXt ;
#line 475 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fA  = TanFast  (AngleDeg  (aPitch ));
#line 476 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fTime  = 0.0f;
#line 477 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fLastTime  = 0.0f;
#line 479 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
INDEX iIterations  = 0;
#line 480 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
do
#line 481 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 482 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
iIterations  ++;
#line 483 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDistance  = vNewTarget  - vShooting ;
#line 484 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vXt  , vYt ;
#line 485 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetParallelAndNormalComponents  (vDistance  , vGravity  , vYt  , vXt );
#line 486 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fYt  = vYt  . Length  ();
#line 487 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(vGravity  % vYt  > 0){
#line 488 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fYt  = - fYt ;
#line 489 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 490 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fXt  = vXt  . Length  ();
#line 491 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fLastTime  = fTime ;
#line 492 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fTime  = Sqrt  (2.0f) * Sqrt  ((fA  * fXt  + fShootHeight  - fYt ) / en_fGravityA );
#line 493 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vNewTarget  = vTarget  + vSpeedDest  * fTime ;
#line 494 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 495 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
while((Abs  (fTime  - fLastTime ) > _pTimer  -> TickQuantum ) && (iIterations  < 10));
#line 498 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fLaunchSpeed  = fXt  / (fTime  * Cos  (aPitch ));
#line 501 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fHdgTargetNow  = GetRelativeHeading  ((vTarget  - vShooting ) . SafeNormalize  ());
#line 502 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fHdgTargetMoved  = GetRelativeHeading  ((vNewTarget  - vShooting ) . SafeNormalize  ());
#line 503 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fRelativeHdg  = fHdgTargetMoved  - fHdgTargetNow ;
#line 504 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 507 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D CEnemyBase::CalculatePredictedPosition(FLOAT3D vShootPos,FLOAT3D vTarget,
#line 508 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fSpeedSrc,FLOAT3D vSpeedDst,FLOAT fClampY) 
#line 509 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 510 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vNewTarget  = vTarget ;
#line 511 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D & vGravity  = en_vGravityDir ;
#line 512 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fTime  = 0.0f;
#line 513 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fLastTime  = 0.0f;
#line 514 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
INDEX iIterations  = 0;
#line 515 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDistance  = vNewTarget  - vShootPos ;
#line 518 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
do
#line 519 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 520 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
iIterations  ++;
#line 521 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fLastTime  = fTime ;
#line 522 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fTime  = vDistance  . Length  () / fSpeedSrc ;
#line 523 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vNewTarget  = vTarget  + vSpeedDst  * fTime  + vGravity  * 0.5f * fTime  * fTime ;
#line 524 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vNewTarget  (2) = ClampDn  (vNewTarget  (2) , fClampY );
#line 525 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDistance  = vNewTarget  - vShootPos ;
#line 526 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 527 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
while((Abs  (fTime  - fLastTime ) > _pTimer  -> TickQuantum ) && (iIterations  < 10));
#line 528 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return vNewTarget ;
#line 529 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 532 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::MovesByTargetedRoute(CTString & strTargetProperty)const {
#line 533 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
strTargetProperty  = "Marker";
#line 534 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 535 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 537 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::DropsMarker(CTFileName & fnmMarkerClass,CTString & strTargetProperty)const {
#line 538 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fnmMarkerClass  = CTFILENAME  ("Classes\\EnemyMarker.ecl");
#line 539 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
strTargetProperty  = "Marker";
#line 540 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 541 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 542 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
const CTString & CEnemyBase::GetDescription(void)const {
#line 543 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 544 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penMarker  != NULL ){
#line 545 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , m_penMarker  -> GetName  ());
#line 546 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 547 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return m_strDescription ;
#line 548 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  const CTFileName & CEnemyBase::GetComputerMessageName(void)const {
#line 551 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
static CTFileName fnm  (CTString (""));
#line 552 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return fnm ;
#line 553 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 556 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::AddDependentsToPrediction(void) 
#line 557 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 558 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penSpray  -> AddToPrediction  ();
#line 559 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penWatcher  != NULL ){
#line 560 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> AddToPrediction  ();
#line 561 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 562 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 565 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::ChecksumForSync(ULONG & ulCRC,INDEX iExtensiveSyncCheck) {
#line 566 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: ChecksumForSync  (ulCRC  , iExtensiveSyncCheck );
#line 567 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 569 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::DumpSync_t(CTStream & strm,INDEX iExtensiveSyncCheck) 
#line 570 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 571 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: DumpSync_t  (strm  , iExtensiveSyncCheck );
#line 572 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
strm  . FPrintF_t  ("enemy: ");
#line 573 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL ){
#line 574 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
strm  . FPrintF_t  ("id: %08X\n" , m_penEnemy  -> en_ulID );
#line 575 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 576 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
strm  . FPrintF_t  ("none\n");
#line 577 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 586 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 589 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::Read_t(CTStream * istr) {
#line 590 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: Read_t  (istr );
#line 593 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  != NULL ){
#line 594 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . Add  (this );
#line 595 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 596 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 599 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::FillEntityStatistics(EntityStats * pes) 
#line 600 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 601 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
pes  -> es_strName  = GetClass  () -> ec_pdecDLLClass  -> dec_strName ;
#line 602 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bTemplate ){
#line 603 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
pes  -> es_ctCount  = 0;
#line 604 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 605 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
pes  -> es_ctCount  = 1;
#line 606 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 607 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
pes  -> es_ctAmmount  = 1;
#line 608 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
pes  -> es_fValue  = GetHealth  ();
#line 609 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
pes  -> es_iScore  = m_iScore ;
#line 610 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 611 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 614 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 615 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 616 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 618 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bTemplate ){
#line 620 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 621 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 623 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fNewDamage  = fDamageAmmount ;
#line 626 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fNewDamage  *= DamageStrength  (((EntityInfo  *) GetEntityInfo  ()) -> Eeibt  , dmtType );
#line 628 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fNewDamage  *= GetGameDamageMultiplier  ();
#line 631 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fNewDamage  == 0){
#line 633 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 634 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 635 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fKickDamage  = fNewDamage ;
#line 636 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((dmtType  == DMT_EXPLOSION ) || (dmtType  == DMT_IMPACT ) || (dmtType  == DMT_CANNONBALL_EXPLOSION ))
#line 637 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 638 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fKickDamage  *= 1.5;
#line 639 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 640 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(dmtType  == DMT_DROWNING  || dmtType  == DMT_CLOSERANGE  || dmtType  == DMT_CHAINSAW ){
#line 641 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fKickDamage  /= 10;
#line 642 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 643 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(dmtType  == DMT_BURNING )
#line 644 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 645 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fKickDamage  /= 100000;
#line 646 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UBYTE  ubR  , ubG  , ubB  , ubA ;
#line 647 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fColorFactor  = fNewDamage  / m_fMaxHealth  * 255.0f;
#line 648 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ColorToRGBA  (m_colBurning  , ubR  , ubG  , ubB  , ubA );
#line 649 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ubR  = ClampDn  (ubR  - fColorFactor  , 32.0f);
#line 650 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_colBurning  = RGBAToColor  (ubR  , ubR  , ubR  , ubA );
#line 651 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 654 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 655 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
TIME  tmDelta  = tmNow  - m_tmLastDamage ;
#line 656 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmLastDamage  = tmNow ;
#line 659 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(tmDelta  >= _pTimer  -> TickQuantum  * 3){
#line 660 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDamage  = FLOAT3D (0 , 0 , 0);
#line 661 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 663 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDirectionFixed ;
#line 664 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(vDirection  . ManhattanNorm  () > 0.5f){
#line 665 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDirectionFixed  = vDirection ;
#line 666 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 667 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDirectionFixed  = - en_vGravityDir ;
#line 668 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 669 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDamageOld  = m_vDamage ;
#line 675 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 676 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDamage  += (vDirectionFixed  - en_vGravityDir  / 2) * fKickDamage ;
#line 677 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 679 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fOldLen  = vDamageOld  . Length  ();
#line 680 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fNewLen  = m_vDamage  . Length  ();
#line 681 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fOldRootLen  = Sqrt  (fOldLen );
#line 682 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fNewRootLen  = Sqrt  (fNewLen );
#line 684 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fMassFactor  = 300.0f / ((EntityInfo  *) GetEntityInfo  ()) -> fMass ;
#line 686 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(! (en_ulFlags  & ENF_ALIVE ))
#line 687 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 688 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fMassFactor  /= 3;
#line 689 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 691 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fOldLen  != 0.0f)
#line 692 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 694 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GiveImpulseTranslationAbsolute  (- vDamageOld  / fOldRootLen  * fMassFactor );
#line 695 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 700 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GiveImpulseTranslationAbsolute  (m_vDamage  / fNewRootLen  * fMassFactor );
#line 706 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fMaxDamageAmmount  < fDamageAmmount )
#line 707 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 708 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMaxDamageAmmount  = fDamageAmmount ;
#line 709 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 711 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((m_tmSpraySpawned  <= _pTimer  -> CurrentTick  () - _pTimer  -> TickQuantum  * 8 || 
#line 712 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fSprayDamage  + fNewDamage  > 50.0f) 
#line 713 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
&& m_fSpiritStartTime  == 0 && 
#line 714 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
dmtType  != DMT_CHAINSAW  && 
#line 715 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
! (dmtType  == DMT_BURNING  && GetHealth  () < 0)){
#line 718 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D plSpray  = CPlacement3D (vHitPoint  , ANGLE3D (0 , 0 , 0));
#line 719 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 720 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_sptType  != SPT_ELECTRICITY_SPARKS )
#line 721 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 722 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penSpray  -> SetParent  (this );
#line 723 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 725 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ESpawnSpray  eSpawnSpray ;
#line 726 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 728 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fMaxDamageAmmount  > 10.0f)
#line 729 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 730 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 3.0f;
#line 731 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 732 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
else if(m_fSprayDamage  + fNewDamage  > 50.0f)
#line 733 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 734 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 735 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 736 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
else 
#line 737 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 738 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 739 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 741 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . sptType  = m_sptType ;
#line 742 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 745 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vHitPointRelative  = vHitPoint  - GetPlacement  () . pl_PositionVector ;
#line 746 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vReflectingNormal ;
#line 747 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetNormalComponent  (vHitPointRelative  , en_vGravityDir  , vReflectingNormal );
#line 748 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vReflectingNormal  . SafeNormalize  ();
#line 750 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vReflectingNormal  (1) /= 5.0f;
#line 752 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vProjectedComponent  = vReflectingNormal  * (vDirection  % vReflectingNormal );
#line 753 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vSpilDirection  = vDirection  - vProjectedComponent  * 2.0f - en_vGravityDir  * 0.5f;
#line 755 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . vDirection  = vSpilDirection ;
#line 756 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnSpray  . penOwner  = this ;
#line 764 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penSpray  -> Initialize  (eSpawnSpray );
#line 765 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmSpraySpawned  = _pTimer  -> CurrentTick  ();
#line 766 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fSprayDamage  = 0.0f;
#line 767 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMaxDamageAmmount  = 0.0f;
#line 768 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 769 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fSprayDamage  += fNewDamage ;
#line 771 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: ReceiveDamage  (penInflictor  , 
#line 772 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
dmtType  , fNewDamage  , vHitPoint  , vDirection );
#line 773 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 780 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 781 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 782 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colAmbient  = AddColors  (colAmbient  , m_colColor );
#line 783 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bFadeOut ){
#line 784 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fTimeRemain  = m_fFadeStartTime  + m_fFadeTime  - _pTimer  -> CurrentTick  ();
#line 785 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fTimeRemain  < 0.0f){fTimeRemain  = 0.0f;}
#line 786 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
COLOR colAlpha ;
#line 787 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL ){
#line 788 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colAlpha  = GetModelInstance  () -> GetModelColor  ();
#line 789 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colAlpha  = (colAlpha  & 0xFFFFFF00) + (COLOR (fTimeRemain  / m_fFadeTime  * 0xFF) & 0xFF);
#line 790 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> SetModelColor  (colAlpha );
#line 791 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 792 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
else {
#line 793 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colAlpha  = GetModelObject  () -> mo_colBlendColor ;
#line 794 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colAlpha  = (colAlpha  & 0xFFFFFF00) + (COLOR (fTimeRemain  / m_fFadeTime  * 0xFF) & 0xFF);
#line 795 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelObject  () -> mo_colBlendColor  = colAlpha ;
#line 796 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 798 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 799 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetSP  () -> sp_bMental ){
#line 800 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetHealth  () <= 0){
#line 801 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL ){
#line 802 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> SetModelColor  (C_WHITE  & 0xFF);
#line 803 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 804 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelObject  () -> mo_colBlendColor  = C_WHITE  & 0xFF;
#line 805 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 806 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 807 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
extern  FLOAT ent_tmMentalIn ;
#line 808 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
extern  FLOAT ent_tmMentalOut ;
#line 809 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
extern  FLOAT ent_tmMentalFade ;
#line 810 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmIn  = ent_tmMentalIn ;
#line 811 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmOut  = ent_tmMentalOut ;
#line 812 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmFade  = ent_tmMentalFade ;
#line 813 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmExist  = tmFade  + tmIn  + tmFade ;
#line 814 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmTotal  = tmFade  + tmIn  + tmFade  + tmOut ;
#line 816 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 817 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fFactor  = 1;
#line 818 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(tmTime  > 0.1f){
#line 819 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
tmTime  += en_ulID  * 123.456f;
#line 820 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
tmTime  = fmod  (tmTime  , tmTotal );
#line 821 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fFactor  = CalculateRatio  (tmTime  , 0 , tmExist  , tmFade  / tmExist  , tmFade  / tmExist );
#line 822 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 824 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL ){
#line 825 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> SetModelColor  (C_WHITE  | INDEX (0xFF * fFactor ));
#line 826 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 827 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelObject  () -> mo_colBlendColor  = C_WHITE  | INDEX (0xFF * fFactor );
#line 828 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 829 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 830 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 831 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 832 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_colBurning  != COLOR (C_WHITE  | CT_OPAQUE ))
#line 833 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 834 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colAmbient  = MulColors  (colAmbient  , m_colBurning );
#line 835 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
colLight  = MulColors  (colLight  , m_colBurning );
#line 836 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 837 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return CMovableModelEntity  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 838 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 842 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::AddToFuss(void) 
#line 843 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 844 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsPredictor  ()){
#line 846 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 847 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 848 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 851 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  == NULL ){
#line 853 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penMainMusicHolder  = _pNetwork  -> GetEntityWithName  ("MusicHolder" , 0);
#line 855 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  == NULL ){
#line 857 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 859 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 860 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 862 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . Add  (this );
#line 864 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bBoss ){
#line 865 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_penBoss  = this ;
#line 866 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 868 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 871 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 873 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . IsMember  (this ));
#line 875 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bBoss ){
#line 876 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_penBoss  = this ;
#line 877 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 879 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 880 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 881 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 882 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::RemoveFromFuss(void) 
#line 883 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 884 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsPredictor  ()){
#line 885 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 886 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 888 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  == NULL ){
#line 890 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 891 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 893 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . Remove  (this );
#line 895 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bBoss ){
#line 896 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(((CMusicHolder  &) * m_penMainMusicHolder ) . m_penBoss  != this ){
#line 897 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPrintF  (TRANS  ("More than one boss active!\n"));
#line 898 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_penBoss  = NULL ;
#line 899 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 900 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 901 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penMainMusicHolder  = NULL ;
#line 902 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 905 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::ShouldCeaseAttack(void) 
#line 906 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 908 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL  || 
#line 909 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
! (m_penEnemy  -> GetFlags  () & ENF_ALIVE ) || 
#line 910 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
(m_penEnemy  -> GetFlags  () & ENF_DELETED )){
#line 912 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 913 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 915 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(_pTimer  -> CurrentTick  () > m_tmLastFussTime  + m_tmGiveUp ){
#line 917 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 918 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 920 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 921 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::SizeModel(void) 
#line 925 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 926 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vStretch  = GetModelStretch  ();
#line 929 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vStretch  *= m_fStretchMultiplier ;
#line 932 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bApplyRandomStretch )
#line 933 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 935 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bApplyRandomStretch  = FALSE ;
#line 937 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fRandomStretchMultiplier  = (FRnd  () - 0.5f) * m_fRandomStretchFactor  + 1.0f;
#line 938 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 941 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vStretch  *= m_fRandomStretchMultiplier ;
#line 943 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bResizeAttachments ){
#line 944 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StretchModel  (vStretch );
#line 945 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(TRUE ){
#line 946 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StretchSingleModel  (vStretch );
#line 947 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 948 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ModelChangeNotify  ();
#line 949 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 952 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsValidForEnemy(CEntity * penPlayer) 
#line 953 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 954 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 
#line 955 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penPlayer  != NULL  && 
#line 956 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
IsDerivedFromClass  (penPlayer  , "Player") && 
#line 957 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penPlayer  -> GetFlags  () & ENF_ALIVE ;
#line 958 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 961 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::SetTargetNone(void) 
#line 962 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 963 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_NONE ;
#line 964 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 965 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penEnemy  = NULL ;
#line 966 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 969 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetSoft(CEntity * penPlayer) 
#line 970 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 972 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(! IsValidForEnemy  (penPlayer )){
#line 974 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 975 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 977 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_ttTarget  != TT_NONE ){
#line 979 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 980 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 982 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penOld  = m_penEnemy ;
#line 983 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_SOFT ;
#line 984 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 985 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 986 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penOld  != penPlayer ;
#line 987 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 990 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetHard(CEntity * penPlayer) 
#line 991 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 993 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(! IsValidForEnemy  (penPlayer )){
#line 995 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 996 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 998 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_ttTarget  == TT_HARD ){
#line 1000 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1001 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1003 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penOld  = m_penEnemy ;
#line 1004 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_HARD ;
#line 1005 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1006 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 1007 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penOld  != penPlayer ;
#line 1008 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1011 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetHardForce(CEntity * penPlayer) 
#line 1012 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1014 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(! IsValidForEnemy  (penPlayer )){
#line 1016 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1017 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1019 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penOld  = m_penEnemy ;
#line 1020 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_HARD ;
#line 1021 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1022 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 1023 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penOld  != penPlayer ;
#line 1024 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  FLOAT CEnemyBase::GetAttackMoveFrequency(FLOAT fEnemyDistance) 
#line 1032 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1033 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fEnemyDistance  > GetProp  (m_fCloseDistance )){
#line 1034 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 0.5f;
#line 1035 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1036 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 0.25f;
#line 1037 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1038 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::SetSpeedsToDesiredPosition(const FLOAT3D & vPosDelta,FLOAT fPosDist,BOOL bGoingToPlayer) 
#line 1042 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1043 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fEnemyDistance  = CalcDist  (m_penEnemy );
#line 1044 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fCloseDistance  = GetProp  (m_fCloseDistance );
#line 1045 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fStopDistance  = GetProp  (m_fStopDistance );
#line 1047 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fCos  = GetPlaneFrustumAngle  (vPosDelta );
#line 1049 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(MayMoveToAttack  () && 
#line 1051 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fCos  > CosFast  (45.0f) && 
#line 1053 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fEnemyDistance  > fStopDistance ){
#line 1055 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fEnemyDistance  < fCloseDistance ){
#line 1056 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fCloseRunSpeed );
#line 1057 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 1058 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1059 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fAttackRunSpeed );
#line 1060 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aAttackRotateSpeed );
#line 1061 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1064 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_bTacticActive ){
#line 1066 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fEnemyDistance  < fCloseDistance ){
#line 1067 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fCloseRunSpeed );
#line 1068 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 1069 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1070 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fAttackRunSpeed );
#line 1071 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aAttackRotateSpeed );
#line 1072 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1075 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(fCos  < CosFast  (15.0f)){
#line 1077 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0;
#line 1078 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fEnemyDistance  < fCloseDistance ){
#line 1079 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 1080 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1081 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aAttackRotateSpeed );
#line 1082 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1085 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1087 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(bGoingToPlayer  || ! WouldNotLeaveAttackRadius  ()){
#line 1089 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0;
#line 1090 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = 0;
#line 1092 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1093 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fCloseRunSpeed );
#line 1094 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 1095 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1096 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1097 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::MovementAnimation(ULONG ulFlags) 
#line 1101 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1102 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(ulFlags  & MF_MOVEZ ){
#line 1103 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fMoveSpeed  == GetProp  (m_fAttackRunSpeed ) || m_fMoveSpeed  == GetProp  (m_fCloseRunSpeed ) 
#line 1104 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
|| m_fMoveSpeed  > GetProp  (m_fWalkSpeed )){
#line 1105 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
RunningAnim  ();
#line 1106 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1107 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WalkingAnim  ();
#line 1108 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1109 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(ulFlags  & MF_ROTATEH ){
#line 1110 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
RotatingAnim  ();
#line 1111 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1112 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL ){
#line 1113 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnimFight  ();
#line 1114 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1115 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 1116 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1117 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1118 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  ULONG CEnemyBase::SetDesiredMovement(void) 
#line 1123 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1124 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ULONG  ulFlags  = 0;
#line 1127 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 1129 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERCURRENT ){
#line 1130 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ApplyTactics  (vDelta );
#line 1131 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1134 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_aRotateSpeed  > 0.0f){
#line 1136 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDir  = vDelta ;
#line 1137 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDir  . SafeNormalize  ();
#line 1138 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ANGLE aWantedHeadingRelative  = GetRelativeHeading  (vDir );
#line 1141 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 1143 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ANGLE aHeadingRotation ;
#line 1145 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(aWantedHeadingRelative  < - m_aRotateSpeed  * m_fMoveFrequency ){
#line 1147 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
aHeadingRotation  = - m_aRotateSpeed ;
#line 1149 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(aWantedHeadingRelative  > m_aRotateSpeed  * m_fMoveFrequency ){
#line 1151 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
aHeadingRotation  = + m_aRotateSpeed ;
#line 1153 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1155 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
aHeadingRotation  = aWantedHeadingRelative  / m_fMoveFrequency ;
#line 1156 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1158 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetDesiredRotation  (ANGLE3D (aHeadingRotation  , 0 , 0));
#line 1160 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(Abs  (aHeadingRotation ) > 1.0f){
#line 1161 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ulFlags  |= MF_ROTATEH ;
#line 1162 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1165 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1167 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1168 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1171 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fMoveSpeed  > 0.0f){
#line 1173 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vTranslation  (0.0f , 0.0f , 0.0f);
#line 1174 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vTranslation  (3) = - m_fMoveSpeed ;
#line 1177 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetDesiredTranslation  (vTranslation );
#line 1179 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ulFlags  |= MF_MOVEZ ;
#line 1182 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1184 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 1185 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1187 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ulFlags ;
#line 1188 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1191 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::StopMoving() 
#line 1192 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1193 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopRotating  ();
#line 1194 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopTranslating  ();
#line 1195 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1198 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::StopRotating() 
#line 1199 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1200 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1201 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1204 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::StopTranslating() 
#line 1205 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1206 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetDesiredTranslation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 1207 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1210 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::CalcDistanceInPlaneToDestination(void) 
#line 1211 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1213 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vNormal ;
#line 1214 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetNormalComponent  (m_vDesiredPosition  - GetPlacement  () . pl_PositionVector  , en_vGravityDir  , vNormal );
#line 1215 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return vNormal  . Length  ();
#line 1216 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::StartPathFinding(void) 
#line 1220 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1221 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_dtDestination  == DT_PATHPERSISTENT  || m_dtDestination  == DT_PATHTEMPORARY );
#line 1223 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penMarker ;
#line 1224 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPath ;
#line 1226 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PATH_FindFirstMarker  (this  , 
#line 1227 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetPlacement  () . pl_PositionVector  , m_penEnemy  -> GetPlacement  () . pl_PositionVector  , 
#line 1228 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penMarker  , vPath );
#line 1230 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penMarker  == NULL  || ! IsVisible  (penMarker )){
#line 1232 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERSPOTTED ;
#line 1234 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 1235 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1236 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1238 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = vPath  , 
#line 1239 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penPathMarker  = penMarker ;
#line 1240 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::FindNextPathMarker(void) 
#line 1244 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1246 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penPathMarker  == NULL ){
#line 1248 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (FALSE );
#line 1250 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1251 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1252 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1255 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penMarker  = m_penPathMarker ;
#line 1256 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPath ;
#line 1257 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PATH_FindNextMarker  (this  , 
#line 1258 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetPlacement  () . pl_PositionVector  , m_penEnemy  -> GetPlacement  () . pl_PositionVector  , 
#line 1259 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penMarker  , vPath );
#line 1262 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penMarker  == NULL  || ! IsVisible  (penMarker )){
#line 1264 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERSPOTTED ;
#line 1266 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 1267 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1268 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1271 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = vPath  , 
#line 1272 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penPathMarker  = penMarker ;
#line 1273 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1276 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::CheckTouchForPathFinding(const ETouch & eTouch) 
#line 1277 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1279 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL ){
#line 1281 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1282 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1285 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PATHPERSISTENT  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 1287 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1288 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1290 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDir  = en_vDesiredTranslationRelative ;
#line 1291 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDir  . SafeNormalize  ();
#line 1292 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDir  *= GetRotationMatrix  ();
#line 1294 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((eTouch  . plCollision  % vDir ) < - 0.5f){
#line 1295 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL  && IsVisible  (m_penEnemy )){
#line 1296 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PATHPERSISTENT ;
#line 1297 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1298 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PATHTEMPORARY ;
#line 1299 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1300 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StartPathFinding  ();
#line 1301 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return m_penPathMarker  != NULL ;
#line 1302 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1303 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1304 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1305 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1308 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::CheckFallForPathFinding(const EWouldFall & eWouldFall) 
#line 1309 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1311 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL ){
#line 1313 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1314 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1317 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PATHPERSISTENT  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 1319 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1320 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1322 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL  && IsVisible  (m_penEnemy )){
#line 1323 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PATHPERSISTENT ;
#line 1324 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1325 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PATHTEMPORARY ;
#line 1326 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1327 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StartPathFinding  ();
#line 1329 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return m_penPathMarker  != NULL ;
#line 1330 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1336 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::InitializeTactics(void) {
#line 1340 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penTacticsHolder  == NULL  || ! IsOfClass  (m_penTacticsHolder  , "TacticsHolder") 
#line 1341 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
|| m_penEnemy  == NULL ){
#line 1342 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1343 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1345 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CTacticsHolder  * penTactics  = & (CTacticsHolder  &) * m_penTacticsHolder ;
#line 1348 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmTacticsActivation  = _pTimer  -> CurrentTick  ();
#line 1349 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vTacticsStartPosition  = GetPlacement  () . pl_PositionVector ;
#line 1352 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fSign ;
#line 1354 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(Sgn  (penTactics  -> m_fParam2 ) > 0 && Sgn  (penTactics  -> m_fParam1 ) > 0){
#line 1355 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fSign  = + 1.0f;
#line 1356 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(Sgn  (penTactics  -> m_fParam2 ) < 0 && Sgn  (penTactics  -> m_fParam1 ) < 0){
#line 1357 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fSign  = - 1.0f;
#line 1358 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1359 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fSign  = Sgn  (FRnd  () - 0.5f);
#line 1360 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1362 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
switch(penTactics  -> m_tctType ){
#line 1363 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case TCT_DAMP_ANGLE_STRIFE : {
#line 1365 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar1  = Lerp  (Abs  (penTactics  -> m_fParam1 ) , Abs  (penTactics  -> m_fParam2 ) , FRnd  ()) * fSign ;
#line 1367 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar2  = penTactics  -> m_fParam4 ;
#line 1369 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar3  = penTactics  -> m_fParam3 ;
#line 1371 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar4  = (m_penEnemy  -> GetPlacement  () . pl_PositionVector  - m_vTacticsStartPosition ) . Length  ();
#line 1373 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar5  = penTactics  -> m_fParam5 ;
#line 1374 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
break ;}
#line 1376 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case TCT_PARALLEL_RANDOM_DISTANCE : 
#line 1378 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar1  = Lerp  (penTactics  -> m_fParam4  , penTactics  -> m_fParam5  , FRnd  ());
#line 1380 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar4  = Lerp  (Abs  (penTactics  -> m_fParam1 ) , Abs  (penTactics  -> m_fParam2 ) , FRnd  ()) * fSign ;
#line 1382 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar2  = m_fAttackRunSpeed  * 2.0f * 90.0f / m_aAttackRotateSpeed ;
#line 1385 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar3  = penTactics  -> m_fParam3 ;
#line 1387 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar5  = (GetPlacement  () . pl_PositionVector  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ) . Length  ();
#line 1389 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar2  = ClampDn  (m_fTacticVar2  , 2.0f);
#line 1391 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
break ;
#line 1393 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case TCT_STATIC_RANDOM_V_DISTANCE : 
#line 1395 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar1  = Lerp  (Abs  (penTactics  -> m_fParam1 ) , Abs  (penTactics  -> m_fParam2 ) , FRnd  ()) * fSign ;
#line 1397 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar2  = Lerp  (penTactics  -> m_fParam3  , penTactics  -> m_fParam4  , FRnd  ());
#line 1398 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
break ;
#line 1399 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1400 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::ApplyTactics(FLOAT3D & vDesiredPos) {
#line 1406 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penTacticsHolder  == NULL  || ! IsOfClass  (m_penTacticsHolder  , "TacticsHolder") 
#line 1407 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
|| m_penEnemy  == NULL ){
#line 1408 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1409 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1411 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CTacticsHolder  * penTactics  = & (CTacticsHolder  &) * m_penTacticsHolder ;
#line 1415 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penTactics  -> m_tmLastActivation  == - 1 || penTactics  -> m_tctType  == TCT_NONE ){
#line 1416 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bTacticActive  = FALSE ;
#line 1417 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_tmTacticsActivation  < penTactics  -> m_tmLastActivation ){
#line 1418 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
InitializeTactics  ();
#line 1419 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bTacticActive  = TRUE ;
#line 1420 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1422 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bTacticActive ){
#line 1425 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vEnemyDistance  = m_vTacticsStartPosition  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 1426 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fEnemyDistance  = vEnemyDistance  . Length  ();
#line 1427 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vEnemyDistance  . SafeNormalize  ();
#line 1428 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ANGLE3D angEnemy  = ANGLE3D (0.0f , 0.0f , 0.0f);
#line 1431 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fDistanceRatio  = 0.0f;
#line 1432 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fTimeRatio  = 0.0f;
#line 1434 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
switch(penTactics  -> m_tctType )
#line 1435 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1436 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case TCT_DAMP_ANGLE_STRIFE : {
#line 1438 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < m_fTacticVar5 ){
#line 1439 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bTacticActive  = FALSE ;
#line 1440 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1442 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fDistanceRatio  = 1.0f;
#line 1443 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fTacticVar3  > 0){
#line 1445 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fClamped  = Clamp  (CalcDist  (m_penEnemy ) - (m_fTacticVar4  * m_fTacticVar3 ) , 0.0f , m_fTacticVar4 );
#line 1446 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fDistanceRatio  = fClamped  / (m_fTacticVar4  * (1 - m_fTacticVar3 ));
#line 1447 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1449 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fTimeRatio  = 1.0f;
#line 1450 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fTacticVar2  > 0){
#line 1451 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fTimeRatio  = 1.0f - (ClampUp  ((_pTimer  -> CurrentTick  () - m_tmTacticsActivation ) / m_fTacticVar2  , 1.0f));
#line 1452 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1454 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (1) = m_fTacticVar1  * fDistanceRatio  * fTimeRatio ;
#line 1455 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (2) = 0.0f;
#line 1456 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (3) = 0.0f;
#line 1458 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mHeading ;
#line 1459 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mHeading  , angEnemy );
#line 1460 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * ! en_mRotation ;
#line 1461 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * mHeading ;
#line 1462 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * en_mRotation ;
#line 1464 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
break ;}
#line 1466 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case TCT_PARALLEL_RANDOM_DISTANCE : {
#line 1468 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vLinePlayerToSpawn  = m_vTacticsStartPosition  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 1470 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vLinePlayerToThis  = GetPlacement  () . pl_PositionVector  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 1472 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fThisOnLine  = (vLinePlayerToThis  % vLinePlayerToSpawn ) / vLinePlayerToSpawn  . Length  ();
#line 1473 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vThisOnLine  = m_penEnemy  -> GetPlacement  () . pl_PositionVector  + vLinePlayerToSpawn  . SafeNormalize  () * fThisOnLine ;
#line 1475 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fLineDist  = (GetPlacement  () . pl_PositionVector  - vThisOnLine ) . Length  ();
#line 1477 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mHeading ;
#line 1481 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(vLinePlayerToThis  . Length  () < m_fTacticVar1 ){
#line 1482 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bTacticActive  = FALSE ;
#line 1484 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(fLineDist  < m_fTacticVar1 ){
#line 1485 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fLineDist  < 1.0f){fLineDist  = 1.0f;}
#line 1486 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (1) = m_fTacticVar4  / fLineDist ;
#line 1487 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (2) = 0.0f;
#line 1488 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (3) = 0.0f;
#line 1490 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mHeading  , angEnemy );
#line 1491 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * ! en_mRotation ;
#line 1492 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * mHeading ;
#line 1493 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * en_mRotation ;
#line 1495 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(fLineDist  > m_fTacticVar1  + m_fTacticVar2 ){
#line 1496 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fLineDist  < 1.0f){fLineDist  = 1.0f;}
#line 1497 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (1) = - m_fTacticVar4  / fLineDist ;
#line 1498 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (2) = 0.0f;
#line 1499 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (3) = 0.0f;
#line 1501 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mHeading  , angEnemy );
#line 1502 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * ! en_mRotation ;
#line 1503 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * mHeading ;
#line 1504 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * en_mRotation ;
#line 1506 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1507 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = - vLinePlayerToSpawn ;
#line 1508 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1509 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
break ;}
#line 1511 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case TCT_STATIC_RANDOM_V_DISTANCE : {
#line 1512 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(_pTimer  -> CurrentTick  () < m_tmTacticsActivation  + m_fTacticVar2 ){
#line 1513 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (1) = m_fTacticVar1 ;
#line 1514 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (2) = 0.0f;
#line 1515 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
angEnemy  (3) = 0.0f;
#line 1516 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1517 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bTacticActive  = FALSE ;
#line 1518 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1520 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mHeading ;
#line 1521 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mHeading  , angEnemy );
#line 1522 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * ! en_mRotation ;
#line 1523 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * mHeading ;
#line 1524 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDesiredPos  = vDesiredPos  * en_mRotation ;
#line 1526 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
break ;}
#line 1527 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1528 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1529 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1531 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::StartTacticsNow(void) {
#line 1532 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmTacticsActivation  = - 1.0f;
#line 1533 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1539 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::CanAttackEnemy(CEntity * penTarget,FLOAT fCosAngle) {
#line 1540 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsInPlaneFrustum  (penTarget  , fCosAngle )){
#line 1541 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsVisibleCheckAll  (penTarget )){
#line 1542 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 1543 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1544 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1545 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1546 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::CanHitEnemy(CEntity * penTarget,FLOAT fCosAngle) {
#line 1550 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsInFrustum  (penTarget  , fCosAngle )){
#line 1551 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return IsVisibleCheckAll  (penTarget );
#line 1552 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1553 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1554 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1557 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SeeEntity(CEntity * pen,FLOAT fCosAngle) {
#line 1558 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsInFrustum  (pen  , fCosAngle )){
#line 1559 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return IsVisible  (pen );
#line 1560 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1561 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1562 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1565 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SeeEntityInPlane(CEntity * pen,FLOAT fCosAngle) {
#line 1566 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CalcPlaneDist  (pen );
#line 1567 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsInPlaneFrustum  (pen  , fCosAngle )){
#line 1568 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return IsVisible  (pen );
#line 1569 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1570 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1571 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1574 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::PreparePropelledProjectile(CPlacement3D & plProjectile,FLOAT3D vShootTarget,
#line 1575 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D & vOffset,ANGLE3D & aOffset) 
#line 1576 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1577 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDiff  = (vShootTarget  - (GetPlacement  () . pl_PositionVector  + vOffset  * GetRotationMatrix  ())) . SafeNormalize  ();
#line 1580 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D mToTargetX  , mToTargetY  , mToTargetZ ;
#line 1581 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetZ  = - vDiff ;
#line 1582 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetY  = - en_vGravityDir ;
#line 1583 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetX  = (mToTargetY  * mToTargetZ ) . SafeNormalize  ();
#line 1584 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetY  = (mToTargetZ  * mToTargetX ) . SafeNormalize  ();
#line 1585 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mToTarget ;
#line 1586 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTarget  (1 , 1) = mToTargetX  (1);mToTarget  (1 , 2) = mToTargetY  (1);mToTarget  (1 , 3) = mToTargetZ  (1);
#line 1587 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTarget  (2 , 1) = mToTargetX  (2);mToTarget  (2 , 2) = mToTargetY  (2);mToTarget  (2 , 3) = mToTargetZ  (2);
#line 1588 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTarget  (3 , 1) = mToTargetX  (3);mToTarget  (3 , 2) = mToTargetY  (3);mToTarget  (3 , 3) = mToTargetZ  (3);
#line 1591 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
plProjectile  . pl_PositionVector  = GetPlacement  () . pl_PositionVector  + vOffset  * GetRotationMatrix  ();
#line 1592 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mDirection ;
#line 1593 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mDirection  , aOffset );
#line 1594 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DecomposeRotationMatrixNoSnap  (plProjectile  . pl_OrientationAngle  , mToTarget  * mDirection );
#line 1595 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1598 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::PrepareFreeFlyingProjectile(CPlacement3D & plProjectile,FLOAT3D vShootTarget,
#line 1599 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D & vOffset,ANGLE3D & aOffset) 
#line 1600 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1601 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDiff  = (vShootTarget  - (GetPlacement  () . pl_PositionVector  + vOffset  * GetRotationMatrix  ())) . SafeNormalize  ();
#line 1604 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D mToTargetX  , mToTargetY  , mToTargetZ ;
#line 1605 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetZ  = - vDiff ;
#line 1606 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetY  = - en_vGravityDir ;
#line 1607 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetX  = (mToTargetY  * mToTargetZ ) . SafeNormalize  ();
#line 1608 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTargetZ  = (mToTargetX  * mToTargetY ) . SafeNormalize  ();
#line 1609 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mToTarget ;
#line 1610 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTarget  (1 , 1) = mToTargetX  (1);mToTarget  (1 , 2) = mToTargetY  (1);mToTarget  (1 , 3) = mToTargetZ  (1);
#line 1611 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTarget  (2 , 1) = mToTargetX  (2);mToTarget  (2 , 2) = mToTargetY  (2);mToTarget  (2 , 3) = mToTargetZ  (2);
#line 1612 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
mToTarget  (3 , 1) = mToTargetX  (3);mToTarget  (3 , 2) = mToTargetY  (3);mToTarget  (3 , 3) = mToTargetZ  (3);
#line 1615 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
plProjectile  . pl_PositionVector  = GetPlacement  () . pl_PositionVector  + vOffset  * GetRotationMatrix  ();
#line 1616 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mDirection ;
#line 1617 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mDirection  , aOffset );
#line 1618 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DecomposeRotationMatrixNoSnap  (plProjectile  . pl_OrientationAngle  , mToTarget  * mDirection );
#line 1619 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1622 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity * CEnemyBase::ShootProjectile(enum ProjectileType pt,FLOAT3D & vOffset,ANGLE3D & aOffset) {
#line 1623 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_penEnemy  != NULL );
#line 1626 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EntityInfo  * peiTarget  = (EntityInfo  *) (m_penEnemy  -> GetEntityInfo  ());
#line 1627 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vShootTarget ;
#line 1628 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetEntityInfoPosition  (m_penEnemy  , peiTarget  -> vTargetCenter  , vShootTarget );
#line 1631 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D pl ;
#line 1632 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PreparePropelledProjectile  (pl  , vShootTarget  , vOffset  , aOffset );
#line 1633 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 1634 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ELaunchProjectile  eLaunch ;
#line 1635 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . penLauncher  = this ;
#line 1636 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . fStretch  = 1.0f;
#line 1637 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . prtType  = pt ;
#line 1638 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penProjectile  -> Initialize  (eLaunch );
#line 1640 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penProjectile ;
#line 1641 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1644 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity * CEnemyBase::ShootProjectileAt(FLOAT3D vShootTarget,enum ProjectileType pt,FLOAT3D & vOffset,ANGLE3D & aOffset) {
#line 1647 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D pl ;
#line 1648 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PreparePropelledProjectile  (pl  , vShootTarget  , vOffset  , aOffset );
#line 1649 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 1650 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ELaunchProjectile  eLaunch ;
#line 1651 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . penLauncher  = this ;
#line 1652 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . prtType  = pt ;
#line 1653 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penProjectile  -> Initialize  (eLaunch );
#line 1655 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penProjectile ;
#line 1656 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1659 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity * CEnemyBase::ShootPredictedProjectile(enum ProjectileType pt,FLOAT3D vPredictedPos,FLOAT3D & vOffset,ANGLE3D & aOffset) {
#line 1660 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_penEnemy  != NULL );
#line 1663 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EntityInfo  * peiTarget  = (EntityInfo  *) (m_penEnemy  -> GetEntityInfo  ());
#line 1664 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vShootTarget  = vPredictedPos ;
#line 1665 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(peiTarget  != NULL )
#line 1666 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1668 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vBody  = FLOAT3D (peiTarget  -> vTargetCenter  [ 0 ] , peiTarget  -> vTargetCenter  [ 1 ] , peiTarget  -> vTargetCenter  [ 2 ]);
#line 1669 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATmatrix3D mRotation ;
#line 1670 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MakeRotationMatrixFast  (mRotation  , m_penEnemy  -> GetPlacement  () . pl_OrientationAngle );
#line 1671 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vShootTarget  = vPredictedPos  + vBody  * mRotation ;
#line 1672 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1674 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D pl ;
#line 1675 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PreparePropelledProjectile  (pl  , vShootTarget  , vOffset  , aOffset );
#line 1676 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 1677 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ELaunchProjectile  eLaunch ;
#line 1678 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . penLauncher  = this ;
#line 1679 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eLaunch  . prtType  = pt ;
#line 1680 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penProjectile  -> Initialize  (eLaunch );
#line 1682 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return penProjectile ;
#line 1683 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1685 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::WouldNotLeaveAttackRadius(void) 
#line 1686 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1687 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fAttackRadius  <= 0){
#line 1688 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1689 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1691 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL bInsideNow  = (m_vStartPosition  - GetPlacement  () . pl_PositionVector ) . Length  () < m_fAttackRadius ;
#line 1693 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL bEnemyTowardsCenter  = 
#line 1694 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
(m_vStartPosition  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ) . Length  () < 
#line 1695 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
(GetPlacement  () . pl_PositionVector  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ) . Length  ();
#line 1696 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return bInsideNow  || bEnemyTowardsCenter ;
#line 1697 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::MayMoveToAttack(void) 
#line 1701 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1703 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CMovableEntity  * pen  = (CMovableEntity  *) & * m_penEnemy ;
#line 1704 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CContentType  & ctUp  = pen  -> en_pwoWorld  -> wo_actContentTypes  [ pen  -> en_iUpContent  ];
#line 1705 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL bEnemyDiving  = ! (ctUp  . ct_ulFlags  & CTF_BREATHABLE_LUNGS );
#line 1707 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return WouldNotLeaveAttackRadius  () && ! bEnemyDiving ;
#line 1708 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::ShouldBlowUp(void) 
#line 1716 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1718 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsOfClass  (this  , "ExotechLarva")){return TRUE ;}
#line 1721 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 
#line 1723 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetSP  () -> sp_bGibs  && 
#line 1725 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetHealth  () <= 0 && 
#line 1727 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDamage  . Length  () > m_fBlowUpAmount  && 
#line 1729 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fSpiritStartTime  == 0;
#line 1730 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1734 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::BlowUpBase(void) 
#line 1735 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1737 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BlowUp  ();
#line 1738 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::BlowUp(void) 
#line 1743 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1745 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BlowUpNotify  ();
#line 1746 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
const BOOL bGibs  = GetSP  () -> sp_bGibs ;
#line 1748 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vNormalizedDamage  = m_vDamage  - m_vDamage  * (m_fBlowUpAmount  / m_vDamage  . Length  ());
#line 1749 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vNormalizedDamage  /= Sqrt  (vNormalizedDamage  . Length  ());
#line 1750 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vNormalizedDamage  *= 0.75f;
#line 1751 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vBodySpeed  = en_vCurrentTranslationAbsolute  - en_vGravityDir  * (en_vGravityDir  % en_vCurrentTranslationAbsolute );
#line 1754 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(bGibs  && ! m_bRobotBlowup )
#line 1755 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1757 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
const INDEX iBloodType  = GetSP  () -> sp_iBlood ;
#line 1759 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ULONG  ulFleshTexture  = TEXTURE_FLESH_GREEN ;
#line 1760 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ULONG  ulFleshModel  = MODEL_FLESH ;
#line 1761 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(iBloodType  == 2){ulFleshTexture  = TEXTURE_FLESH_RED ;}
#line 1763 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Debris_Begin  (EIBT_FLESH  , DPT_BLOODTRAIL  , BET_BLOODSTAIN  , m_fBlowUpSize  , vNormalizedDamage  , vBodySpeed  , 1.0f , 0.0f);
#line 1764 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
for(INDEX iDebris  = 0;iDebris  < m_fBodyParts ;iDebris  ++){
#line 1766 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(iBloodType  == 3){
#line 1767 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
switch(IRnd  () % 5){
#line 1768 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case 1: {ulFleshModel  = MODEL_FLESH_APPLE ;ulFleshTexture  = TEXTURE_FLESH_APPLE ;break ;}
#line 1769 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case 2: {ulFleshModel  = MODEL_FLESH_BANANA ;ulFleshTexture  = TEXTURE_FLESH_BANANA ;break ;}
#line 1770 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case 3: {ulFleshModel  = MODEL_FLESH_BURGER ;ulFleshTexture  = TEXTURE_FLESH_BURGER ;break ;}
#line 1771 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
case 4: {ulFleshModel  = MODEL_FLESH_LOLLY ;ulFleshTexture  = TEXTURE_FLESH_LOLLY ;break ;}
#line 1772 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
default  :{ulFleshModel  = MODEL_FLESH_ORANGE ;ulFleshTexture  = TEXTURE_FLESH_ORANGE ;break ;}
#line 1773 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1774 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1775 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Debris_Spawn  (this  , this  , ulFleshModel  , ulFleshTexture  , 0 , 0 , 0 , IRnd  () % 4 , 0.5f , 
#line 1776 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D (FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f));
#line 1777 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1779 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
LeaveStain  (FALSE );
#line 1780 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1783 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(bGibs  && m_bRobotBlowup )
#line 1784 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1786 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Debris_Begin  (EIBT_ROBOT  , DPR_SMOKETRAIL  , BET_EXPLOSIONSTAIN  , m_fBlowUpSize  , vNormalizedDamage  , vBodySpeed  , 1.0f , 0.0f);
#line 1787 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
for(INDEX iDebris  = 0;iDebris  < m_fBodyParts ;iDebris  ++){
#line 1788 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Debris_Spawn  (this  , this  , MODEL_MACHINE  , TEXTURE_MACHINE  , 0 , 0 , 0 , IRnd  () % 4 , 0.2f , 
#line 1789 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D (FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f));
#line 1790 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1792 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D plExplosion  = GetPlacement  ();
#line 1793 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penExplosion  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 1794 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ESpawnEffect  eSpawnEffect ;
#line 1795 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnEffect  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1796 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnEffect  . betType  = BET_BOMB ;
#line 1797 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fSize  = m_fBlowUpSize  * 0.3f;
#line 1798 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSpawnEffect  . vStretch  = FLOAT3D (fSize  , fSize  , fSize );
#line 1799 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penExplosion  -> Initialize  (eSpawnEffect );
#line 1800 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1803 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SwitchToEditorModel  ();
#line 1804 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 1805 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 1806 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::LeaveStain(BOOL bGrow) 
#line 1815 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1816 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ESpawnEffect  ese ;
#line 1817 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPoint ;
#line 1818 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATplane3D vPlaneNormal ;
#line 1819 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fDistanceToEdge ;
#line 1821 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOATaabbox3D box ;
#line 1822 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetBoundingBox  (box );
#line 1825 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1827 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 0.5f 
#line 1828 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
&& (m_vLastStain  - vPoint ) . Length  () > 1.0f){
#line 1829 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vLastStain  = vPoint ;
#line 1830 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fStretch  = box  . Size  () . Length  ();
#line 1831 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1833 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(bGrow ){
#line 1834 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . betType  = BET_BLOODSTAINGROW ;
#line 1835 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . vStretch  = FLOAT3D (fStretch  * 1.5f , fStretch  * 1.5f , 1.0f);
#line 1836 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1837 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . betType  = BET_BLOODSTAIN ;
#line 1838 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . vStretch  = FLOAT3D (fStretch  * 0.75f , fStretch  * 0.75f , 1.0f);
#line 1839 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1840 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1841 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . vDirection  = FLOAT3D (0 , 0 , 0);
#line 1842 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPos  = vPoint  + ese  . vNormal  / 50.0f * (FRnd  () + 0.5f);
#line 1843 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penEffect  = CreateEntity  (CPlacement3D (vPos  , ANGLE3D (0 , 0 , 0)) , CLASS_BASIC_EFFECT );
#line 1844 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penEffect  -> Initialize  (ese );
#line 1845 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1846 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1847 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::AdjustDifficulty(void) 
#line 1850 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1851 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fMoveSpeed  = GetSP  () -> sp_fEnemyMovementSpeed ;
#line 1852 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fAttackSpeed  = GetSP  () -> sp_fEnemyMovementSpeed ;
#line 1855 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fAttackRunSpeed  *= fMoveSpeed ;
#line 1856 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aAttackRotateSpeed  *= fMoveSpeed ;
#line 1857 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fCloseRunSpeed  *= fMoveSpeed ;
#line 1858 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aCloseRotateSpeed  *= fMoveSpeed ;
#line 1859 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fAttackFireTime  *= 1 / fAttackSpeed ;
#line 1860 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fCloseFireTime  *= 1 / fAttackSpeed ;
#line 1875 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1883 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::WoundedNotify(const EDamage & eDamage) 
#line 1884 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1886 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL ){
#line 1888 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1889 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1892 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(eDamage  . dmtType  != DMT_CLOSERANGE  && eDamage  . dmtType  != DMT_CHAINSAW ){
#line 1894 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ESound  eSound ;
#line 1895 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSound  . EsndtSound  = SNDT_YELL ;
#line 1896 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSound  . penTarget  = m_penEnemy ;
#line 1897 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , 25.0f));
#line 1898 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1899 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1902 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::SeeNotify() 
#line 1903 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1905 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL ){
#line 1907 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1908 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1910 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ESound  eSound ;
#line 1911 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSound  . EsndtSound  = SNDT_SHOUT ;
#line 1912 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eSound  . penTarget  = m_penEnemy ;
#line 1913 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , 50.0f));
#line 1914 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::StandingAnim(void) {}
  void CEnemyBase::StandingAnimFight(void) {StandingAnim  ();}
  void CEnemyBase::WalkingAnim(void) {}
  void CEnemyBase::RunningAnim(void) {}
  void CEnemyBase::RotatingAnim(void) {}
  void CEnemyBase::ChargeAnim(void) {}
  INDEX CEnemyBase::AnimForDamage(FLOAT fDamage) {return 0;}
  void CEnemyBase::BlowUpNotify(void) {}
  INDEX CEnemyBase::AnimForDeath(void) {return 0;}
  FLOAT CEnemyBase::WaitForDust(FLOAT3D & vStretch) {return - 1;}
  void CEnemyBase::DeathNotify(void) {}
  void CEnemyBase::IdleSound(void) {}
  void CEnemyBase::SightSound(void) {}
  void CEnemyBase::WoundSound(void) {}
  void CEnemyBase::DeathSound(void) {}
  FLOAT CEnemyBase::GetLockRotationSpeed(void) {return 2000.0f;}
  
#line 1940 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::RenderParticles(void) {
#line 1942 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetRenderType  () != CEntity  :: RT_MODEL  && GetRenderType  () != CEntity  :: RT_SKAMODEL ){
#line 1943 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return ;
#line 1944 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1946 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fSpiritStartTime  != 0.0f)
#line 1947 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1950 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Particles_Death  (this  , m_fSpiritStartTime );
#line 1951 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1952 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::EnemyPostInit(void) {}
  
#line 1958 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::HandleEvent(const CEntityEvent & ee) 
#line 1959 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1960 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(ee  . ee_slEvent  == EVENTCODE_ETouch )
#line 1961 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1962 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetCrushHealth  () != 0.0f)
#line 1963 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1964 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ETouch  eTouch  = ((ETouch  &) ee );
#line 1965 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsOfClass  (eTouch  . penOther  , "ModelHolder2") || 
#line 1966 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
IsOfClass  (eTouch  . penOther  , "MovingBrush") || 
#line 1967 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
IsOfClass  (eTouch  . penOther  , "DestroyableArchitecture"))
#line 1968 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1969 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
InflictDirectDamage  (eTouch  . penOther  , this  , DMT_EXPLOSION  , GetCrushHealth  () , 
#line 1970 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eTouch  . penOther  -> GetPlacement  () . pl_PositionVector  , - (FLOAT3D &) eTouch  . plCollision );
#line 1971 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1972 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1973 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1974 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return CMovableModelEntity  :: HandleEvent  (ee );
#line 1975 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1978 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetAnimLength(int iAnim) 
#line 1979 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1980 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 1981 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelInstance  () -> GetAnimLength  (iAnim );
#line 1982 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1983 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> GetAnimLength  (iAnim );
#line 1984 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1985 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1988 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetCurrentAnimLength() 
#line 1989 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 1990 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 1991 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 0.5f;
#line 1992 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 1993 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> GetCurrentAnimLength  ();
#line 1994 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 1995 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 1998 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsAnimFinished() 
#line 1999 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2000 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 2001 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 2002 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2003 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> IsAnimFinished  ();
#line 2004 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2005 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 2008 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetPassedTime() 
#line 2009 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2010 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 2011 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return 0.0f;
#line 2012 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2013 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> GetPassedTime  ();
#line 2014 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2015 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 2017 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D & CEnemyBase::GetModelStretch() 
#line 2018 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2019 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 2020 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelInstance  () -> mi_vStretch ;
#line 2021 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2022 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> mo_Stretch ;
#line 2023 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2024 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 2027 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::StretchModel(FLOAT3D vStretch) 
#line 2028 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2029 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 2030 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> StretchModel  (vStretch );
#line 2031 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2032 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelObject  () -> StretchModel  (vStretch );
#line 2033 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2034 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 2037 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
void CEnemyBase::StretchSingleModel(FLOAT3D vStretch) 
#line 2038 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2039 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 2040 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> StretchSingleModel  (vStretch );
#line 2041 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2042 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetModelObject  () -> StretchSingleModel  (vStretch );
#line 2043 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2044 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
  
#line 2048 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SLONG CEnemyBase::GetUsedMemory(void) 
#line 2049 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2051 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SLONG  slUsedMemory  = sizeof  (CEnemyBase ) - sizeof  (CMovableModelEntity ) + CMovableModelEntity  :: GetUsedMemory  ();
#line 2053 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 2054 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
slUsedMemory  += m_strName  . Length  ();
#line 2055 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
slUsedMemory  += 1 * sizeof  (CSoundObject);
#line 2056 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return slUsedMemory ;
#line 2057 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
BOOL CEnemyBase::
#line 2068 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MoveToDestination(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MoveToDestination
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MoveToDestination expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2071 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveFrequency  = 0.25f;
#line 2072 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveTime  = _pTimer  -> CurrentTick  () + 45.0f;
#line 2074 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360006, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360006_MoveToDestination_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360006
if(!(CalcDistanceInPlaneToDestination  () > m_fMoveSpeed  * m_fMoveFrequency  * 2.0f && 
#line 2075 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveTime  > _pTimer  -> CurrentTick  ())){ Jump(STATE_CURRENT,0x01360007, FALSE, EInternal());return TRUE;}
#line 2077 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fMoveFrequency );
Jump(STATE_CURRENT, 0x01360004, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360004_MoveToDestination_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360004
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2080 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 2081 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MovementAnimation  (ulFlags );
#line 2082 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2083 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360005, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 2085 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360005_MoveToDestination_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360005
Jump(STATE_CURRENT,0x01360006, FALSE, EInternal());return TRUE;
#line 2086 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360007_MoveToDestination_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360007

#line 2089 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2089 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2093 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MoveToRandomPatrolPosition(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MoveToRandomPatrolPosition
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MoveToRandomPatrolPosition expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2096 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(! IsOfClass  (m_penMarker  , "Enemy Marker")){
#line 2098 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (FALSE );
#line 2100 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2100 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2101 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2103 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEnemyMarker  * pem  = (CEnemyMarker  *) & * m_penMarker ;
#line 2106 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fMin  = pem  -> m_fPatrolAreaInner ;
#line 2107 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fMax  = pem  -> m_fPatrolAreaOuter ;
#line 2108 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fMin  < 0){
#line 2109 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fMin  = 0;
#line 2110 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2111 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(fMax  < fMin ){
#line 2112 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fMax  = fMin ;
#line 2113 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2114 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fR  = Lerp  (fMin  , fMax  , FRnd  ());
#line 2115 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 2116 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vOffsetDir ;
#line 2117 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetHeadingDirection  (fA  , vOffsetDir );
#line 2118 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = m_vStartPosition  + vOffsetDir  * fR ;
#line 2121 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fWalkSpeed );
#line 2122 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aWalkRotateSpeed );
#line 2123 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WalkingAnim  ();
#line 2126 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_MoveToDestination, TRUE;
Jump(STATE_CURRENT, 0x01360009, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360009_MoveToRandomPatrolPosition_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360009
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_MoveToDestination, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136000a, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136000a_MoveToRandomPatrolPosition_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000a
const EReturn&__e= (EReturn&)__eeInput;
;
#line 2129 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2129 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2133 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DoPatrolling(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_DoPatrolling
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::DoPatrolling expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2136 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360010, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360010_DoPatrolling_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360010
if(!(TRUE )){ Jump(STATE_CURRENT,0x01360011, FALSE, EInternal());return TRUE;}
#line 2138 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2139 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2141 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(0.5f + FRnd  () / 2);
Jump(STATE_CURRENT, 0x0136000c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136000c_DoPatrolling_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136000d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136000d_DoPatrolling_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000d
;
#line 2143 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_MoveToRandomPatrolPosition, TRUE;
Jump(STATE_CURRENT, 0x0136000e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136000e_DoPatrolling_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_MoveToRandomPatrolPosition, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136000f, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136000f_DoPatrolling_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000f
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01360010, FALSE, EInternal());return TRUE;
#line 2144 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360011_DoPatrolling_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360011
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2148 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BeIdle(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_BeIdle
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::BeIdle expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2151 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStart  ());
#line 2154 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2157 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360015, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360015_BeIdle_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360015
if(!(TRUE )){ Jump(STATE_CURRENT,0x01360016, FALSE, EInternal());return TRUE;}
#line 2159 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(Lerp  (5.0f , 20.0f , FRnd  ()));
Jump(STATE_CURRENT, 0x01360013, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360013_BeIdle_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360013
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360014, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360014_BeIdle_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360014
;
#line 2161 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
IdleSound  ();Jump(STATE_CURRENT,0x01360015, FALSE, EInternal());return TRUE;
#line 2162 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360016_BeIdle_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360016
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2166 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ReturnToStartPosition(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_ReturnToStartPosition
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::ReturnToStartPosition expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2168 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_BeIdle, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2210 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MoveThroughMarkers(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MoveThroughMarkers
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MoveThroughMarkers expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2213 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStart  ());
#line 2216 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360023, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360023_MoveThroughMarkers_11(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360023
if(!(m_penMarker  != NULL  && IsOfClass  (m_penMarker  , "Enemy Marker"))){ Jump(STATE_CURRENT,0x01360024, FALSE, EInternal());return TRUE;}
#line 2217 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEnemyMarker  * pem  = (CEnemyMarker  *) & * m_penMarker ;
#line 2220 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vStartPosition  = m_penMarker  -> GetPlacement  () . pl_PositionVector ;
#line 2222 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fR  = FRnd  () * pem  -> m_fMarkerRange ;
#line 2223 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 2224 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = m_vStartPosition  + FLOAT3D (CosFast  (fA ) * fR  , 0 , SinFast  (fA ) * fR );
#line 2226 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(pem  -> m_betRunToMarker  == BET_TRUE ){
#line 2228 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fAttackRunSpeed );
#line 2229 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aAttackRotateSpeed );
#line 2231 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
RunningAnim  ();
#line 2233 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2235 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fWalkSpeed );
#line 2236 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aWalkRotateSpeed );
#line 2238 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WalkingAnim  ();
#line 2239 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2242 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_MoveToDestination, TRUE;
Jump(STATE_CURRENT, 0x01360019, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360019_MoveThroughMarkers_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360019
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_MoveToDestination, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136001a, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136001a_MoveThroughMarkers_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001a
const EReturn&__e= (EReturn&)__eeInput;
;
#line 2245 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEnemyMarker  * pem  = (CEnemyMarker  *) & * m_penMarker ;
#line 2246 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetBoolFromBoolEType  (m_bBlind  , pem  -> m_betBlind );
#line 2247 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetBoolFromBoolEType  (m_bDeaf  , pem  -> m_betDeaf );
#line 2250 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(pem  -> m_bStartTactics ){
#line 2252 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bBlind  = FALSE ;
#line 2253 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bDeaf  = FALSE ;
#line 2255 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StartTacticsNow  ();
#line 2256 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2259 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(!(pem  -> m_fPatrolTime  > 0.0f)){ Jump(STATE_CURRENT,0x0136001d, FALSE, EInternal());return TRUE;}
#line 2261 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SpawnReminder  (this  , pem  -> m_fPatrolTime  , 0);
#line 2263 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x0136001b, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136001b_MoveThroughMarkers_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001b
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2267 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_DoPatrolling, TRUE, EVoid());return TRUE;
#line 2268 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReminder):{const EReminder&e= (EReminder&)__eeInput;

#line 2272 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x0136001c, FALSE, EInternal());return TRUE;
#line 2273 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2274 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x0136001c_MoveThroughMarkers_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001c
Jump(STATE_CURRENT,0x0136001d, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136001d_MoveThroughMarkers_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001d

#line 2277 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEnemyMarker  * pem  = (CEnemyMarker  *) & * m_penMarker ;
#line 2279 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(!(pem  -> m_fWaitTime  > 0.0f)){ Jump(STATE_CURRENT,0x01360020, FALSE, EInternal());return TRUE;}
#line 2281 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2282 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2284 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(pem  -> m_fWaitTime );
Jump(STATE_CURRENT, 0x0136001e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136001e_MoveThroughMarkers_06(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136001f, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136001f_MoveThroughMarkers_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001f
;Jump(STATE_CURRENT,0x01360020, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360020_MoveThroughMarkers_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360020

#line 2288 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x01360021, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360021_MoveThroughMarkers_09(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360021
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360022, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360022_MoveThroughMarkers_10(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360022
;
#line 2291 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penMarker  = ((CEnemyMarker  &) * m_penMarker ) . m_penTarget ;Jump(STATE_CURRENT,0x01360023, FALSE, EInternal());return TRUE;
#line 2292 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360024_MoveThroughMarkers_12(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360024

#line 2295 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2296 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2299 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2299 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2308 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
NewEnemySpotted(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_NewEnemySpotted
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::NewEnemySpotted expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2311 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT tmReflex  = Lerp  (m_tmReflexMin  , m_tmReflexMax  , FRnd  ());
#line 2312 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
tmReflex  = ClampDn  (tmReflex  , 0.0f);
#line 2315 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(!(tmReflex  >= _pTimer  -> TickQuantum )){ Jump(STATE_CURRENT,0x01360028, FALSE, EInternal());return TRUE;}
#line 2317 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2318 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2321 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(tmReflex );
Jump(STATE_CURRENT, 0x01360026, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360026_NewEnemySpotted_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360026
switch(__eeInput.ee_slEvent){case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360027, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDamage):{const EDamage&e= (EDamage&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_EHitBySpaceShipBeam):{const EHitBySpaceShipBeam&e= (EHitBySpaceShipBeam&)__eeInput;
return FALSE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 2329 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360027_NewEnemySpotted_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360027
Jump(STATE_CURRENT,0x01360028, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360028_NewEnemySpotted_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360028

#line 2333 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SightSound  ();
#line 2336 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2336 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2340 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_StopAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::StopAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2342 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStart  ());
#line 2344 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTargetNone  ();
#line 2345 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = 0.0f;
#line 2347 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2349 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2349 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2353 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
InitializeAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_InitializeAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::InitializeAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2356 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bBlind  = FALSE ;
#line 2357 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bDeaf  = FALSE ;
#line 2359 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SeeNotify  ();
#line 2360 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStop  ());
#line 2362 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
AddToFuss  ();
#line 2364 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 2367 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < GetProp  (m_fCloseDistance )){
#line 2368 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = 0.0f;
#line 2369 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2370 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + FRnd  ();
#line 2371 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2372 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 2374 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2374 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2379 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
AttackEnemy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_AttackEnemy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::AttackEnemy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2381 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_InitializeAttack, TRUE;
Jump(STATE_CURRENT, 0x0136002c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136002c_AttackEnemy_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_InitializeAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136002d, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136002d_AttackEnemy_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002d
const EReturn&__e= (EReturn&)__eeInput;
;
#line 2384 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360030, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360030_AttackEnemy_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360030
if(!(m_penEnemy  != NULL )){ Jump(STATE_CURRENT,0x01360031, FALSE, EInternal());return TRUE;}
#line 2386 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_PerformAttack, TRUE;
Jump(STATE_CURRENT, 0x0136002e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136002e_AttackEnemy_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_PerformAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136002f, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136002f_AttackEnemy_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002f
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01360030, FALSE, EInternal());return TRUE;
#line 2387 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360031_AttackEnemy_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360031

#line 2390 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_StopAttack, TRUE;
Jump(STATE_CURRENT, 0x01360032, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360032_AttackEnemy_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360032
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_StopAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01360033, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360033_AttackEnemy_08(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360033
const EReturn&__e= (EReturn&)__eeInput;
;
#line 2393 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EBegin  ());
#line 2393 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2397 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PerformAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_PerformAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::PerformAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2400 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fRangeLast  = 1E9f;
#line 2403 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 2404 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 2407 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360037, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360037_PerformAttack_03(const CEntityEvent &__eeInput)
#line 2408 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360037
if(!(TRUE )){ Jump(STATE_CURRENT,0x01360038, FALSE, EInternal());return TRUE;}
#line 2410 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(ShouldCeaseAttack  ()){
#line 2412 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTargetNone  ();
#line 2413 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2413 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2414 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2417 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fEnemyDistance  = CalcDist  (m_penEnemy );
#line 2419 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fRangeLast  > GetProp  (m_fCloseDistance ) && fEnemyDistance  <= GetProp  (m_fCloseDistance )){
#line 2421 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = 0.0f;
#line 2422 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2423 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fRangeLast  = fEnemyDistance ;
#line 2426 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveFrequency  = GetAttackMoveFrequency  (fEnemyDistance );
#line 2427 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PATHPERSISTENT  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 2428 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveFrequency  = 0.1f;
#line 2429 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2432 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fMoveFrequency );
Jump(STATE_CURRENT, 0x01360035, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360035_PerformAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360035
switch(__eeInput.ee_slEvent){case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360036, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2438 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(_pTimer  -> CurrentTick  () > m_fShootTime ){
#line 2441 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penNewEnemy  = GetWatcher  () -> CheckCloserPlayer  (m_penEnemy  , GetThreatDistance  ());
#line 2442 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penNewEnemy  != NULL ){
#line 2444 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTargetHardForce  (penNewEnemy );
#line 2446 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2447 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360036, FALSE, EInternal());return TRUE;
#line 2448 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2451 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsVisible  (m_penEnemy )){
#line 2453 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 2455 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERSPOTTED  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 2457 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 2458 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2461 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2463 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERCURRENT ){
#line 2465 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERSPOTTED ;
#line 2466 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2467 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2470 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_FireOrHit, TRUE, EVoid());return TRUE;
#line 2473 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2475 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((m_dtDestination  == DT_PLAYERSPOTTED  || m_dtDestination  == DT_PATHTEMPORARY ) 
#line 2476 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
&& IsVisible  (m_penEnemy )){
#line 2478 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 2480 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 2481 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2482 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2485 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fAllowedError  = m_fMoveSpeed  * m_fMoveFrequency  * 2.0f;
#line 2486 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PATHPERSISTENT  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 2487 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
fAllowedError  = ((CNavigationMarker  &) * m_penPathMarker ) . m_fMarkerRange ;
#line 2488 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2489 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  != DT_PLAYERCURRENT  && 
#line 2490 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
(CalcDistanceInPlaneToDestination  () < fAllowedError  || fAllowedError  < 0.1f)){
#line 2492 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERSPOTTED ){
#line 2494 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsVisible  (m_penEnemy )){
#line 2496 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 2498 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2500 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PATHTEMPORARY ;
#line 2501 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StartPathFinding  ();
#line 2502 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2504 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_dtDestination  == DT_PATHTEMPORARY  || m_dtDestination  == DT_PATHPERSISTENT ){
#line 2506 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FindNextPathMarker  ();
#line 2507 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2508 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2511 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERCURRENT ){
#line 2513 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 2516 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_dtDestination  == DT_PLAYERSPOTTED ){
#line 2518 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = m_vPlayerSpotted ;
#line 2519 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2522 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vPosDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 2523 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT fPosDistance  = vPosDelta  . Length  ();
#line 2525 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetSpeedsToDesiredPosition  (vPosDelta  , fPosDistance  , m_dtDestination  == DT_PLAYERCURRENT );
#line 2528 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 2529 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MovementAnimation  (ulFlags );
#line 2530 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2531 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&eTouch= (ETouch&)__eeInput;

#line 2534 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IfTargetCrushed  (eTouch  . penOther  , (FLOAT3D &) eTouch  . plCollision ))
#line 2535 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2536 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2537 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2539 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
else if(CheckTouchForPathFinding  (eTouch )){
#line 2541 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360036, FALSE, EInternal());return TRUE;
#line 2543 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_bTacticActive ){
#line 2545 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(eTouch  . penOther  -> GetRenderType  () == CEntity  :: RT_BRUSH ){
#line 2546 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vDir  = en_vDesiredTranslationRelative ;
#line 2547 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDir  . SafeNormalize  ();
#line 2548 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vDir  *= GetRotationMatrix  ();
#line 2550 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((eTouch  . plCollision  % vDir ) < - 0.5f){m_bTacticActive  = 0;}
#line 2551 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2552 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2553 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2554 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2555 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2557 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE;
#line 2558 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2559 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWouldFall):{const EWouldFall&eWouldFall= (EWouldFall&)__eeInput;

#line 2563 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(CheckFallForPathFinding  (eWouldFall )){
#line 2565 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360036, FALSE, EInternal());return TRUE;
#line 2566 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_bTacticActive ){
#line 2568 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bTacticActive  = 0;
#line 2569 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2571 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2573 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE;
#line 2574 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2575 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ESound):{const ESound&e= (ESound&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EWatch):{const EWatch&e= (EWatch&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EReturn):{const EReturn&e= (EReturn&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360036, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 2579 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360036_PerformAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360036
Jump(STATE_CURRENT,0x01360037, FALSE, EInternal());return TRUE;
#line 2580 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360038_PerformAttack_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360038
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2585 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FireOrHit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_FireOrHit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::FireOrHit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2588 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(!(CalcDist  (m_penEnemy ) < GetProp  (m_fCloseDistance ) && CanHitEnemy  (m_penEnemy  , Cos  (AngleDeg  (45.0f))))){ Jump(STATE_CURRENT,0x01360041, FALSE, EInternal());return TRUE;}
#line 2590 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
AddToFuss  ();
#line 2592 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2594 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + GetProp  (m_fCloseFireTime ) * (1.0f + FRnd  () / 3.0f);
#line 2596 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_Hit, TRUE;
Jump(STATE_CURRENT, 0x0136003a, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136003a_FireOrHit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Hit, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136003b, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136003b_FireOrHit_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003b
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01360040, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360041_FireOrHit_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360041
if(!(CalcDist  (m_penEnemy ) < GetProp  (m_fAttackDistance ) && CanAttackEnemy  (m_penEnemy  , Cos  (AngleDeg  (45.0f))))){ Jump(STATE_CURRENT,0x0136003f, FALSE, EInternal());return TRUE;}
#line 2601 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
AddToFuss  ();
#line 2603 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2605 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < GetProp  (m_fCloseDistance )){
#line 2606 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + GetProp  (m_fCloseFireTime ) * (1.0f + FRnd  () / 3.0f);
#line 2607 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2608 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + GetProp  (m_fAttackFireTime ) * (1.0f + FRnd  () / 3.0f);
#line 2609 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2611 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_Fire, TRUE;
Jump(STATE_CURRENT, 0x0136003c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136003c_FireOrHit_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Fire, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136003d, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136003d_FireOrHit_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003d
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x0136003e, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136003f_FireOrHit_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003f
{
#line 2616 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + 0.25f;
#line 2617 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}Jump(STATE_CURRENT,0x0136003e, FALSE, EInternal());return TRUE;}
BOOL CEnemyBase::H0x0136003e_FireOrHit_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003e
Jump(STATE_CURRENT,0x01360040, FALSE, EInternal());return TRUE;}
BOOL CEnemyBase::H0x01360040_FireOrHit_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360040

#line 2620 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2620 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2628 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2630 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2630 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2634 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2636 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2636 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2644 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
LockOnEnemy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_LockOnEnemy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::LockOnEnemy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2647 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2649 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ChargeAnim  ();
#line 2651 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fLockStartTime  = _pTimer  -> CurrentTick  ();
#line 2652 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360047, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360047_LockOnEnemy_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360047
if(!(m_fLockStartTime  + GetProp  (m_fLockOnEnemyTime ) > _pTimer  -> CurrentTick  ())){ Jump(STATE_CURRENT,0x01360048, FALSE, EInternal());return TRUE;}
#line 2654 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveFrequency  = 0.05f;
#line 2655 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fMoveFrequency );
Jump(STATE_CURRENT, 0x01360045, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360045_LockOnEnemy_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360045
switch(__eeInput.ee_slEvent){case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360046, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2658 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 2660 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(! IsInPlaneFrustum  (m_penEnemy  , CosFast  (5.0f))){
#line 2661 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0.0f;
#line 2662 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetLockRotationSpeed  ();
#line 2664 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2665 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0.0f;
#line 2666 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = 0.0f;
#line 2667 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2669 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 2671 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2672 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2673 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360046_LockOnEnemy_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360046
Jump(STATE_CURRENT,0x01360047, FALSE, EInternal());return TRUE;
#line 2674 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360048_LockOnEnemy_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360048

#line 2676 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopRotating  ();
#line 2679 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2679 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2683 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ChargeHitEnemy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_ChargeHitEnemy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::ChargeHitEnemy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2686 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(GetAnimLength  (m_iChargeHitAnimation ));
Jump(STATE_CURRENT, 0x0136004a, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136004a_ChargeHitEnemy_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004a
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x0136004b, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDamage):{const EDamage&e= (EDamage&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EReminder):{const EReminder&e= (EReminder&)__eeInput;

#line 2694 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2695 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2696 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 2700 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if((etouch  . penOther  -> GetFlags  () & ENF_ALIVE ) && IsInPlaneFrustum  (etouch  . penOther  , CosFast  (60.0f))){
#line 2702 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
FLOAT3D vSpeed ;
#line 2703 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetHeadingDirection  (m_fChargeHitAngle  , vSpeed );
#line 2705 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
InflictDirectDamage  (etouch  . penOther  , this  , DMT_CLOSERANGE  , m_fChargeHitDamage  , FLOAT3D (0 , 0 , 0) , vSpeed );
#line 2707 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
vSpeed  = vSpeed  * m_fChargeHitSpeed ;
#line 2708 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
KickEntity  (etouch  . penOther  , vSpeed );
#line 2710 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x0136004b, FALSE, EInternal());return TRUE;
#line 2711 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2712 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE;
#line 2713 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2714 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x0136004b_ChargeHitEnemy_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004b

#line 2716 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(!(! IsAnimFinished  ())){ Jump(STATE_CURRENT,0x0136004e, FALSE, EInternal());return TRUE;}
#line 2718 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(GetCurrentAnimLength  () - GetPassedTime  ());
Jump(STATE_CURRENT, 0x0136004c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136004c_ChargeHitEnemy_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004c
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x0136004d, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EReminder):{const EReminder&e= (EReminder&)__eeInput;

#line 2724 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2725 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2726 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2727 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x0136004d_ChargeHitEnemy_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004d
Jump(STATE_CURRENT,0x0136004e, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136004e_ChargeHitEnemy_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004e

#line 2731 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2731 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2739 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BeWounded(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_BeWounded
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EDamage, "CEnemyBase::BeWounded expects 'EDamage' as input!");  const EDamage &eDamage = (const EDamage &)__eeInput;
#line 2741 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2743 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(GetAnimLength  (AnimForDamage  (eDamage  . fAmount )));
Jump(STATE_CURRENT, 0x01360050, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360050_BeWounded_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360050
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360051, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360051_BeWounded_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360051
;
#line 2744 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2744 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2748 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Die(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Die
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EDeath, "CEnemyBase::Die expects 'EDeath' as input!");  const EDeath &eDeath = (const EDeath &)__eeInput;
#line 2751 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetFlags  (GetFlags  () & ~ ENF_ALIVE );
#line 2754 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penKiller  = eDeath  . eLastDamage  . penInflictor ;
#line 2755 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penKiller  == NULL  || ! IsOfClass  (penKiller  , "Player")){
#line 2756 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penKiller  = m_penEnemy ;
#line 2757 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2759 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penKiller  == NULL  || ! IsOfClass  (penKiller  , "Player")){
#line 2760 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penKiller  = FixupCausedToPlayer  (this  , penKiller  , FALSE );
#line 2761 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2764 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penKiller  != NULL ){
#line 2766 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EReceiveScore  eScore ;
#line 2767 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eScore  . iPoints  = m_iScore ;
#line 2768 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penKiller  -> SendEvent  (eScore );
#line 2769 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(CountAsKill  ())
#line 2770 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2771 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penKiller  -> SendEvent  (EKilledEnemy  ());
#line 2772 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2774 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(GetSP  () -> sp_bCooperative ){
#line 2775 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EComputerMessage  eMsg ;
#line 2776 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eMsg  . fnmMessage  = GetComputerMessageName  ();
#line 2777 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(eMsg  . fnmMessage  != ""){
#line 2778 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penKiller  -> SendEvent  (eMsg );
#line 2779 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2780 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2781 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2785 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStop  ());
#line 2786 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EEnd  ());
#line 2789 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendToTarget  (m_penDeathTarget  , m_eetDeathType  , penKiller );
#line 2792 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penSpawnerTarget ){
#line 2793 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendToTarget  (m_penSpawnerTarget  , EET_TRIGGER  , this );
#line 2794 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2798 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360053, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360053_Die_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360053
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2802 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(ShouldBlowUp  ()){
#line 2804 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 2806 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360054, FALSE, EInternal());return TRUE;
#line 2808 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2810 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_DeathSequence, TRUE, EVoid());return TRUE;
#line 2811 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2812 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):{const EDamage&e= (EDamage&)__eeInput;

#line 2816 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(ShouldBlowUp  ()){
#line 2818 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 2820 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360054, FALSE, EInternal());return TRUE;
#line 2821 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2823 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2824 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnd):{const EEnd&e= (EEnd&)__eeInput;

#line 2828 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360054, FALSE, EInternal());return TRUE;
#line 2829 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2830 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360054_Die_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360054

#line 2833 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
RemoveFromFuss  ();
#line 2835 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Destroy  ();
#line 2838 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 2838 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2841 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Death(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Death
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Death expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2843 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2844 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DeathSound  ();
#line 2845 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
LeaveStain  (FALSE );
#line 2848 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetPhysicsFlags  (EPF_MODEL_CORPSE );
#line 2849 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_CORPSE );
#line 2850 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2853 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
RemoveFromFuss  ();
#line 2856 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DeathNotify  ();
#line 2859 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
INDEX iAnim  = AnimForDeath  ();
#line 2861 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vTacticsStartPosition  = FLOAT3D (1 , 1 , 1);
#line 2862 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar4  = WaitForDust  (m_vTacticsStartPosition );
#line 2864 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar5  = _pTimer  -> CurrentTick  ();
#line 2866 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar3  = - 1;
#line 2868 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(!(m_fTacticVar4  < 0)){ Jump(STATE_CURRENT,0x0136005e, FALSE, EInternal());return TRUE;}
#line 2870 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(GetAnimLength  (iAnim ));
Jump(STATE_CURRENT, 0x01360056, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360056_Death_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360056
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360057, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360057_Death_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360057
;Jump(STATE_CURRENT,0x0136005d, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136005e_Death_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005e
if(!(TRUE )){ Jump(STATE_CURRENT,0x0136005c, FALSE, EInternal());return TRUE;}
#line 2875 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x0136005a, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136005a_Death_05(const CEntityEvent &__eeInput)
#line 2876 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005a
if(!(_pTimer  -> CurrentTick  () < m_fTacticVar5  + GetCurrentAnimLength  ())){ Jump(STATE_CURRENT,0x0136005b, FALSE, EInternal());return TRUE;}
#line 2877 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x01360058, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360058_Death_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360058
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360059, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360059_Death_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360059
;
#line 2878 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(en_penReference  != NULL  && _pTimer  -> CurrentTick  () >= m_fTacticVar5  + m_fTacticVar4  && m_fTacticVar3  < 0)
#line 2879 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2881 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D plFX  = GetPlacement  ();
#line 2882 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ESpawnEffect  ese ;
#line 2883 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2884 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . vStretch  = m_vTacticsStartPosition ;
#line 2885 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 2886 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ese  . betType  = BET_DUST_FALL ;
#line 2887 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CPlacement3D plSmoke  = plFX ;
#line 2888 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
plSmoke  . pl_PositionVector  += FLOAT3D (0 , 0.35f * m_vTacticsStartPosition  (2) , 0);
#line 2889 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penFX  = CreateEntity  (plSmoke  , CLASS_BASIC_EFFECT );
#line 2890 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penFX  -> Initialize  (ese );
#line 2891 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penFX  -> SetParent  (this );
#line 2893 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fTacticVar3  = 1;
#line 2894 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}Jump(STATE_CURRENT,0x0136005a, FALSE, EInternal());return TRUE;
#line 2895 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x0136005b_Death_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005b
Jump(STATE_CURRENT,0x0136005c, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136005c_Death_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005c
Jump(STATE_CURRENT,0x0136005d, FALSE, EInternal());return TRUE;}
BOOL CEnemyBase::H0x0136005d_Death_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005d

#line 2898 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EEnd  ());
#line 2898 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2901 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
DeathSequence(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_DeathSequence
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::DeathSequence expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2904 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_Death, TRUE;
Jump(STATE_CURRENT, 0x01360060, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360060_DeathSequence_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360060
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Death, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01360061, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360061_DeathSequence_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360061
const EEnd&__e= (EEnd&)__eeInput;
;
#line 2907 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
LeaveStain  (TRUE );
#line 2910 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntityPointer penFlame  = GetChildOfClass  ("Flame");
#line 2911 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(penFlame  != NULL )
#line 2912 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{
#line 2914 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EStopFlaming  esf ;
#line 2915 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
esf  . m_bNow  = FALSE ;
#line 2916 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
penFlame  -> SendEvent  (esf );
#line 2917 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2919 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(2.0f);
Jump(STATE_CURRENT, 0x01360062, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360062_DeathSequence_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360062
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360063, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360063_DeathSequence_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360063
;
#line 2922 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fSpiritStartTime  = _pTimer  -> CurrentTick  ();
#line 2923 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fFadeStartTime  = _pTimer  -> CurrentTick  ();
#line 2924 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fFadeTime  = 1.0f , 
#line 2925 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bFadeOut  = TRUE ;
#line 2927 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_CORPSE  & ~ ((ECBI_PROJECTILE_MAGIC  | ECBI_PROJECTILE_SOLID ) << ECB_TEST ));
#line 2929 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fFadeTime );
Jump(STATE_CURRENT, 0x01360064, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360064_DeathSequence_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360064
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360065, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360065_DeathSequence_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360065
;
#line 2931 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(6.0f);
Jump(STATE_CURRENT, 0x01360066, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360066_DeathSequence_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360066
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360067, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360067_DeathSequence_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360067
;
#line 2933 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EEnd  ());
#line 2933 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2940 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Active(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Active
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Active expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2942 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = 0.0f;
#line 2944 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360069, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360069_Active_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360069
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2948 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2949 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2950 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReconsiderBehavior):{const EReconsiderBehavior&e= (EReconsiderBehavior&)__eeInput;

#line 2954 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL ){
#line 2956 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_AttackEnemy, TRUE, EVoid());return TRUE;
#line 2958 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_penMarker  != NULL ){
#line 2960 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_MoveThroughMarkers, TRUE, EVoid());return TRUE;
#line 2962 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else if(m_bOnStartPosition ){
#line 2964 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bOnStartPosition  = FALSE ;
#line 2965 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeIdle, TRUE, EVoid());return TRUE;
#line 2967 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 2969 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_ReturnToStartPosition, TRUE, EVoid());return TRUE;
#line 2970 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2971 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2972 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):{const EReturn&e= (EReturn&)__eeInput;

#line 2976 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2977 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2978 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ERestartAttack):{const ERestartAttack&e= (ERestartAttack&)__eeInput;

#line 2982 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2983 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2984 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWatch):{const EWatch&eWatch= (EWatch&)__eeInput;

#line 2988 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(SetTargetSoft  (eWatch  . penSeen )){
#line 2990 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bBlind  && m_bTacticsStartOnSense ){
#line 2991 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StartTacticsNow  ();
#line 2992 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2994 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_NewEnemySpotted, TRUE, EVoid());return TRUE;
#line 2995 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 2996 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2997 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):{const EDamage&eDamage= (EDamage&)__eeInput;

#line 3001 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTargetHard  (eDamage  . penInflictor );
#line 3004 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fDamageConfused  -= eDamage  . fAmount ;
#line 3005 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fDamageConfused  < 0.001f){
#line 3006 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 3008 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WoundedNotify  (eDamage );
#line 3010 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WoundSound  ();
#line 3012 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, eDamage );return TRUE;
#line 3013 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3014 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3015 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EForceWound):
#line 3017 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
{const EForceWound&e= (EForceWound&)__eeInput;

#line 3018 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, EDamage  ());return TRUE;
#line 3019 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3020 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ESound):{const ESound&eSound= (ESound&)__eeInput;

#line 3024 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bDeaf ){
#line 3026 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3027 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3030 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsVisible  (eSound  . penTarget ) && SetTargetSoft  (eSound  . penTarget )){
#line 3032 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_NewEnemySpotted, TRUE, EVoid());return TRUE;
#line 3033 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3034 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3035 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&eTouch= (ETouch&)__eeInput;

#line 3039 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
BOOL bTargetChanged  = SetTargetHard  (eTouch  . penOther );
#line 3041 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(bTargetChanged ){
#line 3043 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SightSound  ();
#line 3045 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 3046 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3047 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return FALSE;
#line 3048 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 3051 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused );
#line 3053 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(SetTargetSoft  (penCaused )){
#line 3055 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SightSound  ();
#line 3057 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 3058 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3059 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3060 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 3063 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Inactive, TRUE, EVoid());return TRUE;
#line 3064 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStartAttack):{const EStartAttack&e= (EStartAttack&)__eeInput;

#line 3069 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3070 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopAttack):{const EStopAttack&e= (EStopAttack&)__eeInput;

#line 3073 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3074 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3075 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x0136006a_Active_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136006a
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 3079 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Inactive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Inactive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Inactive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3082 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 3083 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 3085 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStart  ());
#line 3087 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x0136006c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136006c_Inactive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136006c
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;

#line 3092 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 3093 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):{const EReturn&e= (EReturn&)__eeInput;

#line 3097 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 3098 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 3101 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEntity  * penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused );
#line 3103 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(SetTargetSoft  (penCaused )){
#line 3105 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 3106 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3107 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):{const EDamage&eDamage= (EDamage&)__eeInput;

#line 3111 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(SetTargetHard  (eDamage  . penInflictor )){
#line 3113 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WoundedNotify  (eDamage );
#line 3115 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
WoundSound  ();
#line 3117 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, eDamage );return TRUE;
#line 3118 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3119 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 3119 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3120 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3121 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x0136006d_Inactive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136006d
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 3125 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
PreMainLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_PreMainLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::PreMainLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3127 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 3127 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 3131 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
MainLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MainLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MainLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3134 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SizeModel  ();
#line 3136 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_fMaxHealth  == GetHealth  () || IsOfClass  (this  , "Devil") || IsOfClass  (this  , "ExotechLarva") || IsOfClass  (this  , "AirElemental") || IsOfClass  (this  , "Summoner"));
#line 3139 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_tmReflexMin  < 0){
#line 3140 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmReflexMin  = 0.0f;
#line 3141 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3142 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_tmReflexMin  > m_tmReflexMax ){
#line 3143 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_tmReflexMax  = m_tmReflexMin ;
#line 3144 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3147 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_fStepHeight  == - 1){
#line 3148 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_fStepHeight  = 2.0f;
#line 3149 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3152 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_bTemplate ){
#line 3154 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 3154 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3155 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3164 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x01360070, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360070_MainLoop_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360070
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360071, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360071_MainLoop_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360071
;
#line 3167 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penWatcher  = CreateEntity  (GetPlacement  () , CLASS_WATCHER );
#line 3168 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EWatcherInit  eInitWatcher ;
#line 3169 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
eInitWatcher  . penOwner  = this ;
#line 3170 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> Initialize  (eInitWatcher );
#line 3173 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penMarker  != NULL  && IsOfClass  (m_penMarker  , "Enemy Marker")){
#line 3174 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
CEnemyMarker  * pem  = (CEnemyMarker  *) & * m_penMarker ;
#line 3175 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_penMarker  = pem  -> m_penTarget ;
#line 3176 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3180 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_vStartPosition  = GetPlacement  () . pl_PositionVector ;
#line 3183 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_soSound  . Set3DParameters  (80.0f , 5.0f , 1.0f , 1.0f);
#line 3186 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
en_fStepUpHeight  = m_fStepHeight  + 0.01f;
#line 3187 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
en_fStepDnHeight  = m_fFallHeight  + 0.01f;
#line 3190 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
EnemyPostInit  ();
#line 3193 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
AdjustDifficulty  ();
#line 3196 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_fStopDistance  >= 0);
#line 3197 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_fCloseDistance  >= 0);
#line 3198 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_fAttackDistance  > m_fCloseDistance );
#line 3199 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
ASSERT  (m_fIgnoreRange  > m_fAttackDistance );
#line 3201 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetPredictable  (TRUE );
#line 3203 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_PreMainLoop, TRUE;
Jump(STATE_CURRENT, 0x01360072, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360072_MainLoop_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360072
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_PreMainLoop, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01360073, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360073_MainLoop_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360073
const EReturn&__e= (EReturn&)__eeInput;
;
#line 3205 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_StandardBehavior, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 3208 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
StandardBehavior(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_StandardBehavior
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::StandardBehavior expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3211 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360075, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360075_StandardBehavior_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360075
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 3215 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL ){
#line 3216 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 3217 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}else {
#line 3218 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_Inactive, TRUE, EVoid());return TRUE;
#line 3219 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3220 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&eDeath= (EDeath&)__eeInput;

#line 3224 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Die, TRUE, eDeath );return TRUE;
#line 3225 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETeleport):{const ETeleport&et= (ETeleport&)__eeInput;

#line 3229 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (et );
#line 3230 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3231 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopBlindness):{const EStopBlindness&e= (EStopBlindness&)__eeInput;

#line 3235 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bBlind  = FALSE ;
#line 3236 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3237 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopDeafness):{const EStopDeafness&e= (EStopDeafness&)__eeInput;

#line 3241 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
m_bDeaf  = FALSE ;
#line 3242 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3243 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&eTouch= (ETouch&)__eeInput;

#line 3246 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
IfTargetCrushed  (eTouch  . penOther  , (FLOAT3D &) eTouch  . plCollision );
#line 3247 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
if(IsOfClass  (eTouch  . penOther  , "Bouncer")){
#line 3248 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
JumpFromBouncer  (this  , eTouch  . penOther );
#line 3249 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}
#line 3250 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE;
#line 3251 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3252 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360076_StandardBehavior_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360076
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 3256 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3257 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 3257 "C:/MyMod/Sources/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};
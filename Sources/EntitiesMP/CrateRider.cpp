/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"

#include "StdH.h"
#include "Models/Enemies/Mental/Mental.h"
#include "Models/CutSequences/CrateRider/Crate.h"

#include <EntitiesMP/CrateRider.h>
#include <EntitiesMP/CrateRider_tables.h>
#line 11 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"

// info structure
static EntityInfo eiCrate = {
  EIBT_FLESH, 500.0f,
  0.0f, 1.5f, 0.0f,     // source (eyes)
  0.0f, 1.0f, 0.0f,     // target (body)
};

#define GREET_SENSE_RANGE 10.0f
#define GREET_SENSE_DELAY 10.0f


void CCrateRider::SetDefaultProperties(void) {
  m_fnmHeadTex1 = CTString("");
  m_fnmHeadTex2 = CTString("");
  m_fnmDriveSnd = CTString("");
  CEnemyBase::SetDefaultProperties();
}
  
#line 56 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void * CCrateRider::GetEntityInfo(void) 
#line 57 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
{
#line 58 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
return & eiCrate ;
#line 59 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 61 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::Precache(void) 
#line 62 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
{
#line 63 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CEnemyBase  :: Precache  ();
#line 65 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
PrecacheClass  (CLASS_DEBRIS );
#line 67 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_apt1  . Precache  (m_fnmHeadTex1 );
#line 68 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_apt2  . Precache  (m_fnmHeadTex2 );
#line 69 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_aps  . Precache  (m_fnmDriveSnd );
#line 70 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 73 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
INDEX CCrateRider::AnimForDamage(FLOAT fDamage) {
#line 74 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
INDEX iAnim ;
#line 75 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
iAnim  = 0;
#line 76 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
StartModelAnim  (iAnim  , 0);
#line 77 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
return iAnim ;
#line 78 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 81 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
INDEX CCrateRider::AnimForDeath(void) {
#line 82 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
INDEX iAnim ;
#line 83 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
iAnim  = 0;
#line 84 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
StartModelAnim  (iAnim  , 0);
#line 85 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
return iAnim ;
#line 86 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 88 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::DeathNotify(void) {
#line 90 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
en_fDensity  = 500.0f;
#line 91 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 94 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::StandingAnim(void) {
#line 95 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
StartModelAnim  (CRATE_ANIM_DEFAULT  , AOF_LOOPING  | AOF_NORESTART  | AOF_SMOOTHCHANGE );
#line 97 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CModelObject * pmo0  = & (GetModelObject  () -> GetAttachmentModel  (0) -> amo_moModelObject );
#line 98 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
pmo0  -> PlayAnim  (MENTAL_ANIM_CRATEANIMLEFTSEATING  , AOF_LOOPING  | AOF_NORESTART  | AOF_SMOOTHCHANGE );
#line 99 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CModelObject * pmo1  = & (GetModelObject  () -> GetAttachmentModel  (1) -> amo_moModelObject );
#line 100 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
pmo1  -> PlayAnim  (MENTAL_ANIM_CRATEANIMRIGHTSEATING  , AOF_LOOPING  | AOF_NORESTART  | AOF_SMOOTHCHANGE );
#line 102 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_soSound  . Stop  ();
#line 103 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 104 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::WalkingAnim(void) {
#line 105 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
RunningAnim  ();
#line 106 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
StartModelAnim  (CRATE_ANIM_DRIVE  , AOF_LOOPING  | AOF_NORESTART );
#line 107 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 108 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::RunningAnim(void) 
#line 109 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
{
#line 110 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
if(m_fnmDriveSnd  != ""){
#line 111 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
PlaySound  (m_soSound  , m_fnmDriveSnd  , SOF_3D );
#line 112 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
#line 113 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CModelObject * pmo0  = & (GetModelObject  () -> GetAttachmentModel  (0) -> amo_moModelObject );
#line 114 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
pmo0  -> PlayAnim  (MENTAL_ANIM_CRATEANIMLEFT  , AOF_LOOPING  | AOF_NORESTART );
#line 115 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CModelObject * pmo1  = & (GetModelObject  () -> GetAttachmentModel  (1) -> amo_moModelObject );
#line 116 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
pmo1  -> PlayAnim  (MENTAL_ANIM_CRATEANIMRIGHT  , AOF_LOOPING  | AOF_NORESTART );
#line 118 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
StartModelAnim  (CRATE_ANIM_DRIVE  , AOF_LOOPING  | AOF_NORESTART );
#line 119 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 120 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::RotatingAnim(void) {
#line 121 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
RunningAnim  ();
#line 122 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 125 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::IdleSound(void) {
#line 127 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 129 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::SightSound(void) {
#line 131 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 132 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::WoundSound(void) {
#line 134 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 135 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::DeathSound(void) {
#line 137 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
  
#line 139 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
void CCrateRider::AddRider(INDEX i,const CTFileName & fnmHead) 
#line 140 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
{
#line 141 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
AddAttachment  (i  , MODEL_MENTAL  , TEXTURE_MENTAL );
#line 142 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CModelObject * pmoMain  = & (GetModelObject  () -> GetAttachmentModel  (i ) -> amo_moModelObject );
#line 144 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
pmoMain  -> PlayAnim  (i  == 0 ? MENTAL_ANIM_CRATEANIMLEFT  : MENTAL_ANIM_CRATEANIMRIGHT  , AOF_LOOPING );
#line 145 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
AddAttachmentToModel  (this  , * pmoMain  , 0 , MODEL_HEAD  , TEXTURE_MENTAL  , 0 , 0 , 0);
#line 146 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CModelObject * pmoHead  = & (pmoMain  -> GetAttachmentModel  (0) -> amo_moModelObject );
#line 147 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
if(fnmHead  != ""){
#line 149 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
try {
#line 150 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
pmoHead  -> mo_toTexture  . SetData_t  (fnmHead );
#line 152 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}catch  (char  * strError ){
#line 154 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
CPrintF  ("%s\n" , strError );
#line 155 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
#line 156 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
#line 157 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
}
BOOL CCrateRider::
#line 164 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCrateRider_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCrateRider::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 166 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
InitAsModel  ();
#line 167 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
SetPhysicsFlags  (EPF_MODEL_WALKING  | EPF_HASLUNGS );
#line 168 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
SetCollisionFlags  (ECF_MODEL );
#line 169 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
SetFlags  (GetFlags  () | ENF_ALIVE );
#line 170 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
SetHealth  (1.0f);
#line 171 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fMaxHealth  = 1.0f;
#line 172 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
en_tmMaxHoldBreath  = 5.0f;
#line 173 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
en_fDensity  = 2000.0f;
#line 174 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fBlowUpSize  = 2.0f;
#line 177 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
SetModel  (MODEL_CRATE );
#line 178 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
SetModelMainTexture  (TEXTURE_CRATE );
#line 179 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
AddRider  (0 , m_fnmHeadTex1 );
#line 180 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
AddRider  (1 , m_fnmHeadTex2 );
#line 183 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fWalkSpeed  = 
#line 184 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fAttackRunSpeed  = 
#line 185 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fCloseRunSpeed  = 1.0f;
#line 186 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_aWalkRotateSpeed  = AngleDeg  (30.0f);
#line 187 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_aAttackRotateSpeed  = AngleDeg  (30);
#line 188 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_aCloseRotateSpeed  = AngleDeg  (30);
#line 190 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fAttackDistance  = 50.0f;
#line 191 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fCloseDistance  = 0.0f;
#line 192 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fStopDistance  = 5.0f;
#line 193 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fAttackFireTime  = 2.0f;
#line 194 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fCloseFireTime  = 1.0f;
#line 195 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fIgnoreRange  = 200.0f;
#line 197 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fBlowUpAmount  = 0.0f;
#line 198 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fBodyParts  = 4;
#line 199 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_fDamageWounded  = 1.0f;
#line 200 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_iScore  = 0;
#line 201 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_bBlind  = TRUE ;
#line 202 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
m_bRobotBlowup  = TRUE ;
#line 206 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
const FLOAT fSize  = 0.6f;
#line 207 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
GetModelObject  () -> StretchModel  (FLOAT3D (fSize  , fSize  , fSize ));
#line 208 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
ModelChangeNotify  ();
#line 209 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
StandingAnim  ();
#line 212 "C:/MyMod/Sources/EntitiesMP/CrateRider.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};
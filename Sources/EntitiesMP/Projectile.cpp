/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/Projectile.es"

#include "StdH.h"
#include "Models/Weapons/Laser/Projectile/LaserProjectile.h"
#include "EntitiesMP/EnemyBase.h"
//#include "EntitiesMP/Dragonman.h"
#include "Models/Enemies/Elementals/Projectile/IcePyramid.h"
#include "Models/Enemies/ElementalLava/Projectile/LavaStone.h"
#include "Models/Enemies/ElementalLava/Projectile/LavaBomb.h"
#include "Models/Enemies/Headman/Projectile/Blade.h"
#include "Models/Enemies/Huanman/Projectile/Projectile.h"
#include "Models/Enemies/Cyborg/Projectile/LaserProjectile.h"
  
#include "ModelsMP/Enemies/Grunt/Projectile/GruntProjectile.h"
#include "ModelsMP/Enemies/Guffy/Projectile/GuffyProjectile.h"

#include "ModelsMP/Enemies/ExotechLarva/Weapons/PlasmaGun.h"

#include "EntitiesMP/PlayerWeapons.h"
#include "EntitiesMP/Shooter.h"

#define DEVIL_LASER_SPEED 100.0f
#define DEVIL_ROCKET_SPEED 60.0f

#include <EntitiesMP/Projectile.h>
#include <EntitiesMP/Projectile_tables.h>
CEntityEvent *ELaunchProjectile::MakeCopy(void) { CEntityEvent *peeCopy = new ELaunchProjectile(*this); return peeCopy;}
ELaunchProjectile::ELaunchProjectile() : CEntityEvent(EVENTCODE_ELaunchProjectile) {;
 ClearToDefault(penLauncher);
 ClearToDefault(prtType);
 ClearToDefault(fSpeed);
 ClearToDefault(fStretch);
};
#line 111 "C:/MyMod/Sources/EntitiesMP/Projectile.es"

#define DRAGONMAN_NORMAL 0
#define DRAGONMAN_STRONG 1

#define ELEMENTAL_LARGE   2
#define ELEMENTAL_BIG     1
#define ELEMENTAL_NORMAL  0

#define ELEMENTAL_STONEMAN 0
#define ELEMENTAL_LAVAMAN  1
#define ELEMENTAL_ICEMAN   2

void CProjectile_OnInitClass(void)
{
}

void CProjectile_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) 
{
  pdec->PrecacheTexture(TEX_REFL_BWRIPLES01);
  pdec->PrecacheTexture(TEX_REFL_BWRIPLES02);
  pdec->PrecacheTexture(TEX_REFL_LIGHTMETAL01);
  pdec->PrecacheTexture(TEX_REFL_LIGHTBLUEMETAL01);
  pdec->PrecacheTexture(TEX_REFL_DARKMETAL);
  pdec->PrecacheTexture(TEX_REFL_PURPLE01);

  pdec->PrecacheTexture(TEX_SPEC_WEAK);
  pdec->PrecacheTexture(TEX_SPEC_MEDIUM);
  pdec->PrecacheTexture(TEX_SPEC_STRONG);

  switch ((ProjectileType)iUser) {
  case PRT_ROCKET                :
  case PRT_WALKER_ROCKET         :
  case PRT_DEVIL_ROCKET          :
    pdec->PrecacheModel(MODEL_ROCKET  );
    pdec->PrecacheTexture(TEXTURE_ROCKET);
    pdec->PrecacheSound(SOUND_FLYING  );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET_PLANE);
    break;
  case PRT_GRENADE:
    pdec->PrecacheModel(MODEL_GRENADE);
    pdec->PrecacheTexture(TEXTURE_GRENADE);
    pdec->PrecacheSound(SOUND_GRENADE_BOUNCE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
    break;
  
  case PRT_FLAME:
    pdec->PrecacheModel(MODEL_FLAME);
    pdec->PrecacheClass(CLASS_FLAME);
    break;

  case PRT_LASER_RAY:
    pdec->PrecacheModel(MODEL_LASER                   );
    pdec->PrecacheTexture(TEXTURE_GREEN_LASER         );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
    break;

  case PRT_GRUNT_PROJECTILE_SOL:
    pdec->PrecacheModel(MODEL_GRUNT_PROJECTILE           );
    pdec->PrecacheTexture(TEXTURE_GRUNT_PROJECTILE_01    );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
    break;

  case PRT_GRUNT_PROJECTILE_COM:
    pdec->PrecacheModel(MODEL_GRUNT_PROJECTILE           );
    pdec->PrecacheTexture(TEXTURE_GRUNT_PROJECTILE_02    );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
    break;

  case PRT_CATMAN_FIRE:
    pdec->PrecacheModel(MODEL_CATMAN_FIRE             );
    pdec->PrecacheTexture(TEXTURE_CATMAN_FIRE         );
    break;

  case PRT_HEADMAN_FIRECRACKER:
    pdec->PrecacheModel(MODEL_HEADMAN_FIRECRACKER     );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_FIRECRACKER );
    break;
  case PRT_HEADMAN_ROCKETMAN:
    pdec->PrecacheModel(MODEL_HEADMAN_BLADE           );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_BLADE       );
    pdec->PrecacheModel(MODEL_HEADMAN_BLADE_FLAME     );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_BLADE_FLAME );
    break;
  case PRT_HEADMAN_BOMBERMAN:
    pdec->PrecacheModel(MODEL_HEADMAN_BOMB         );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_BOMB     );  
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_BOMB);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
    break;

  case PRT_BONEMAN_FIRE:
    pdec->PrecacheModel(MODEL_BONEMAN_FIRE         );
    pdec->PrecacheTexture(TEXTURE_BONEMAN_FIRE     );
    break;

  case PRT_WOMAN_FIRE:
    pdec->PrecacheModel(MODEL_WOMAN_FIRE           );
    pdec->PrecacheTexture(TEXTURE_WOMAN_FIRE       );
    break;

  case PRT_DRAGONMAN_FIRE:
  case PRT_DRAGONMAN_STRONG_FIRE:
    pdec->PrecacheModel(MODEL_DRAGONMAN_FIRE       );
    pdec->PrecacheTexture(TEXTURE_DRAGONMAN_FIRE1  );
    pdec->PrecacheTexture(TEXTURE_DRAGONMAN_FIRE2  );
    break;

  case PRT_STONEMAN_FIRE:
  case PRT_STONEMAN_BIG_FIRE:
  case PRT_STONEMAN_LARGE_FIRE:
    pdec->PrecacheModel(MODEL_ELEM_STONE           );
    pdec->PrecacheTexture(TEXTURE_ELEM_STONE       ); 
    break;
  case PRT_LAVAMAN_BIG_BOMB:
  case PRT_LAVAMAN_BOMB:
  case PRT_LAVAMAN_STONE:
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE_FLARE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB_FLARE);
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE_FLARE ); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB_FLARE); 
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    break;
  case PRT_METEOR:
    pdec->PrecacheSound(SOUND_FLYING  );
    pdec->PrecacheSound(SOUND_METEOR_BLAST  );
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);

    break;

  case PRT_ICEMAN_FIRE:
  case PRT_ICEMAN_BIG_FIRE:
  case PRT_ICEMAN_LARGE_FIRE:
    pdec->PrecacheModel(MODEL_ELEM_ICE          );  
    pdec->PrecacheModel(MODEL_ELEM_ICE_FLARE    );  
    pdec->PrecacheTexture(TEXTURE_ELEM_ICE      );    
  //pdec->PrecacheTexture(TEXTURE_ELEM_ICE_FLARE);    
    break;

  case PRT_HUANMAN_FIRE:
    pdec->PrecacheModel(MODEL_HUANMAN_FIRE      );
    pdec->PrecacheTexture(TEXTURE_HUANMAN_FIRE  );
    pdec->PrecacheModel(MODEL_HUANMAN_FLARE     );
    pdec->PrecacheTexture(TEXTURE_HUANMAN_FLARE );
    break;

  case PRT_FISHMAN_FIRE:
    pdec->PrecacheModel(MODEL_FISHMAN_FIRE      );
    pdec->PrecacheTexture(TEXTURE_FISHMAN_FIRE  );
    break;

  case PRT_MANTAMAN_FIRE:
    pdec->PrecacheModel(MODEL_MANTAMAN_FIRE     );
    pdec->PrecacheTexture(TEXTURE_MANTAMAN_FIRE );
    break;

  case PRT_DEVIL_LASER:         
    /*
    pdec->PrecacheModel(MODEL_DEVIL_LASER      );
    pdec->PrecacheTexture(TEXTURE_DEVIL_LASER  ); 
    break;
    */

  case PRT_CYBORG_LASER:         
  case PRT_CYBORG_BOMB:
    pdec->PrecacheModel(MODEL_CYBORG_LASER      );
    pdec->PrecacheTexture(TEXTURE_CYBORG_LASER  ); 
    pdec->PrecacheModel(MODEL_CYBORG_BOMB       );
    pdec->PrecacheTexture(TEXTURE_CYBORG_BOMB   ); 
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_BOMB);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
    break;

  case PRT_LAVA_COMET:
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE_FLARE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB_FLARE);
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE_FLARE ); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB_FLARE); 
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    pdec->PrecacheModel(MODEL_LAVA          );
    pdec->PrecacheTexture(TEXTURE_LAVA      );
    pdec->PrecacheModel(MODEL_LAVA_FLARE    );
    pdec->PrecacheTexture(TEXTURE_LAVA_FLARE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    break;
  case PRT_BEAST_PROJECTILE:
  case PRT_BEAST_DEBRIS:
    pdec->PrecacheSound(SOUND_BEAST_FLYING  );
    pdec->PrecacheModel(MODEL_BEAST_FIRE);
    pdec->PrecacheTexture(TEXTURE_BEAST_FIRE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
    break;
  case PRT_GUFFY_PROJECTILE:
    pdec->PrecacheSound(SOUND_FLYING                   );
    pdec->PrecacheModel(MODEL_GUFFY_PROJECTILE         );
    pdec->PrecacheTexture(TEXTURE_GUFFY_PROJECTILE     );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET );
    break;
  case PRT_BEAST_BIG_PROJECTILE:
  case PRT_DEVIL_GUIDED_PROJECTILE:
  case PRT_BEAST_BIG_DEBRIS:
  case PRT_SHOOTER_FIREBALL:
    pdec->PrecacheSound(SOUND_BEAST_FLYING  );
    pdec->PrecacheModel(MODEL_BEAST_FIRE);
    pdec->PrecacheTexture(TEXTURE_BEAST_BIG_FIRE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);
    break;
  case PRT_DEMON_FIREBALL:
  case PRT_DEMON_FIREBALL_DEBRIS:
    pdec->PrecacheSound(SOUND_DEMON_FLYING  );
    pdec->PrecacheModel(MODEL_DEMON_FIREBALL);
    pdec->PrecacheTexture(TEXTURE_DEMON_FIREBALL);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);
    break;
  case PRT_LARVA_PLASMA:
    pdec->PrecacheSound(SOUND_DEMON_FLYING  );
    pdec->PrecacheModel(MODEL_LARVA_PLASMA);
    pdec->PrecacheTexture(TEXTURE_LARVA_PLASMA);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);    
    break;
  case PRT_LARVA_TAIL_PROJECTILE:
    pdec->PrecacheSound(SOUND_LARVETTE  );
    pdec->PrecacheModel(MODEL_LARVA_TAIL);
    pdec->PrecacheTexture(TEXTURE_LARVA_TAIL);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
    break;
  case PRT_SHOOTER_WOODEN_DART:
    pdec->PrecacheModel(MODEL_SHTR_WOODEN_DART);
    pdec->PrecacheTexture(TEX_SHTR_WOODEN_DART);
    break;
  case PRT_SHOOTER_FLAME:
    pdec->PrecacheModel(MODEL_FLAME);
    pdec->PrecacheClass(CLASS_FLAME);
    break;
  case PRT_AIRELEMENTAL_WIND:
    pdec->PrecacheModel(MODEL_WINDBLAST);
    pdec->PrecacheTexture(TEXTURE_WINDBLAST);    
    break;
  case PRT_AFTERBURNER_DEBRIS:
    pdec->PrecacheModel(MODEL_MARKER);
    pdec->PrecacheTexture(TEXTURE_MARKER);    
    break;
  default:
    ASSERT(FALSE);
  }
}

void CProjectile::SetDefaultProperties(void) {
  m_penLauncher = NULL;
  m_prtType = PRT_ROCKET ;
  m_pmtMove = PMT_FLYING ;
  m_penParticles = NULL;
  m_penTarget = NULL;
  m_penLastDamaged = NULL;
  m_fSpeed = 0.0f;
  m_fIgnoreTime = 0.0f;
  m_fFlyTime = 0.0f;
  m_fStartTime = 0.0f;
  m_fDamageAmount = 0.0f;
  m_fRangeDamageAmount = 0.0f;
  m_fDamageHotSpotRange = 0.0f;
  m_fDamageFallOffRange = 0.0f;
  m_fSoundRange = 0.0f;
  m_bExplode = FALSE ;
  m_bLightSource = FALSE ;
  m_bCanHitHimself = FALSE ;
  m_bCanBeDestroyed = FALSE ;
  m_fWaitAfterDeath = 0.0f;
  m_aRotateSpeed = 0.0f;
  m_tmExpandBox = 0.0f;
  m_tmInvisibility = 0.0f;
  m_iRebounds = 0;
  m_fStretch = 1.0f;
  m_soEffect.SetOwner(this);
m_soEffect.Stop_internal();
  m_soExplosion.SetOwner(this);
m_soExplosion.Stop_internal();
  m_fGuidedMaxSpeedFactor = 30.0f;
  bLockedOn = TRUE ;
  m_bLeftFlame = FALSE ;
  m_penPrediction = NULL;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 585 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PreMoving(void) {
#line 586 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_tmExpandBox  > 0){
#line 587 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(_pTimer  -> CurrentTick  () > m_fStartTime  + m_tmExpandBox ){
#line 588 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ChangeCollisionBoxIndexWhenPossible  (1);
#line 589 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0;
#line 590 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 591 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 592 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: PreMoving  ();
#line 593 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 596 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PostMoving(void) {
#line 597 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: PostMoving  ();
#line 599 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  || m_prtType  == PRT_SHOOTER_FLAME ){
#line 601 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CContentType  & ctDn  = GetWorld  () -> wo_actContentTypes  [ en_iDnContent  ];
#line 603 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(! (ctDn  . ct_ulFlags  & CTF_BREATHABLE_LUNGS )){
#line 604 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 605 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SendEvent  (EEnd  ());
#line 606 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 607 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 608 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 611 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::Read_t(CTStream * istr) 
#line 612 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 613 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: Read_t  (istr );
#line 615 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource ){
#line 616 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetupLightSource  (TRUE );
#line 617 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 618 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  void CProjectile::DumpSync_t(CTStream & strm,INDEX iExtensiveSyncCheck) 
#line 622 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 623 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: DumpSync_t  (strm  , iExtensiveSyncCheck );
#line 624 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("projectile type: %d\n" , m_prtType );
#line 625 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("launcher:");
#line 626 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penLauncher  != NULL ){
#line 627 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("id:%05d '%s'(%s) (%g, %g, %g)\n" , 
#line 628 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> en_ulID  , 
#line 629 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetName  () , m_penLauncher  -> GetClass  () -> ec_pdecDLLClass  -> dec_strName  , 
#line 630 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetPlacement  () . pl_PositionVector  (1) , 
#line 631 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetPlacement  () . pl_PositionVector  (2) , 
#line 632 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetPlacement  () . pl_PositionVector  (3));
#line 633 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 634 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("<none>\n");
#line 635 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 636 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 639 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CLightSource * CProjectile::GetLightSource(void) 
#line 640 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 641 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource  && ! IsPredictor  ()){
#line 642 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return & m_lsLightSource ;
#line 643 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 644 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return NULL ;
#line 645 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 646 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  void CProjectile::Copy(CEntity & enOther,ULONG ulFlags) 
#line 649 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 650 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: Copy  (enOther  , ulFlags );
#line 651 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CProjectile  * penOther  = (CProjectile  *) (& enOther );
#line 652 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(ulFlags  & COPY_PREDICTOR ){
#line 655 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 656 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 657 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 659 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL CProjectile::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 660 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 662 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 663 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((pmo  != NULL ) && (_pTimer  -> GetLerpedCurrentTick  () < (m_fStartTime  + m_tmInvisibility )))
#line 664 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 666 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pmo  -> mo_colBlendColor  = 0;
#line 667 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 668 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 669 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 671 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pmo  -> mo_colBlendColor  = C_WHITE  | CT_OPAQUE ;
#line 672 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 673 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return CEntity  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 674 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 677 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::SetupLightSource(BOOL bLive) 
#line 678 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 680 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CLightSource  lsNew ;
#line 681 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_ulFlags  = LSF_NONPERSISTENT  | LSF_DYNAMIC ;
#line 682 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rHotSpot  = 0.0f;
#line 683 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 684 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : 
#line 685 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : 
#line 686 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : 
#line 687 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bLive )
#line 688 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 689 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = 0xA0A080FF;
#line 690 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 691 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 692 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 693 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_BLACK  | CT_OPAQUE ;
#line 694 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 695 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 696 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 697 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 698 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : 
#line 699 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_BLUE ;
#line 700 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 701 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 702 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : 
#line 703 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = 0x2F1F0F00;
#line 704 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 705 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rHotSpot  = 0.2f;
#line 706 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 707 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 708 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_FLAME : 
#line 709 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 710 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.0f;
#line 711 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 712 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 713 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_RAY : 
#line 714 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_vdGREEN ;
#line 715 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 716 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 717 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 718 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_SOL : 
#line 719 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_vdRED ;
#line 720 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 721 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 722 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 723 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_COM : 
#line 724 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_vdRED ;
#line 725 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 726 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 727 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 728 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : 
#line 729 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_BLUE ;
#line 730 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 731 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftCatmanFireGlow ;
#line 732 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 733 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : 
#line 734 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_ORANGE ;
#line 735 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 736 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 737 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 738 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : 
#line 739 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_YELLOW ;
#line 740 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 741 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 742 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 743 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WOMAN_FIRE : 
#line 744 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_WHITE ;
#line 745 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 746 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftCatmanFireGlow ;
#line 747 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 748 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_FIRE : 
#line 749 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_YELLOW ;
#line 750 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 751 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftProjectileYellowBubbleGlow ;
#line 752 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 753 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_STRONG_FIRE : 
#line 754 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_RED ;
#line 755 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 756 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftProjectileStarGlow ;
#line 757 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 758 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HUANMAN_FIRE : 
#line 759 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 760 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 761 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 762 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 763 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_FISHMAN_FIRE : 
#line 764 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 765 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 766 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 767 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 768 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_MANTAMAN_FIRE : 
#line 769 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 770 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 771 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 772 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 773 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_LASER : 
#line 774 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dBLUE ;
#line 775 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 776 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 777 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 778 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_LASER : 
#line 779 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dBLUE ;
#line 780 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 781 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 782 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 783 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_PLASMA : 
#line 784 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dBLUE ;
#line 785 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 786 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftCatmanFireGlow ;
#line 787 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 788 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : 
#line 789 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 790 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 791 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 792 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 793 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FLAME : 
#line 794 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 795 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.0f;
#line 796 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 797 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 798 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
default  : 
#line 799 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ASSERTALWAYS  ("Unknown light source");
#line 800 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 801 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_ubPolygonalMask  = 0;
#line 802 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_paoLightAnimation  = NULL ;
#line 804 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_lsLightSource  . ls_penEntity  = this ;
#line 805 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_lsLightSource  . SetLightSource  (lsNew );
#line 806 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 809 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::RenderParticles(void) {
#line 810 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 811 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : 
#line 812 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : Particles_RocketTrail  (this  , 1.0f);break ;
#line 813 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : Particles_RocketTrail  (this  , 8.0f);break ;
#line 814 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : break ;
#line 815 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : {
#line 817 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedRatio  = en_vCurrentTranslationAbsolute  . Length  () / 140.0f;
#line 818 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_CannonBall  (this  , fSpeedRatio );
#line 819 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 820 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 821 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_FLAME : {
#line 823 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fLeaderLiving  , fFollowerLiving  , fInFrontLiving ;
#line 824 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fInFrontLiving  = 0.05f;
#line 825 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fLeaderLiving  = _pTimer  -> GetLerpedCurrentTick  () - m_fStartTime ;
#line 827 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penParticles  != NULL  && ! (m_penParticles  -> GetFlags  () & ENF_DELETED )){
#line 828 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirLeader  = en_vCurrentTranslationAbsolute ;
#line 829 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirLeader  . Normalize  ();
#line 831 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (m_penParticles  , "Projectile"))
#line 832 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 833 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CProjectile  & prLast  = (CProjectile  &) * m_penParticles ;
#line 835 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (prLast  . m_penParticles  , "Player Weapons"))
#line 836 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 837 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlayerWeapons  & plw  = (CPlayerWeapons  &) * prLast  . m_penParticles ;
#line 838 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(! (plw  . GetPlayer  () -> GetFlags  () & ENF_ALIVE ))
#line 839 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 840 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return ;
#line 841 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 842 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plPipe  , plInFrontOfPipe ;
#line 843 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CPlayerWeapons  &) * prLast  . m_penParticles ) . GetFlamerSourcePlacement  (plPipe  , plInFrontOfPipe );
#line 844 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fFollowerLiving  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 845 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirPipeFront ;
#line 846 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plInFrontOfPipe  . pl_OrientationAngle  , vDirPipeFront );
#line 847 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirPipeFront  . Normalize  ();
#line 848 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrower  (GetLerpedPlacement  () , plInFrontOfPipe  , 
#line 849 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirLeader  , vDirPipeFront  , 
#line 850 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fLeaderLiving  , fInFrontLiving  , en_ulID  , FALSE );
#line 851 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 853 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 854 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 855 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fFollowerLiving  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 856 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirFollower  = ((CMovableModelEntity  *) (CEntity  *) m_penParticles ) -> en_vCurrentTranslationAbsolute ;
#line 857 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirFollower  . Normalize  ();
#line 858 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrower  (GetLerpedPlacement  () , m_penParticles  -> GetLerpedPlacement  () , 
#line 859 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirLeader  , vDirFollower  , fLeaderLiving  , fFollowerLiving  , en_ulID  , FALSE );
#line 860 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 862 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else if(IsOfClass  (m_penParticles  , "Player Weapons")){
#line 863 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlayerWeapons  & plw  = (CPlayerWeapons  &) * m_penParticles ;
#line 864 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(! (plw  . GetPlayer  () -> GetFlags  () & ENF_ALIVE ))
#line 865 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 866 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return ;
#line 867 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 868 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plPipe  , plInFrontOfPipe ;
#line 869 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
plw  . GetFlamerSourcePlacement  (plPipe  , plInFrontOfPipe );
#line 870 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirPipeFront ;
#line 871 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plInFrontOfPipe  . pl_OrientationAngle  , vDirPipeFront );
#line 872 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vViewDir ;
#line 873 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plPipe  . pl_OrientationAngle  , vViewDir );
#line 874 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirFollower  = vViewDir  . Normalize  ();
#line 882 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrower  (plInFrontOfPipe  , plPipe  , 
#line 883 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirPipeFront  , vDirFollower  , 
#line 884 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fInFrontLiving  , 0.0f , en_ulID  , TRUE );
#line 886 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrowerStart  (plPipe  , plw  . m_tmFlamerStart  , plw  . m_tmFlamerStop );
#line 887 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 888 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 889 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 890 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 891 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : Particles_RocketTrail  (this  , 1.0f);break ;
#line 892 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : Particles_FirecrackerTrail  (this );break ;
#line 893 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : Particles_Fireball01Trail  (this );break ;
#line 894 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : Particles_BombTrail  (this );break ;
#line 895 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : Particles_LavaTrail  (this );break ;
#line 896 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : Particles_LavaBombTrail  (this  , 4.0f);break ;
#line 897 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : Particles_LavaBombTrail  (this  , 1.0f);break ;
#line 898 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : Particles_BeastProjectileTrail  (this  , 2.0f , 0.25f , 48);break ;
#line 899 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : 
#line 900 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : 
#line 901 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_BeastBigProjectileTrail  (this  , 4.0f , 0.25f , 0.0f , 64);
#line 902 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner  (this  , m_fStartTime  , 1.0f);
#line 903 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 904 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : 
#line 905 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_BeastBigProjectileTrail  (this  , 6.0f , 0.375f , 0.0f , 64);
#line 906 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 907 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_DEBRIS : Particles_BeastProjectileDebrisTrail  (this  , 0.20f);break ;
#line 908 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_DEBRIS : Particles_BeastProjectileDebrisTrail  (this  , 0.25f);break ;
#line 909 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : Particles_RocketTrail  (this  , 0.25f);break ;
#line 910 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : Particles_Fireball01Trail  (this );break ;
#line 911 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FLAME : {
#line 913 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fTimeElapsed  , fParticlesTimeElapsed ;
#line 914 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fTimeElapsed  = _pTimer  -> GetLerpedCurrentTick  () - m_fStartTime ;
#line 916 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penParticles  != NULL  && ! (m_penParticles  -> GetFlags  () & ENF_DELETED )){
#line 918 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (m_penParticles  , "Projectile")){
#line 919 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fParticlesTimeElapsed  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 920 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_ShooterFlame  (GetLerpedPlacement  () , m_penParticles  -> GetLerpedPlacement  () , 
#line 921 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fTimeElapsed  , fParticlesTimeElapsed );
#line 922 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else if(IsOfClass  (m_penParticles  , "Shooter")){
#line 923 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_ShooterFlame  (GetLerpedPlacement  () , 
#line 924 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CShooter  &) * m_penParticles ) . GetPlacement  () , 
#line 925 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fTimeElapsed  , 0.0f);
#line 926 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 927 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 928 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 929 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 930 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_METEOR : 
#line 931 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_MeteorTrail  (this  , m_fStretch  , 1.0f , en_vCurrentTranslationAbsolute );
#line 932 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner  (this  , m_fStartTime  , m_fStretch  * 4.0f , 2);
#line 933 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 934 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_AFTERBURNER_DEBRIS : 
#line 935 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner  (this  , m_fStartTime  , m_fStretch );
#line 936 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 937 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_AIRELEMENTAL_WIND : 
#line 938 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_Windblast  (this  , m_fStretch  / 4.0f , m_fStartTime  + 3.0f);
#line 939 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 940 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 941 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 949 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerRocket(void) {
#line 951 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 952 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 953 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 954 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ROCKET );
#line 955 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ROCKET );
#line 957 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 958 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 960 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 961 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 962 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 963 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_bCooperative )
#line 964 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 965 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 100.0f;
#line 966 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 50.0f;
#line 967 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 968 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 969 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 970 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 75.0f;
#line 971 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 75.0f;
#line 972 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 973 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 974 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 975 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 976 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 977 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 978 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 979 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 980 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 981 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 982 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 983 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 984 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 985 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 987 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::WalkerRocket(void) {
#line 989 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 990 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 991 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 992 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ROCKET );
#line 993 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ROCKET );
#line 995 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 996 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 998 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 999 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 1000 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 1001 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_gdGameDifficulty  <= CSessionProperties  :: GD_EASY ){
#line 1002 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 40.0f;
#line 1003 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 20.0f;
#line 1004 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 1005 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 100.0f;
#line 1006 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 50.0f;
#line 1007 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1008 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 1009 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 1010 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1011 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1012 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1013 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1014 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1015 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 1016 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1017 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 1018 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 1019 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1020 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1022 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::WalkerRocketExplosion(void) {
#line 1023 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlayerRocketExplosion  ();
#line 1024 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1026 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerRocketExplosion(void) {
#line 1027 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1028 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1029 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1030 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1033 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1034 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_ROCKET ;
#line 1035 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 1036 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1038 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 1039 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 1040 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1043 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_DEBRIS ;
#line 1044 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1047 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_SMOKE ;
#line 1048 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1051 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1052 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1054 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1055 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1056 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1058 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1059 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1060 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1062 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_ROCKET_PLANE ;
#line 1063 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1064 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1065 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1066 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1067 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1070 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerGrenade(void) {
#line 1072 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1073 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1074 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1075 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GRENADE );
#line 1076 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GRENADE );
#line 1078 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 5.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1079 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 120.0f + 120.0f , FRnd  () * 250.0f - 125.0f));
#line 1080 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fBounceDampNormal  = 0.75f;
#line 1081 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fBounceDampParallel  = 0.6f;
#line 1082 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fJumpControlMultiplier  = 0.0f;
#line 1083 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fCollisionSpeedLimit  = 45.0f;
#line 1084 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fCollisionDamageFactor  = 10.0f;
#line 1085 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 3.0f;
#line 1086 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 75.0f;
#line 1087 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 100.0f;
#line 1088 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 1089 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 1090 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1091 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1092 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fDeceleration  = 25.0f;
#line 1093 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1094 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1095 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1096 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1097 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (20.0f);
#line 1098 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1099 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 1100 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1101 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1103 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerGrenadeExplosion(void) {
#line 1104 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1105 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1106 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1107 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1110 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1111 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE ;
#line 1112 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 1113 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1115 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 1116 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 1117 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1120 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1121 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1123 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1124 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1125 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1127 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1128 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1129 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1131 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1132 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1133 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1134 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1135 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1136 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1143 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerFlame(void) {
#line 1145 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 1146 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING  & ~ EPF_TRANSLATEDBYGRAVITY  & ~ EPF_ORIENTEDBYGRAVITY );
#line 1148 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1149 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1150 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_FLAME );
#line 1155 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableEntity  * penPlayer  = (CMovableEntity  *) (CEntity  *) m_penLauncher ;
#line 1156 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirection  = penPlayer  -> en_vCurrentTranslationAbsolute ;
#line 1157 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 1158 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedFwd  = ClampDn  (vDirection  % vFront  , 0.0f);
#line 1160 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - (25.0f + fSpeedFwd )) , penPlayer );
#line 1161 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1162 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 1.0f;
#line 1163 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = (GetSP  () -> sp_bCooperative ) ? 10.0f : 4.0f;
#line 1164 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1165 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1166 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1167 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1168 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1169 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.3f;
#line 1170 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1171 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1172 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1179 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerLaserRay(void) {
#line 1181 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1182 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1183 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1184 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1185 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LASER );
#line 1186 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 1187 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 1188 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1189 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (LASERPROJECTILE_ANIM_GROW  , 0);
#line 1190 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1191 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GREEN_LASER );
#line 1193 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 120.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1194 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1195 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 3.0f;
#line 1196 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1197 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1198 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1199 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1200 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1201 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1202 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1203 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1205 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.025f;
#line 1206 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1207 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1209 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerLaserWave(void) {
#line 1210 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1211 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1212 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1213 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1216 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1217 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1219 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_dRED  | CT_OPAQUE ;
#line 1220 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LASERWAVE ;
#line 1221 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1222 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1223 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1224 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1225 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1232 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::CatmanProjectile(void) {
#line 1234 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1235 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1236 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1237 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1238 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_CATMAN_FIRE );
#line 1239 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_CATMAN_FIRE );
#line 1241 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 15.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1242 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1243 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1244 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 1245 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1246 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1247 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1248 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1249 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1250 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1251 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1252 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1259 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanFirecracker(void) {
#line 1261 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1262 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING );
#line 1263 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1264 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1265 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_HEADMAN_FIRECRACKER );
#line 1266 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_HEADMAN_FIRECRACKER );
#line 1267 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.75f , 0.75f , 0.75f));
#line 1268 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1270 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 25.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1271 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , FRnd  () * 20.0f - 10.0f));
#line 1272 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1273 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 4.0f;
#line 1274 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1275 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1276 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1277 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1278 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1279 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1280 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1281 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1283 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanRocketman(void) {
#line 1285 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1286 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1287 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1288 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1289 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_HEADMAN_BLADE  , TEXTURE_HEADMAN_BLADE  , 
#line 1290 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
TEX_REFL_LIGHTBLUEMETAL01  , TEX_SPEC_MEDIUM  , 0);
#line 1291 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , BLADE_ATTACHMENT_FLAME01  , 
#line 1292 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_HEADMAN_BLADE_FLAME  , TEXTURE_HEADMAN_BLADE_FLAME  , 0 , 0 , 0);
#line 1293 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , BLADE_ATTACHMENT_FLAME02  , 
#line 1294 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_HEADMAN_BLADE_FLAME  , TEXTURE_HEADMAN_BLADE_FLAME  , 0 , 0 , 0);
#line 1295 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , BLADE_ATTACHMENT_FLAME03  , 
#line 1296 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_HEADMAN_BLADE_FLAME  , TEXTURE_HEADMAN_BLADE_FLAME  , 0 , 0 , 0);
#line 1297 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.5f , 0.5f , 0.5f));
#line 1298 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1300 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1301 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1302 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1303 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 1304 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1305 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1306 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1307 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1308 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1309 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1310 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1311 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1313 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanBomberman(void) {
#line 1315 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1316 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1317 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1318 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_HEADMAN_BOMB );
#line 1319 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_HEADMAN_BOMB );
#line 1322 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1323 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 1324 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 2.5f;
#line 1325 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1326 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 15.0f;
#line 1327 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 1328 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 6.0f;
#line 1329 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 25.0f;
#line 1330 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1331 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1332 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1333 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1334 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1335 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 1336 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1337 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1339 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanBombermanExplosion(void) {
#line 1340 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1341 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1342 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1343 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1346 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1347 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_BOMB ;
#line 1348 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1.0f , 1.0f , 1.0f);
#line 1349 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1351 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1352 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1354 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1355 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1356 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1357 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1358 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1359 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1360 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1361 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1362 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1364 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::CyborgBombExplosion(void) 
#line 1365 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1366 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1367 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1368 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1369 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1372 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1373 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_BOMB ;
#line 1374 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1.0f , 1.0f , 1.0f);
#line 1375 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1377 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1378 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1380 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1381 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1382 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1383 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1384 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1385 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1386 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1387 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1388 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1393 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BonemanProjectile(void) {
#line 1395 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1396 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1397 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1398 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1399 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BONEMAN_FIRE );
#line 1400 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BONEMAN_FIRE );
#line 1402 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1403 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1404 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1405 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1406 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1407 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1408 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1409 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1410 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1411 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1412 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1413 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1420 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::WomanProjectile(void) {
#line 1422 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1423 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1424 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1425 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1426 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_WOMAN_FIRE );
#line 1427 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_WOMAN_FIRE );
#line 1429 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1430 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1431 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1432 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 8.0f;
#line 1433 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1434 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1435 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1436 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1437 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1438 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1439 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1440 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1447 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DragonmanProjectile(INDEX iType) {
#line 1449 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1450 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_ONBLOCK_SLIDE  | EPF_PUSHABLE  | EPF_MOVABLE );
#line 1451 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1452 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1453 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_DRAGONMAN_FIRE );
#line 1454 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(iType  == DRAGONMAN_STRONG ){
#line 1455 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_DRAGONMAN_FIRE2 );
#line 1456 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 1457 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_DRAGONMAN_FIRE1 );
#line 1458 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1460 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(iType  == DRAGONMAN_STRONG ){
#line 1461 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 40.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1462 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 14.0f;
#line 1463 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 1464 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1465 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.0f;
#line 1466 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1467 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1468 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1469 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1470 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1471 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1472 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1473 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1474 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1475 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1476 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1483 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ElementalRock(INDEX iSize,INDEX iType) {
#line 1485 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1486 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_ONBLOCK_SLIDE  | EPF_PUSHABLE  | EPF_MOVABLE );
#line 1487 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1488 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(iType ){
#line 1489 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case ELEMENTAL_STONEMAN : 
#line 1490 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_STONE );
#line 1491 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_STONE );
#line 1492 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 1493 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case ELEMENTAL_LAVAMAN : 
#line 1494 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_LAVA_STONE );
#line 1495 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_LAVA_STONE );
#line 1496 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , LAVASTONE_ATTACHMENT_FLARE  , 
#line 1497 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_ELEM_LAVA_STONE_FLARE  , TEXTURE_ELEM_LAVA_STONE_FLARE  , 0 , 0 , 0);
#line 1498 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 1499 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case ELEMENTAL_ICEMAN : 
#line 1500 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_ICE );
#line 1501 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_ICE );
#line 1504 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 1505 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1506 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(iSize  == ELEMENTAL_LARGE ){
#line 1507 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.25f , 2.25f , 2.25f));
#line 1508 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else if(iSize  == ELEMENTAL_BIG ){
#line 1509 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.75f , 0.75f , 0.75f));
#line 1510 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 1511 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.4f , 0.4f , 0.4f));
#line 1512 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1513 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1515 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(iSize  == ELEMENTAL_LARGE ){
#line 1516 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 80.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1517 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1518 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (40.0f);
#line 1519 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else if(iSize  == ELEMENTAL_BIG ){
#line 1520 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 50.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1521 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 12.5f;
#line 1522 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (20.0f);
#line 1523 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 1524 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1525 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.0f;
#line 1526 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 1527 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1528 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , FRnd  () * 1800.0f - 900.0f));
#line 1529 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fCollisionSpeedLimit  = 1000.0f;
#line 1530 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
en_fCollisionDamageFactor  = 0.0f;
#line 1531 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1532 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1533 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1534 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1535 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1536 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1537 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1538 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1539 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1541 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavaManBomb(void) 
#line 1542 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1544 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1545 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1546 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1548 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_LAVA_BOMB );
#line 1549 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_LAVA_BOMB );
#line 1550 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , LAVABOMB_ATTACHMENT_FLARE  , 
#line 1551 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_ELEM_LAVA_BOMB_FLARE  , TEXTURE_ELEM_LAVA_BOMB_FLARE  , 0 , 0 , 0);
#line 1553 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_LAVAMAN_BIG_BOMB )
#line 1554 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1555 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (6.0f , 6.0f , 6.0f));
#line 1556 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1557 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 10.0f;
#line 1558 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 7.5f;
#line 1559 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 15.0f;
#line 1560 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (30.0f);
#line 1561 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1562 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else if(m_prtType  == PRT_LAVAMAN_BOMB )
#line 1563 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1564 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.5f , 1.5f , 1.5f));
#line 1565 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1566 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 5.0f;
#line 1567 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 5.0f;
#line 1568 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 10.0f;
#line 1569 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 1570 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1571 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1574 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1575 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , 0.0f));
#line 1576 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 20.0f;
#line 1577 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1578 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1579 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1580 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1581 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1582 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1583 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 4.0f;
#line 1586 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_LAVAMAN_BIG_BOMB )
#line 1587 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1589 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1590 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1591 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1592 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1593 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1594 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 1595 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1596 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1597 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 1598 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1599 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1600 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1601 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1603 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavamanBombExplosion(void) 
#line 1604 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1605 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1606 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1607 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1608 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1610 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge ))
#line 1611 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1612 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f)
#line 1613 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1615 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1616 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1617 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1618 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1619 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1620 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1623 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1624 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1625 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (4 , 4 , 4);
#line 1626 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1629 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1630 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1631 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1632 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1633 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1634 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 1635 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1636 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1637 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 1638 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1639 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1642 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 3 + IRnd  () % 3;iDebris  ++)
#line 1643 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1644 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = (FRnd  () - 0.5f) * 180.0f;
#line 1645 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 40.0f;
#line 1646 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 10.0 + FRnd  () * 50.0f;
#line 1649 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 1650 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_PositionVector  (2) += 2.0f;
#line 1651 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  = m_penLauncher  -> GetPlacement  () . pl_OrientationAngle ;
#line 1652 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 1653 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) = AngleDeg  (fPitch );
#line 1655 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 1656 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 1657 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 1658 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_LAVAMAN_BOMB ;
#line 1659 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 1660 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 1663 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 1664 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1665 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 1666 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1667 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1668 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 1669 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1670 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1671 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 1672 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 1673 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1674 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1675 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1677 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavamanBombDebrisExplosion(void) 
#line 1678 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1679 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1680 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1681 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1682 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1685 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge ))
#line 1686 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1687 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f)
#line 1688 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1689 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1690 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1691 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1692 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1693 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1694 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1697 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1698 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1699 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 1700 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1703 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1704 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1705 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1706 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1707 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1708 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 4.0f;
#line 1709 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 1710 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1711 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 16.0f;
#line 1712 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1713 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1714 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1719 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::HuanmanProjectile(void) {
#line 1721 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1722 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1723 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1724 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1725 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_HUANMAN_FIRE  , TEXTURE_HUANMAN_FIRE  , 
#line 1726 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
TEX_REFL_LIGHTMETAL01  , TEX_SPEC_STRONG  , 0);
#line 1727 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , PROJECTILE_ATTACHMENT_FLARE  , 
#line 1728 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_HUANMAN_FLARE  , TEXTURE_HUANMAN_FLARE  , 0 , 0 , 0);
#line 1729 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.5f , 0.5f , 0.5f));
#line 1730 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1732 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1733 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1734 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1735 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1736 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1737 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1738 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1739 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1740 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1741 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1742 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1743 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1748 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastProjectile(void) {
#line 1750 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 1751 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 1752 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1754 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1755 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 1756 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1758 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1759 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_FIRE );
#line 1760 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.5f , 1.5f , 1.5f));
#line 1762 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1764 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 1765 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_BEAST_FLYING  , SOF_3D  | SOF_LOOP );
#line 1767 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1768 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1769 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1770 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1771 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1772 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1773 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1774 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1775 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1776 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1777 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED ;
#line 1778 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 30.0f;
#line 1779 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 175.0f;
#line 1780 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 1781 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1783 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigProjectile(void) {
#line 1785 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 1786 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 1787 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1789 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1790 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 1791 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1793 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1794 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 1795 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 1797 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1799 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (50.0f , 2.0f , 1.0f , 0.75f);
#line 1800 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_BEAST_FLYING  , SOF_3D  | SOF_LOOP );
#line 1802 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1803 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1804 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1805 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1806 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1807 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1808 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1809 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1810 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1811 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1812 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED_FAST ;
#line 1813 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 90.0f;
#line 1814 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10000.0f);
#line 1815 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 1816 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1818 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastDebris(void) 
#line 1819 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1821 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1822 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1823 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1825 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1826 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.75f , 0.75f , 0.75f));
#line 1827 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_FIRE );
#line 1828 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StartAnim  (1 + (ULONG ) FRnd  () * 5.0f);
#line 1830 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1832 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - 20.0f) , (CMovableEntity  *) & * m_penLauncher );
#line 1833 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1834 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1835 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 1836 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1837 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1838 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1839 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1840 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1841 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1842 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1843 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (1.0f);
#line 1844 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 1845 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1847 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigDebris(void) 
#line 1848 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1850 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1851 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1852 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1854 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1855 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 1856 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.0f , 1.0f , 1.0f));
#line 1857 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StartAnim  (1 + (ULONG ) FRnd  () * 5.0f);
#line 1859 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1861 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - 20.0f) , (CMovableEntity  *) & * m_penLauncher );
#line 1862 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1863 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1864 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 1865 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1866 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1867 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1868 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1869 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1870 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1871 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1872 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (1.0f);
#line 1873 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 1874 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1876 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastDebrisExplosion(void) 
#line 1877 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1879 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1880 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_GREEN  | CT_OPAQUE ;
#line 1881 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1882 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (0.75 , 0.75 , 0.75);
#line 1883 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1886 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1887 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1888 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1889 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1890 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1891 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 1892 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.75f;
#line 1893 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_BEAST_PROJECTILE_SPRAY ;
#line 1894 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 64.0f;
#line 1895 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1896 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1897 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1899 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigDebrisExplosion(void) 
#line 1900 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1902 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1903 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1904 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1905 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 1906 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1909 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1910 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1911 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1912 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1913 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1914 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 1915 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 1916 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1917 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 64.0f;
#line 1918 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1919 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1920 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1922 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastProjectileExplosion(void) 
#line 1923 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1925 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1926 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_GREEN  | CT_OPAQUE ;
#line 1927 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1928 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1.25 , 1.25 , 1.25);
#line 1929 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1932 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1933 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1934 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1935 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1936 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1937 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 1938 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 1939 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_BEAST_PROJECTILE_SPRAY ;
#line 1940 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 64.0f;
#line 1941 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1942 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1944 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = 20.0f + (FRnd  () - 0.5f) * 60.0f;
#line 1946 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 2;iDebris  ++)
#line 1947 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1948 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 10.0f;
#line 1949 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 5.0 + FRnd  () * 20.0f;
#line 1952 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 1953 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 1955 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fHeading  = - fHeading ;
#line 1956 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) = AngleDeg  (fPitch );
#line 1958 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 1959 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 1960 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 1961 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_BEAST_DEBRIS ;
#line 1962 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 1963 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 1966 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 1967 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1968 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 1969 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1970 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1971 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 0.5f;
#line 1972 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.25f;
#line 1973 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_BEAST_PROJECTILE_SPRAY ;
#line 1974 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 1975 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 1976 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1977 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 1978 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 1980 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigProjectileExplosion(void) 
#line 1981 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 1983 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1984 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1985 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1986 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 1987 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1990 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1991 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1992 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1993 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1994 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1995 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 1996 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1997 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1998 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 1999 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2000 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2003 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 3 + IRnd  () % 2;iDebris  ++)
#line 2004 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2005 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = (FRnd  () - 0.5f) * 180.0f;
#line 2006 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 40.0f;
#line 2007 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 10.0 + FRnd  () * 50.0f;
#line 2010 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 2011 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 2012 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) += AngleDeg  (fPitch );
#line 2014 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 2015 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 2016 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 2017 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_BEAST_BIG_DEBRIS ;
#line 2018 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 2019 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 2022 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 2023 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2024 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 2025 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2026 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2027 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 2028 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2029 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2030 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 2031 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 2032 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2033 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2034 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2039 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::FishmanProjectile(void) {
#line 2041 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2042 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2043 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2044 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2045 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_FISHMAN_FIRE  , TEXTURE_FISHMAN_FIRE  , 0 , 0 , 0);
#line 2046 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2048 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2049 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2050 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2051 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2052 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2053 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2054 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2055 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2056 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2057 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2058 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2059 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2066 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::MantamanProjectile(void) {
#line 2068 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2069 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2070 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2071 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2072 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_MANTAMAN_FIRE  , TEXTURE_MANTAMAN_FIRE  , 0 , 0 , 0);
#line 2073 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2075 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 35.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2076 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2077 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2078 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.0f;
#line 2079 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2080 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2081 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2082 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2083 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2084 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2085 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2086 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2092 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilLaser(void) {
#line 2094 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2095 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2096 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2097 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2098 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_CYBORG_LASER  , TEXTURE_CYBORG_LASER  , 0 , 0 , 0);
#line 2099 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (4.0f , 4.0f , 2.0f));
#line 2100 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2102 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - DEVIL_LASER_SPEED ) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2103 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2104 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2105 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2106 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2107 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2108 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2109 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2110 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2111 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2112 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2113 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2115 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilRocket(void) {
#line 2117 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2118 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2119 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2120 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ROCKET );
#line 2121 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ROCKET );
#line 2122 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (12.0f , 12.0f , 8.0f));
#line 2123 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2125 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - DEVIL_ROCKET_SPEED ) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2126 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2128 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (100.0f , 2.0f , 1.0f , 1.0f);
#line 2129 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2130 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 50.0f;
#line 2131 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 50.0f;
#line 2132 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 50.0f;
#line 2133 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 2.0f;
#line 2134 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 10.0f;
#line 2135 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 100.0f;
#line 2136 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2137 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2138 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 2139 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2140 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 2141 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 10000.0f;
#line 2142 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2143 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (25.0f);
#line 2144 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2145 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2147 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilRocketExplosion(void) {
#line 2148 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2149 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2150 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2151 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2154 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2155 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE ;
#line 2156 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2157 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2159 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 2160 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 2161 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2164 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2165 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2167 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 2168 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2169 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2170 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2172 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2173 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2174 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2175 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2177 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 2178 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2179 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2180 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 2181 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2182 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2183 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2185 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilGuidedProjectile(void) {
#line 2187 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 2188 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 2189 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2191 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2192 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 2193 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2195 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 2196 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 2197 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 2198 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2200 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (250.0f , 2.0f , 1.0f , 0.75f);
#line 2201 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2203 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 80.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2204 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2205 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 20.0f;
#line 2206 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 2207 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2208 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2209 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2210 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2211 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2212 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2213 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED ;
#line 2214 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 30.0f;
#line 2215 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (30.0f);
#line 2216 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 2217 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2219 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilGuidedProjectileExplosion(void) 
#line 2220 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2222 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2223 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2224 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2225 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (4 , 4 , 4);
#line 2226 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2229 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2230 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2231 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2232 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2233 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2234 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 8.0f;
#line 2235 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 2236 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2237 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2238 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2239 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2242 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 3 + IRnd  () % 2;iDebris  ++)
#line 2243 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2244 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = (FRnd  () - 0.5f) * 180.0f;
#line 2245 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 40.0f;
#line 2246 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 10.0 + FRnd  () * 50.0f;
#line 2249 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 2250 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 2251 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) += AngleDeg  (fPitch );
#line 2253 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 2254 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 2255 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 2256 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_BEAST_BIG_DEBRIS ;
#line 2257 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 2258 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 2261 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 2262 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2263 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 2264 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2265 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2266 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 2267 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 2268 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2269 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 2270 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 2271 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2272 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2273 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2278 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::CyborgLaser(void) {
#line 2280 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2281 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2282 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2283 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2284 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_CYBORG_LASER  , TEXTURE_CYBORG_LASER  , 0 , 0 , 0);
#line 2285 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2287 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2288 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2289 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 4.0f;
#line 2290 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2291 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2292 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2293 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2294 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2295 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2296 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2297 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2298 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2300 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::CyborgBomb(void) 
#line 2301 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2303 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2304 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 2305 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2306 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_CYBORG_BOMB );
#line 2307 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_CYBORG_BOMB );
#line 2308 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2310 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 2311 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2312 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 2.5f;
#line 2313 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2314 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 15.0f;
#line 2315 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 2316 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 6.0f;
#line 2317 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 25.0f;
#line 2318 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2319 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2320 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 2321 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2322 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2323 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 2324 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2325 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2332 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavaBall(void) {
#line 2334 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2335 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FALL );
#line 2336 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2337 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LAVA );
#line 2338 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LAVA );
#line 2339 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachment  (0 , MODEL_LAVA_FLARE  , TEXTURE_LAVA_FLARE );
#line 2342 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 2343 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 2344 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2345 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2346 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 5.0f;
#line 2347 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 2348 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 4.0f;
#line 2349 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2350 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2351 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2352 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2353 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2354 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2355 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2356 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2358 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavaBallExplosion(void) {
#line 2359 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2360 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2361 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2362 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2363 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2364 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2366 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2367 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2368 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2369 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2370 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2371 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2372 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2378 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::GruntSoldierLaser(void) {
#line 2380 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2381 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2382 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2383 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2384 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GRUNT_PROJECTILE );
#line 2385 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 2386 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 2387 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2388 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (GRUNTPROJECTILE_ANIM_DEFAULT  , 0);
#line 2389 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2390 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GRUNT_PROJECTILE_01 );
#line 2392 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 45.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2393 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2394 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 3.0f;
#line 2395 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2396 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2397 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2398 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2399 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2400 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2401 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2402 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2404 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.025f;
#line 2405 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2406 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2408 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::GruntCommanderLaser(void) {
#line 2410 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2411 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2412 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2413 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2414 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GRUNT_PROJECTILE );
#line 2415 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 2416 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 2417 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2418 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (GRUNTPROJECTILE_ANIM_DEFAULT  , 0);
#line 2419 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2420 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GRUNT_PROJECTILE_02 );
#line 2422 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 55.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2423 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2424 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 3.0f;
#line 2425 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2426 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2427 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2428 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2429 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2430 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2431 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2432 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2434 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.025f;
#line 2435 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2436 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2443 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::GuffyProjectile(void) {
#line 2445 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2446 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2447 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2448 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GUFFY_PROJECTILE );
#line 2449 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GUFFY_PROJECTILE );
#line 2450 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.0f , 1.0f , 1.0f));
#line 2452 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 2453 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 2454 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2455 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (GUFFYPROJECTILE_ANIM_ROTATE01  , AOF_LOOPING );
#line 2456 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2459 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 50.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2460 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2462 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 2463 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2464 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 2465 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2466 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 10.0f;
#line 2467 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 2468 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 2469 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 2470 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2471 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2472 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2473 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2474 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 2475 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2476 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2477 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10000.0f);
#line 2478 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2479 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2481 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::GuffyProjectileExplosion(void) {
#line 2482 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlayerRocketExplosion  ();
#line 2483 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2490 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DemonFireball(void) {
#line 2492 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 2493 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 2494 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2496 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2497 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 2498 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2500 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_DEMON_FIREBALL );
#line 2501 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_DEMON_FIREBALL );
#line 2502 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 2504 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2506 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (50.0f , 2.0f , 1.0f , 0.75f);
#line 2507 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_BEAST_FLYING  , SOF_3D  | SOF_LOOP );
#line 2509 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 100.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2510 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2511 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 12.0f;
#line 2512 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 2513 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2514 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2515 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2516 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2517 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2518 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2519 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED_FAST ;
#line 2520 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 90.0f;
#line 2521 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10000.0f);
#line 2522 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 200.0f;
#line 2523 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2525 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::DemonFireballExplosion(void) 
#line 2526 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2528 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2529 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2530 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2531 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2532 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2535 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2536 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2537 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2538 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2539 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2540 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 2541 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2542 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2543 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2544 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2545 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2546 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2552 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaPlasma(void) {
#line 2554 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2555 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2556 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2557 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LARVA_PLASMA_BALL );
#line 2558 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LARVA_PLASMA_BALL );
#line 2559 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , PLASMAGUN_ATTACHMENT_PROJECTILE  , 
#line 2560 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
MODEL_LARVA_PLASMA  , TEXTURE_LARVA_PLASMA  , 0 , 0 , 0);
#line 2562 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 2563 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2566 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2567 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2569 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 2570 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2571 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 2572 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_bCooperative )
#line 2573 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2574 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 30.0f;
#line 2575 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 30.0f;
#line 2576 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2577 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 2578 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2579 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 25.0f;
#line 2580 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 25.0f;
#line 2581 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2582 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 2583 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 2584 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 2585 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2586 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2587 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2588 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2589 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.05f;
#line 2590 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2591 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2592 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (100.0f);
#line 2593 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_iRebounds  = 4;
#line 2594 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING_REBOUNDING ;
#line 2595 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2597 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaPlasmaExplosion(void) {
#line 2599 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2600 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2601 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2602 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2603 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2606 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2607 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2608 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2609 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2610 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2611 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 2612 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.25f;
#line 2613 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_PLASMA ;
#line 2614 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0.0f , 2.5f , 0.0f);
#line 2615 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2616 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2617 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2619 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaTail(void) {
#line 2622 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 2623 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 2624 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2626 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2627 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING );
#line 2628 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2630 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LARVA_TAIL );
#line 2631 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LARVA_TAIL );
#line 2632 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (4.0f , 4.0f , 4.0f));
#line 2634 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2636 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (50.0f , 10.0f , 1.0f , 1.0f);
#line 2637 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_LARVETTE  , SOF_3D  | SOF_LOOP );
#line 2639 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2640 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2641 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 12.0f;
#line 2642 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2643 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2644 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2645 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2646 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2647 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2648 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2649 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED_SLIDING ;
#line 2650 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 275.0f;
#line 2651 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 2652 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2654 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaTailExplosion(void) {
#line 2655 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlayerRocketExplosion  ();
#line 2656 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2663 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::WindBlast(void) {
#line 2665 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 2666 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING );
#line 2667 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2668 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2669 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_WINDBLAST );
#line 2670 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_WINDBLAST );
#line 2671 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (3.0f , 3.0f , 3.0f));
#line 2672 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2674 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 50.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2675 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2676 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2677 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 2678 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2679 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2680 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2681 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2682 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2683 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2684 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 2685 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2691 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::Meteor() {
#line 2693 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2694 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2695 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2697 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_LAVA_BOMB );
#line 2698 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_LAVA_BOMB );
#line 2702 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (m_fStretch  , m_fStretch  , m_fStretch ));
#line 2703 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2705 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner_Prepare  (this );
#line 2708 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2709 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2711 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (250.0f , 10.0f , 2.0f , 1.0f);
#line 2712 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2713 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 2714 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 100.0f;
#line 2715 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 100.0f;
#line 2716 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 15.0f;
#line 2717 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 30.0f;
#line 2718 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 100.0f;
#line 2719 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2720 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2721 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 2722 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2723 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = GetSoundLength  (SOUND_METEOR_BLAST ) + 0.25f;
#line 2724 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2725 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2726 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (100.0f);
#line 2727 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2728 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2730 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::MeteorExplosion() {
#line 2734 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2735 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2736 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2737 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2738 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2739 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 2740 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2741 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2742 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2743 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2744 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2746 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2747 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2748 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2749 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2752 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2753 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_CANNON ;
#line 2754 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (5 , 5 , 5);
#line 2755 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2757 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 2758 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 2759 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2762 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_DEBRIS ;
#line 2763 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2766 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_SMOKE ;
#line 2767 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2770 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2771 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2773 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 2774 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2775 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2777 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2778 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2779 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2781 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_ROCKET_PLANE ;
#line 2782 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2783 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 2784 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2785 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2786 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soExplosion  . Set3DParameters  (150.0f , 10.0f , 1.5f , 1.0f);
#line 2787 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soExplosion  , SOUND_METEOR_BLAST  , SOF_3D );
#line 2788 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2795 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterWoodenDart(void) {
#line 2797 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2798 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2799 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2800 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_SHTR_WOODEN_DART );
#line 2801 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEX_SHTR_WOODEN_DART );
#line 2804 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2805 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2809 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 2810 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_gdGameDifficulty  <= CSessionProperties  :: GD_EASY ){
#line 2811 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2812 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 2813 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2814 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2815 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2816 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2817 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2818 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2819 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 2820 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2821 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2822 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 2823 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2824 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2826 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterWoodenDartExplosion() {
#line 2828 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2829 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2830 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2831 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2832 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2833 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 0.5f;
#line 2834 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.1f;
#line 2835 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_WOOD ;
#line 2836 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = - en_vCurrentTranslationAbsolute  / 32.0f;
#line 2837 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2838 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2839 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2841 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterFireball(void) {
#line 2843 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2844 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2845 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2846 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 2847 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 2848 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.25f , 0.25f , 0.25f));
#line 2849 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2852 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2853 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2857 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 2858 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_gdGameDifficulty  <= CSessionProperties  :: GD_EASY ){
#line 2859 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.5f;
#line 2860 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 2861 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 15.0f;
#line 2862 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2863 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2864 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2865 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2866 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2867 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.125f;
#line 2868 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2869 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2870 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 2871 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2872 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2874 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterFireballExplosion() {
#line 2876 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2877 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2878 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2879 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2880 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2881 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 2882 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2883 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2884 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = - en_vCurrentTranslationAbsolute  / 32.0f;
#line 2885 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2886 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2887 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2889 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterFlame(void) {
#line 2891 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2892 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2893 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2894 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2895 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_FLAME );
#line 2897 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 10.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2898 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2899 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 1.0f;
#line 2900 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 3.0f;
#line 2901 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2902 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2903 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2904 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2905 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2906 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.3f;
#line 2907 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2908 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2910 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::AfterburnerDebris(void) 
#line 2911 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2912 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner_Prepare  (this );
#line 2914 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 2915 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FALL );
#line 2916 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2917 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_MARKER );
#line 2918 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 2920 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 2921 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 2922 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 2923 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 2924 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 0.0f;
#line 2925 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 0.0f;
#line 2926 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 0.0f;
#line 2927 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2928 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2929 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2930 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2931 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2932 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 2.0f;
#line 2933 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2934 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 2942 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ProjectileTouch(CEntityPointer penHit) 
#line 2943 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2945 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 2948 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirection ;
#line 2949 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fTransLen  = en_vIntendedTranslation  . Length  ();
#line 2950 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(fTransLen  > 0.5f)
#line 2951 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2952 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirection  = en_vIntendedTranslation  / fTransLen ;
#line 2953 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2954 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 2955 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2956 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
vDirection  = - en_vGravityDir ;
#line 2957 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2960 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
const FLOAT fDamageMul  = GetSeriousDamageMultiplier  (m_penLauncher );
#line 2961 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if((m_prtType  == PRT_FLAME  || m_prtType  == PRT_SHOOTER_FLAME ) && m_fWaitAfterDeath  > 0.0f){
#line 2963 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penLastDamaged  == penHit ){
#line 2964 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return ;
#line 2965 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 2966 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLastDamaged  = penHit ;
#line 2967 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2970 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bSpawnFlame  = TRUE ;
#line 2971 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bInflictDamage  = TRUE ;
#line 2972 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (penHit  , "AirElemental"))
#line 2973 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2974 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bSpawnFlame  = FALSE ;
#line 2975 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2977 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) penHit  -> GetEntityInfo  ();
#line 2978 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(pei  != NULL  && pei  -> Eeibt  == EIBT_ICE )
#line 2979 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2980 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bSpawnFlame  = FALSE ;
#line 2981 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bInflictDamage  = FALSE ;
#line 2982 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2984 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bSpawnFlame )
#line 2985 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2986 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnFlame  (m_penLauncher  , penHit  , GetPlacement  () . pl_PositionVector );
#line 2987 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2988 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bInflictDamage )
#line 2989 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 2990 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_BURNING  , m_fDamageAmount  * fDamageMul  , 
#line 2991 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 2992 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 2995 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else if(m_prtType  == PRT_AIRELEMENTAL_WIND ){
#line 2996 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(penHit  == m_penLastDamaged ){
#line 2997 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return ;
#line 2998 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 2999 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLastDamaged  = penHit ;
#line 3000 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3001 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_PROJECTILE  , m_fDamageAmount  * fDamageMul  , 
#line 3002 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3005 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 3006 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_PROJECTILE  , m_fDamageAmount  * fDamageMul  , 
#line 3007 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3008 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3009 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 3013 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ProjectileHit(void) 
#line 3014 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3016 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bExplode ){
#line 3017 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
const FLOAT fDamageMul  = GetSeriousDamageMultiplier  (m_penLauncher );
#line 3018 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
InflictRangeDamage  (m_penLauncher  , DMT_EXPLOSION  , m_fRangeDamageAmount  * fDamageMul  , 
#line 3019 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , m_fDamageHotSpotRange  , m_fDamageFallOffRange );
#line 3020 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3022 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_fSoundRange  > 0.0f && IsDerivedFromClass  (m_penLauncher  , "Player"))
#line 3023 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3024 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ESound  eSound ;
#line 3025 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSound  . EsndtSound  = SNDT_EXPLOSION ;
#line 3026 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
eSound  . penTarget  = m_penLauncher ;
#line 3027 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , m_fSoundRange ));
#line 3028 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3029 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 3033 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::SpawnEffect(const CPlacement3D & plEffect,const ESpawnEffect & eSpawnEffect) {
#line 3034 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntityPointer penEffect  = CreateEntity  (plEffect  , CLASS_BASIC_EFFECT );
#line 3035 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
penEffect  -> Initialize  (eSpawnEffect );
#line 3036 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 3043 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::BounceSound(void) {
#line 3044 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 3045 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : 
#line 3046 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(en_vCurrentTranslationAbsolute  . Length  () > 3.0f){
#line 3047 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 3048 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_GRENADE_BOUNCE  , SOF_3D );
#line 3049 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3050 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 3051 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3052 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 3057 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE CProjectile::GetRotationSpeed(ANGLE aWantedAngle,ANGLE aRotateSpeed,FLOAT fWaitFrequency) 
#line 3058 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3059 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aResult ;
#line 3061 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(aWantedAngle  < - aRotateSpeed  * fWaitFrequency )
#line 3062 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3064 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
aResult  = - aRotateSpeed ;
#line 3065 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3067 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else if(aWantedAngle  > aRotateSpeed  * fWaitFrequency )
#line 3068 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3070 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
aResult  = + aRotateSpeed ;
#line 3071 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3073 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 3074 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3075 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
aResult  = aWantedAngle  / fWaitFrequency ;
#line 3076 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3077 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return aResult ;
#line 3078 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
  
#line 3082 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
void CProjectile::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 3083 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 3084 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3087 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_DEMON_FIREBALL  && dmtType  == DMT_CANNONBALL )
#line 3088 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3089 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fDamageAmmount  *= 10001.0f;
#line 3090 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3091 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && IsOfClass  (penInflictor  , "Moving Brush"))
#line 3092 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3093 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Destroy  ();
#line 3094 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3096 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: ReceiveDamage  (penInflictor  , 
#line 3097 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 3098 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
BOOL CProjectile::
#line 3105 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileFly
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileFly expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3107 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3108 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3110 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3115 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3115 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3116 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3118 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50002, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50002_ProjectileFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50002
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3121 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3123 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3125 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3126 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3128 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3129 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3130 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3133 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3134 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3135 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3136 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3139 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3141 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3142 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3143 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3145 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3146 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3147 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3148 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3149 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3150 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3152 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3153 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3154 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3155 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3156 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3157 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3159 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3160 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3161 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3162 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50003_ProjectileFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50003

#line 3163 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3163 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3167 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileGuidedFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedFly
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedFly expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3169 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3170 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3172 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3173 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3173 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3174 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3176 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f50007, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50007_ProjectileGuidedFly_03(const CEntityEvent &__eeInput)
#line 3177 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50007
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f50008, FALSE, EInternal());return TRUE;}
#line 3178 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3186 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3188 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3189 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3190 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3191 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3193 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3198 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , m_aRotateSpeed  , fWaitFrequency );
#line 3201 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3203 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3204 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3206 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = m_fGuidedMaxSpeedFactor  * fSpeedIncreasingFactor ;
#line 3207 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 0.5f;
#line 3208 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3210 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3213 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 75.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3216 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3217 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3218 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fRNDHeading  = (FRnd  () - 0.5f) * 180 * fDistanceFactor ;
#line 3219 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fRNDPitch  = (FRnd  () - 0.5f) * 90 * fDistanceFactor ;
#line 3222 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3223 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3225 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedPitch  = GetRelativePitch  (vDesiredDirection );
#line 3226 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aPitch  = GetRotationSpeed  (aWantedPitch  , m_aRotateSpeed  * 1.5f , fWaitFrequency );
#line 3228 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  + fRNDHeading  , aPitch  + fRNDPitch  , 0));
#line 3229 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3231 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 3232 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3233 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , fDistanceFactor  * 40 , 0));
#line 3234 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3235 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3237 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f50005, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50005_ProjectileGuidedFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50005
switch(__eeInput.ee_slEvent)
#line 3238 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3241 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3243 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3245 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3246 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3248 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3249 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3250 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3251 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3251 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3252 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3253 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3254 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3256 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3257 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3258 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3259 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3260 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3260 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3261 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3262 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3263 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3265 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3266 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50006, FALSE, EInternal());return TRUE;
#line 3267 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3268 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50006_ProjectileGuidedFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50006
Jump(STATE_CURRENT,0x01f50007, FALSE, EInternal());return TRUE;
#line 3269 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f50008_ProjectileGuidedFly_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50008

#line 3270 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3270 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3273 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileGuidedFastFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedFastFly
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedFastFly expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3275 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3276 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3278 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3279 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3279 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3280 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3282 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f5000c, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5000c_ProjectileGuidedFastFly_03(const CEntityEvent &__eeInput)
#line 3283 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000c
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f5000d, FALSE, EInternal());return TRUE;}
#line 3284 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3286 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_BEAST_BIG_PROJECTILE  && 
#line 3287 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
DistanceTo  (this  , m_penTarget ) < 20.0f && 
#line 3288 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
(m_fStartTime  + m_fFlyTime  - _pTimer  -> CurrentTick  ()) > 1.5f)
#line 3289 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3290 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = _pTimer  -> CurrentTick  () - m_fStartTime  + 1.5f;
#line 3291 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3292 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3294 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3295 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3296 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3297 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3299 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3300 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , 5.0f , fWaitFrequency );
#line 3303 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3305 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3306 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3308 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = m_fGuidedMaxSpeedFactor  * fSpeedIncreasingFactor ;
#line 3309 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 10.0f;
#line 3310 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3312 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3315 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 110.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3318 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3319 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3322 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3323 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3324 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bLockedOn  = TRUE ;
#line 3326 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedPitch  = GetRelativePitch  (vDesiredDirection );
#line 3327 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aPitch  = GetRotationSpeed  (aWantedPitch  , m_aRotateSpeed  * 1.5f , fWaitFrequency );
#line 3329 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , aPitch  , 0));
#line 3330 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3332 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 3333 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3334 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bLockedOn )
#line 3335 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3336 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE3D aBankingUp ;
#line 3337 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
aBankingUp  = GetPlacement  () . pl_OrientationAngle ;
#line 3338 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
aBankingUp  (3) = 0.0f;
#line 3339 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPlacement  (CPlacement3D (GetPlacement  () . pl_PositionVector  , aBankingUp ));
#line 3340 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3341 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bLockedOn  = FALSE ;
#line 3343 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , 400 , 0));
#line 3344 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3345 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3347 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f5000a, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5000a_ProjectileGuidedFastFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000a
switch(__eeInput.ee_slEvent)
#line 3348 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3352 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3354 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3355 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3356 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3357 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (etouch  . penOther  , "Demon");
#line 3358 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vTrans  = en_vCurrentTranslationAbsolute ;
#line 3359 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= Abs  (vTrans  . Normalize  () % FLOAT3D (etouch  . plCollision )) > 0.35;
#line 3361 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3362 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3363 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3363 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3364 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3366 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3367 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3369 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3371 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3373 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3374 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3376 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3378 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! (m_prtType  == PRT_DEMON_FIREBALL  && IsOfClass  (epass  . penOther  , "Projectile"));
#line 3379 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! (m_prtType  == PRT_BEAST_BIG_PROJECTILE  && IsOfClass  (epass  . penOther  , "Projectile"));
#line 3381 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3382 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3383 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3383 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3384 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3385 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3386 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3388 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3389 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3390 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3391 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3392 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3392 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3393 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3394 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3395 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3397 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3398 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000b, FALSE, EInternal());return TRUE;
#line 3399 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3400 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f5000b_ProjectileGuidedFastFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000b
Jump(STATE_CURRENT,0x01f5000c, FALSE, EInternal());return TRUE;
#line 3401 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f5000d_ProjectileGuidedFastFly_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000d

#line 3402 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3402 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3406 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileGuidedSlide(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedSlide
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedSlide expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3408 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3409 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3411 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3412 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3412 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3413 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3415 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f50011, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50011_ProjectileGuidedSlide_03(const CEntityEvent &__eeInput)
#line 3416 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50011
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f50012, FALSE, EInternal());return TRUE;}
#line 3417 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3418 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3420 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3421 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3422 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3423 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3425 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3426 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , m_aRotateSpeed  , fWaitFrequency );
#line 3429 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3431 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3432 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3434 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = 30.0f * fSpeedIncreasingFactor ;
#line 3435 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 0.5f;
#line 3436 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3438 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3441 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 75.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3444 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3445 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3446 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
FLOAT fRNDHeading  = (FRnd  () - 0.5f) * 180 * fDistanceFactor ;
#line 3449 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3450 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3452 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  + fRNDHeading  , 0 , 0));
#line 3453 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3455 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
else 
#line 3456 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3457 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , 0 , 0));
#line 3458 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3459 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3461 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f5000f, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5000f_ProjectileGuidedSlide_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000f
switch(__eeInput.ee_slEvent)
#line 3462 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3465 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3467 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3469 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3470 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3472 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3473 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3474 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3475 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3475 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3476 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3477 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3478 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3480 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3481 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3482 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3483 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3484 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3484 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3485 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3486 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3487 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3489 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3490 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50010, FALSE, EInternal());return TRUE;
#line 3491 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3492 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50010_ProjectileGuidedSlide_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50010
Jump(STATE_CURRENT,0x01f50011, FALSE, EInternal());return TRUE;
#line 3493 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f50012_ProjectileGuidedSlide_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50012

#line 3494 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3494 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3498 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileSlide(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileSlide
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileSlide expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3500 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3501 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3503 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3504 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3504 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3505 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3507 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50014, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50014_ProjectileSlide_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50014
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3510 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3512 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3514 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3515 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3517 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3518 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(epass  . penOther  != m_penLauncher ){
#line 3519 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = bHit ;
#line 3520 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3521 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3522 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3524 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && IsDerivedFromClass  ((CEntity  *) & * (epass  . penOther ) , "Enemy Base")){
#line 3525 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3526 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3528 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_AIRELEMENTAL_WIND  && IsDerivedFromClass  ((CEntity  *) & * (epass  . penOther ) , "MovableEntity")){
#line 3529 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3530 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3532 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3533 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3534 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3535 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3538 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3540 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3541 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = ! (etouch  . penOther  -> GetRenderType  () & RT_BRUSH );
#line 3542 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && ! bHit  && ! m_bLeftFlame )
#line 3543 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3544 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SpawnFlame  (m_penLauncher  , etouch  . penOther  , GetPlacement  () . pl_PositionVector );
#line 3545 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_bLeftFlame  = TRUE ;
#line 3546 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3547 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(! bHit ){BounceSound  ();}
#line 3549 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3550 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3551 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3552 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3553 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3554 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3556 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(en_vCurrentTranslationAbsolute  . Length  () < 0.25f * en_vDesiredTranslationRelative  . Length  ()){
#line 3557 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3558 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3559 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3560 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3561 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3563 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3564 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3565 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3566 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3567 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3568 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3570 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3571 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3572 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3573 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50015_ProjectileSlide_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50015

#line 3574 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3574 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3578 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileFlyRebounding(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileFlyRebounding
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileFlyRebounding expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3580 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3581 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3583 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3584 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3584 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3585 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3587 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50017, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50017_ProjectileFlyRebounding_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50017
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3590 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3592 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3594 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3595 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3597 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3598 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3599 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3600 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3601 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3602 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3603 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3606 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3608 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3611 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = (etouch  . penOther  -> GetRenderType  () == RT_BRUSH );
#line 3613 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit  && m_iRebounds  > 0){
#line 3615 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ReflectDirectionVectorByPlane  (etouch  . plCollision  , en_vCurrentTranslationAbsolute );
#line 3616 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ReflectRotationMatrixByPlane_cols  (etouch  . plCollision  , en_mRotation );
#line 3617 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_iRebounds  --;
#line 3618 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}else {
#line 3620 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3621 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3623 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3624 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3625 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3626 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3627 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3628 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3629 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3631 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3632 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3633 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3634 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3635 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3636 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3638 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3639 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3640 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3641 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50018_ProjectileFlyRebounding_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50018

#line 3642 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3642 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3646 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ELaunchProjectile, "CProjectile::Main expects 'ELaunchProjectile' as input!");  const ELaunchProjectile &eLaunch = (const ELaunchProjectile &)__eeInput;
#line 3648 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ASSERT  (eLaunch  . penLauncher  != NULL );
#line 3649 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLauncher  = eLaunch  . penLauncher ;
#line 3650 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_prtType  = eLaunch  . prtType ;
#line 3651 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fSpeed  = eLaunch  . fSpeed ;
#line 3652 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fStretch  = eLaunch  . fStretch ;
#line 3653 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetPredictable  (TRUE );
#line 3655 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = _pTimer  -> CurrentTick  () + 1.0f;
#line 3656 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_penLastDamaged  = NULL ;
#line 3658 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 3659 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : 
#line 3660 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : 
#line 3661 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : 
#line 3662 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : 
#line 3663 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3664 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_RocketTrail_Prepare  (this );
#line 3665 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 3666 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3667 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : break ;
#line 3668 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : Particles_GrenadeTrail_Prepare  (this );break ;
#line 3669 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : Particles_RocketTrail_Prepare  (this );break ;
#line 3670 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : Particles_FirecrackerTrail_Prepare  (this );break ;
#line 3671 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : Particles_Fireball01Trail_Prepare  (this );break ;
#line 3672 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : Particles_BombTrail_Prepare  (this );break ;
#line 3673 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : Particles_LavaTrail_Prepare  (this );break ;
#line 3674 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : Particles_LavaBombTrail_Prepare  (this );break ;
#line 3675 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : Particles_LavaBombTrail_Prepare  (this );break ;
#line 3676 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : Particles_Fireball01Trail_Prepare  (this );break ;
#line 3677 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : 
#line 3678 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : 
#line 3679 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : 
#line 3681 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Particles_FirecrackerTrail_Prepare  (this );
#line 3682 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
break ;
#line 3683 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : Particles_Fireball01Trail_Prepare  (this );break ;
#line 3684 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3686 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(m_prtType )
#line 3687 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
{
#line 3688 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : WalkerRocket  ();break ;
#line 3689 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : PlayerRocket  ();break ;
#line 3690 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : PlayerGrenade  ();break ;
#line 3691 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_FLAME : PlayerFlame  ();break ;
#line 3692 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_RAY : PlayerLaserRay  ();break ;
#line 3693 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : CatmanProjectile  ();break ;
#line 3694 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : HeadmanFirecracker  ();break ;
#line 3695 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : HeadmanRocketman  ();break ;
#line 3696 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : HeadmanBomberman  ();break ;
#line 3697 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BONEMAN_FIRE : BonemanProjectile  ();break ;
#line 3698 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WOMAN_FIRE : WomanProjectile  ();break ;
#line 3699 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_FIRE : DragonmanProjectile  (DRAGONMAN_NORMAL );break ;
#line 3700 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_STRONG_FIRE : DragonmanProjectile  (DRAGONMAN_STRONG );break ;
#line 3701 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_STONEMAN_FIRE : ElementalRock  (ELEMENTAL_NORMAL  , ELEMENTAL_STONEMAN );break ;
#line 3702 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_STONEMAN_BIG_FIRE : ElementalRock  (ELEMENTAL_BIG  , ELEMENTAL_STONEMAN );break ;
#line 3703 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_STONEMAN_LARGE_FIRE : ElementalRock  (ELEMENTAL_LARGE  , ELEMENTAL_STONEMAN );break ;
#line 3704 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : LavaManBomb  ();break ;
#line 3705 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : LavaManBomb  ();break ;
#line 3706 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_STONE : ElementalRock  (ELEMENTAL_NORMAL  , ELEMENTAL_LAVAMAN );break ;
#line 3707 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ICEMAN_FIRE : ElementalRock  (ELEMENTAL_NORMAL  , ELEMENTAL_ICEMAN );break ;
#line 3708 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ICEMAN_BIG_FIRE : ElementalRock  (ELEMENTAL_BIG  , ELEMENTAL_ICEMAN );break ;
#line 3709 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ICEMAN_LARGE_FIRE : ElementalRock  (ELEMENTAL_LARGE  , ELEMENTAL_ICEMAN );break ;
#line 3710 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HUANMAN_FIRE : HuanmanProjectile  ();break ;
#line 3711 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_FISHMAN_FIRE : FishmanProjectile  ();break ;
#line 3712 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_MANTAMAN_FIRE : MantamanProjectile  ();break ;
#line 3713 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_LASER : CyborgLaser  ();break ;
#line 3714 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_BOMB : CyborgBomb  ();break ;
#line 3715 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : LavaBall  ();break ;
#line 3716 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : BeastProjectile  ();break ;
#line 3717 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : BeastBigProjectile  ();break ;
#line 3718 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_DEBRIS : BeastDebris  ();break ;
#line 3719 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_DEBRIS : BeastBigDebris  ();break ;
#line 3720 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_LASER : DevilLaser  ();break ;
#line 3721 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : DevilRocket  ();break ;
#line 3722 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : DevilGuidedProjectile  ();break ;
#line 3723 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_SOL : GruntSoldierLaser  ();break ;
#line 3724 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_COM : GruntCommanderLaser  ();break ;
#line 3725 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : GuffyProjectile  ();break ;
#line 3726 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : DemonFireball  ();break ;
#line 3727 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_PLASMA : LarvaPlasma  ();break ;
#line 3728 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_TAIL_PROJECTILE : LarvaTail  ();break ;
#line 3729 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : ShooterWoodenDart  ();break ;
#line 3730 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : ShooterFireball  ();break ;
#line 3731 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FLAME : ShooterFlame  ();break ;
#line 3732 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_AFTERBURNER_DEBRIS : AfterburnerDebris  ();break ;
#line 3733 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_AIRELEMENTAL_WIND : WindBlast  ();break ;
#line 3734 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_METEOR : Meteor  ();break ;
#line 3735 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
default  : ASSERTALWAYS  ("Unknown projectile type");
#line 3736 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3739 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource ){SetupLightSource  (TRUE );}
#line 3742 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
m_fStartTime  = _pTimer  -> CurrentTick  ();
#line 3744 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(!(m_pmtMove  == PMT_GUIDED )){ Jump(STATE_CURRENT,0x01f5002f, FALSE, EInternal());return TRUE;}
#line 3745 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileGuidedFly, TRUE;
Jump(STATE_CURRENT, 0x01f50019, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50019_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50019
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedFly, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f5001a, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f5001a_Main_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001a
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f5002e, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5002f_Main_23(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002f
if(!(m_pmtMove  == PMT_GUIDED_FAST )){ Jump(STATE_CURRENT,0x01f5002d, FALSE, EInternal());return TRUE;}
#line 3747 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileGuidedFastFly, TRUE;
Jump(STATE_CURRENT, 0x01f5001b, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001b_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedFastFly, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f5001c, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f5001c_Main_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001c
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f5002c, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5002d_Main_21(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002d
if(!(m_pmtMove  == PMT_FLYING )){ Jump(STATE_CURRENT,0x01f5002b, FALSE, EInternal());return TRUE;}
#line 3749 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileFly, TRUE;
Jump(STATE_CURRENT, 0x01f5001d, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001d_Main_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001d
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileFly, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f5001e, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f5001e_Main_06(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001e
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f5002a, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5002b_Main_19(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002b
if(!(m_pmtMove  == PMT_SLIDING )){ Jump(STATE_CURRENT,0x01f50029, FALSE, EInternal());return TRUE;}
#line 3751 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileSlide, TRUE;
Jump(STATE_CURRENT, 0x01f5001f, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001f_Main_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileSlide, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f50020, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50020_Main_08(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50020
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f50028, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50029_Main_17(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50029
if(!(m_pmtMove  == PMT_FLYING_REBOUNDING )){ Jump(STATE_CURRENT,0x01f50027, FALSE, EInternal());return TRUE;}
#line 3753 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileFlyRebounding, TRUE;
Jump(STATE_CURRENT, 0x01f50021, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50021_Main_09(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50021
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileFlyRebounding, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f50022, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50022_Main_10(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50022
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f50026, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50027_Main_15(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50027
if(!(m_pmtMove  == PMT_GUIDED_SLIDING )){ Jump(STATE_CURRENT,0x01f50025, FALSE, EInternal());return TRUE;}
#line 3755 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileGuidedSlide, TRUE;
Jump(STATE_CURRENT, 0x01f50023, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50023_Main_11(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50023
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedSlide, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f50024, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50024_Main_12(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50024
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f50025, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50025_Main_13(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50025
Jump(STATE_CURRENT,0x01f50026, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f50026_Main_14(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50026
Jump(STATE_CURRENT,0x01f50028, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f50028_Main_16(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50028
Jump(STATE_CURRENT,0x01f5002a, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f5002a_Main_18(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002a
Jump(STATE_CURRENT,0x01f5002c, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f5002c_Main_20(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002c
Jump(STATE_CURRENT,0x01f5002e, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f5002e_Main_22(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002e

#line 3759 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 3760 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : WalkerRocketExplosion  ();break ;
#line 3761 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : PlayerRocketExplosion  ();break ;
#line 3762 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : PlayerGrenadeExplosion  ();break ;
#line 3763 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_RAY : PlayerLaserWave  ();break ;
#line 3764 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : HeadmanBombermanExplosion  ();break ;
#line 3765 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_BOMB : CyborgBombExplosion  ();break ;
#line 3766 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : LavamanBombDebrisExplosion  ();break ;
#line 3767 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : LavamanBombExplosion  ();break ;
#line 3768 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : LavamanBombDebrisExplosion  ();break ;
#line 3769 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : BeastBigProjectileExplosion  ();break ;
#line 3770 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : BeastProjectileExplosion  ();break ;
#line 3771 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_DEBRIS : BeastDebrisExplosion  ();break ;
#line 3772 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_DEBRIS : BeastBigDebrisExplosion  ();break ;
#line 3773 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : DevilRocketExplosion  ();break ;
#line 3774 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : DevilGuidedProjectileExplosion  ();break ;
#line 3775 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : GuffyProjectileExplosion  ();break ;
#line 3776 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : DemonFireballExplosion  ();break ;
#line 3777 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_PLASMA : LarvaPlasmaExplosion  ();break ;
#line 3778 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_TAIL_PROJECTILE : LarvaTailExplosion  ();break ;
#line 3779 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : ShooterWoodenDartExplosion  ();break ;
#line 3780 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : ShooterFireballExplosion  ();break ;
#line 3781 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
case PRT_METEOR : MeteorExplosion  ();break ;
#line 3782 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
}
#line 3785 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(!(m_fWaitAfterDeath  > 0.0f)){ Jump(STATE_CURRENT,0x01f50032, FALSE, EInternal());return TRUE;}
#line 3786 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SwitchToEditorModel  ();
#line 3787 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
ForceFullStop  ();
#line 3788 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 3790 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource ){SetupLightSource  (FALSE );}
#line 3791 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fWaitAfterDeath );
Jump(STATE_CURRENT, 0x01f50030, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50030_Main_24(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50030
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01f50031, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50031_Main_25(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50031
;Jump(STATE_CURRENT,0x01f50032, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50032_Main_26(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50032

#line 3794 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Destroy  ();
#line 3796 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3796 "C:/MyMod/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};
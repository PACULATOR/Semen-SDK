/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"

#include "StdH.h"
#include "Models/Items/ItemHolder/ItemHolder.h"

#include <EntitiesMP/HealthItem.h>
#include <EntitiesMP/HealthItem_tables.h>
CEntityEvent *EHealth::MakeCopy(void) { CEntityEvent *peeCopy = new EHealth(*this); return peeCopy;}
EHealth::EHealth() : CEntityEvent(EVENTCODE_EHealth) {;
 ClearToDefault(fHealth);
 ClearToDefault(bOverTopHealth);
};
void CHealthItem::SetDefaultProperties(void) {
  m_EhitType = HIT_SMALL ;
  m_bOverTopHealth = FALSE ;
  m_iSoundComponent = 0;
  CItem::SetDefaultProperties();
}
  
#line 74 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
void CHealthItem::Precache(void) {
#line 75 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
switch(m_EhitType ){
#line 76 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_PILL : PrecacheSound  (SOUND_PILL );break ;
#line 77 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SMALL : PrecacheSound  (SOUND_SMALL );break ;
#line 78 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_MEDIUM : PrecacheSound  (SOUND_MEDIUM );break ;
#line 79 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_LARGE : PrecacheSound  (SOUND_LARGE );break ;
#line 80 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SUPER : PrecacheSound  (SOUND_SUPER );break ;
#line 81 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 82 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
  
#line 84 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
BOOL CHealthItem::FillEntityStatistics(EntityStats * pes) 
#line 85 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
{
#line 86 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
pes  -> es_strName  = "Health";
#line 87 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
pes  -> es_ctCount  = 1;
#line 88 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
pes  -> es_ctAmmount  = m_fValue ;
#line 89 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
pes  -> es_fValue  = m_fValue ;
#line 90 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
pes  -> es_iScore  = 0;
#line 92 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
switch(m_EhitType ){
#line 93 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_PILL : pes  -> es_strName  += " pill";break ;
#line 94 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SMALL : pes  -> es_strName  += " small";break ;
#line 95 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_MEDIUM : pes  -> es_strName  += " medium";break ;
#line 96 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_LARGE : pes  -> es_strName  += " large";break ;
#line 97 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SUPER : pes  -> es_strName  += " super";break ;
#line 98 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 100 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
return TRUE ;
#line 101 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
  
#line 104 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
void CHealthItem::RenderParticles(void) {
#line 106 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(GetRenderType  () != CEntity  :: RT_MODEL  || GetSP  () -> sp_gmGameMode  > CSessionProperties  :: GM_COOPERATIVE  
#line 107 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
|| ! ShowItemParticles  ())
#line 108 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
{
#line 109 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
return ;
#line 110 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 111 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
switch(m_EhitType ){
#line 112 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_PILL : 
#line 113 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Particles_Stardust  (this  , 0.9f * 0.75f , 0.70f * 0.75f , PT_STAR08  , 32);
#line 114 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 115 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SMALL : 
#line 116 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Particles_Stardust  (this  , 1.0f * 0.75f , 0.75f * 0.75f , PT_STAR08  , 128);
#line 117 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 118 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_MEDIUM : 
#line 119 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Particles_Stardust  (this  , 1.0f * 0.75f , 0.75f * 0.75f , PT_STAR08  , 128);
#line 120 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 121 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_LARGE : 
#line 122 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Particles_Stardust  (this  , 2.0f * 0.75f , 1.0f * 0.75f , PT_STAR08  , 192);
#line 123 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 124 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SUPER : 
#line 125 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Particles_Stardust  (this  , 2.3f * 0.75f , 1.5f * 0.75f , PT_STAR08  , 320);
#line 126 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 127 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 128 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
  
#line 131 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
void CHealthItem::SetProperties(void) {
#line 132 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
switch(m_EhitType ){
#line 133 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_PILL : 
#line 134 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StartModelAnim  (ITEMHOLDER_ANIM_SMALLOSCILATION  , AOF_LOOPING  | AOF_NORESTART );
#line 135 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ForceCollisionBoxIndexChange  (ITEMHOLDER_COLLISION_BOX_SMALL );
#line 136 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fValue  = 1.0f;
#line 137 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_bOverTopHealth  = TRUE ;
#line 138 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fRespawnTime  = (m_fCustomRespawnTime  > 0) ? m_fCustomRespawnTime  : 10.0f;
#line 139 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_strDescription  . PrintF  ("Pill - H:%g  T:%g" , m_fValue  , m_fRespawnTime );
#line 141 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddItem  (MODEL_PILL  , TEXTURE_PILL  , 0 , TEXTURE_SPECULAR_STRONG  , TEXTURE_PILL_BUMP );
#line 143 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddFlare  (MODEL_FLARE  , TEXTURE_FLARE  , FLOAT3D (0 , 0.2f , 0) , FLOAT3D (1 , 1 , 0.3f));
#line 144 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StretchItem  (FLOAT3D (1.0f * 0.75f , 1.0f * 0.75f , 1.0f * 0.75));
#line 145 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_iSoundComponent  = SOUND_PILL ;
#line 146 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 147 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SMALL : 
#line 148 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StartModelAnim  (ITEMHOLDER_ANIM_SMALLOSCILATION  , AOF_LOOPING  | AOF_NORESTART );
#line 149 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ForceCollisionBoxIndexChange  (ITEMHOLDER_COLLISION_BOX_MEDIUM );
#line 150 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fValue  = 10.0f;
#line 151 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_bOverTopHealth  = FALSE ;
#line 152 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fRespawnTime  = (m_fCustomRespawnTime  > 0) ? m_fCustomRespawnTime  : 10.0f;
#line 153 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_strDescription  . PrintF  ("Small - H:%g  T:%g" , m_fValue  , m_fRespawnTime );
#line 155 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddItem  (MODEL_SMALL  , TEXTURE_SMALL  , TEXTURE_REFLECTION_LIGHTMETAL01  , TEXTURE_SPECULAR_MEDIUM  , 0);
#line 156 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddFlare  (MODEL_FLARE  , TEXTURE_FLARE  , FLOAT3D (0 , 0.4f , 0) , FLOAT3D (2 , 2 , 0.4f));
#line 157 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StretchItem  (FLOAT3D (1.0f * 0.75f , 1.0f * 0.75f , 1.0f * 0.75));
#line 158 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_iSoundComponent  = SOUND_SMALL ;
#line 159 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 161 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_MEDIUM : 
#line 162 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StartModelAnim  (ITEMHOLDER_ANIM_SMALLOSCILATION  , AOF_LOOPING  | AOF_NORESTART );
#line 163 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ForceCollisionBoxIndexChange  (ITEMHOLDER_COLLISION_BOX_MEDIUM );
#line 164 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fValue  = 25.0f;
#line 165 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_bOverTopHealth  = FALSE ;
#line 166 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fRespawnTime  = (m_fCustomRespawnTime  > 0) ? m_fCustomRespawnTime  : 25.0f;
#line 167 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_strDescription  . PrintF  ("Medium - H:%g  T:%g" , m_fValue  , m_fRespawnTime );
#line 169 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddItem  (MODEL_MEDIUM  , TEXTURE_MEDIUM  , TEXTURE_REFLECTION_LIGHTMETAL01  , TEXTURE_SPECULAR_MEDIUM  , 0);
#line 170 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddFlare  (MODEL_FLARE  , TEXTURE_FLARE  , FLOAT3D (0 , 0.6f , 0) , FLOAT3D (2.5f , 2.5f , 0.5f));
#line 171 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StretchItem  (FLOAT3D (1.5f * 0.75f , 1.5f * 0.75f , 1.5f * 0.75));
#line 172 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_iSoundComponent  = SOUND_MEDIUM ;
#line 173 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 174 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_LARGE : 
#line 175 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StartModelAnim  (ITEMHOLDER_ANIM_SMALLOSCILATION  , AOF_LOOPING  | AOF_NORESTART );
#line 176 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ForceCollisionBoxIndexChange  (ITEMHOLDER_COLLISION_BOX_MEDIUM );
#line 177 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fValue  = 50.0f;
#line 178 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_bOverTopHealth  = FALSE ;
#line 179 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fRespawnTime  = (m_fCustomRespawnTime  > 0) ? m_fCustomRespawnTime  : 60.0f;
#line 180 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_strDescription  . PrintF  ("Large - H:%g  T:%g" , m_fValue  , m_fRespawnTime );
#line 182 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddItem  (MODEL_LARGE  , TEXTURE_LARGE  , TEXTURE_REFLECTION_GOLD01  , TEXTURE_SPECULAR_STRONG  , 0);
#line 183 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddFlare  (MODEL_FLARE  , TEXTURE_FLARE  , FLOAT3D (0 , 0.8f , 0) , FLOAT3D (2.8f , 2.8f , 1.0f));
#line 184 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StretchItem  (FLOAT3D (1.2f * 0.75f , 1.2f * 0.75f , 1.2f * 0.75));
#line 185 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_iSoundComponent  = SOUND_LARGE ;
#line 186 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 187 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SUPER : 
#line 188 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StartModelAnim  (ITEMHOLDER_ANIM_SMALLOSCILATION  , AOF_LOOPING  | AOF_NORESTART );
#line 189 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ForceCollisionBoxIndexChange  (ITEMHOLDER_COLLISION_BOX_MEDIUM );
#line 190 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fValue  = 100.0f;
#line 191 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_bOverTopHealth  = TRUE ;
#line 192 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fRespawnTime  = (m_fCustomRespawnTime  > 0) ? m_fCustomRespawnTime  : 120.0f;
#line 193 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_strDescription  . PrintF  ("Super - H:%g  T:%g" , m_fValue  , m_fRespawnTime );
#line 195 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddItem  (MODEL_SUPER  , TEXTURE_SUPER  , 0 , TEXTURE_SPECULAR_MEDIUM  , 0);
#line 196 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
AddFlare  (MODEL_FLARE  , TEXTURE_FLARE  , FLOAT3D (0 , 1.0f , 0) , FLOAT3D (3 , 3 , 1.0f));
#line 197 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
StretchItem  (FLOAT3D (1.0f * 0.75f , 1.0f * 0.75f , 1.0f * 0.75));
#line 198 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
CModelObject & mo  = GetModelObject  () -> GetAttachmentModel  (ITEMHOLDER_ATTACHMENT_ITEM ) -> amo_moModelObject ;
#line 199 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
mo  . PlayAnim  (0 , AOF_LOOPING );
#line 201 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_iSoundComponent  = SOUND_SUPER ;
#line 202 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
break ;
#line 203 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 204 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
  
#line 206 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
void CHealthItem::AdjustDifficulty(void) 
#line 207 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
{
#line 208 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(! GetSP  () -> sp_bAllowHealth  && m_penTarget  == NULL ){
#line 209 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Destroy  ();
#line 210 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 211 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
BOOL CHealthItem::
#line 213 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ItemCollected(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHealthItem_ItemCollected
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EPass, "CHealthItem::ItemCollected expects 'EPass' as input!");  const EPass &epass = (const EPass &)__eeInput;
#line 214 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
ASSERT  (epass  . penOther  != NULL );
#line 217 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(GetSP  () -> sp_bHealthArmorStays  && ! (m_bPickupOnce  || m_bRespawn )){
#line 219 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
BOOL bWasPicked  = MarkPickedBy  (epass  . penOther );
#line 220 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(bWasPicked ){
#line 222 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Return(STATE_CURRENT,EVoid());
#line 222 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
return TRUE;
#line 223 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 224 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 227 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
EHealth  eHealth ;
#line 228 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
eHealth  . fHealth  = m_fValue ;
#line 229 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
eHealth  . bOverTopHealth  = m_bOverTopHealth ;
#line 231 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(epass  . penOther  -> ReceiveItem  (eHealth )){
#line 233 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(_pNetwork  -> IsPlayerLocal  (epass  . penOther ))
#line 234 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
{
#line 235 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
switch(m_EhitType )
#line 236 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
{
#line 237 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_PILL : IFeel_PlayEffect  ("PU_HealthPill");break ;
#line 238 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SMALL : IFeel_PlayEffect  ("PU_HealthSmall");break ;
#line 239 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_MEDIUM : IFeel_PlayEffect  ("PU_HealthMedium");break ;
#line 240 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_LARGE : IFeel_PlayEffect  ("PU_HealthLarge");break ;
#line 241 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
case HIT_SUPER : IFeel_PlayEffect  ("PU_HealthSuper");break ;
#line 242 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 243 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 246 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_soPick  . Set3DParameters  (50.0f , 1.0f , 1.0f , 1.0f);
#line 247 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
PlaySound  (m_soPick  , m_iSoundComponent  , SOF_3D );
#line 248 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
m_fPickSoundLen  = GetSoundLength  (m_iSoundComponent );
#line 249 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
if(! GetSP  () -> sp_bHealthArmorStays  || (m_bPickupOnce  || m_bRespawn )){
#line 250 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Jump(STATE_CURRENT, STATE_CItem_ItemReceived, FALSE, EVoid());return TRUE;
#line 251 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 252 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
}
#line 253 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Return(STATE_CURRENT,EVoid());
#line 253 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHealthItem::
#line 256 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHealthItem_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHealthItem::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 257 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Initialize  ();
#line 258 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
SetProperties  ();
#line 260 "C:/MyMod/Sources/EntitiesMP/HealthItem.es"
Jump(STATE_CURRENT, STATE_CItem_ItemLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};
/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"

#include "StdH.h"
#include "EntitiesMP/WorldSettingsController.h"

#include <EntitiesMP/ModelHolder2.h>
#include <EntitiesMP/ModelHolder2_tables.h>
#line 23 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"

#define MIPRATIO 0.003125f //(2*tan(90/2))/640

void CModelHolder2::SetDefaultProperties(void) {
  m_fnModel = CTFILENAME("Models\\Editor\\Axis.mdl");
  m_fnTexture = CTFILENAME("Models\\Editor\\Vector.tex");
  m_fnReflection = CTString("");
  m_fnSpecular = CTString("");
  m_fnBump = CTString("");
  m_fStretchAll = 1.0f;
  m_fStretchX = 1.0f;
  m_fStretchY = 1.0f;
  m_fStretchZ = 1.0f;
  m_strName = "";
  m_strDescription = "";
  m_bColliding = FALSE ;
  m_iModelAnimation = 0;
  m_iTextureAnimation = 0;
  m_stClusterShadows = ST_CLUSTER ;
  m_bBackground = FALSE ;
  m_bTargetable = FALSE ;
  m_cstCustomShading = CST_NONE ;
  m_aShadingDirection = ANGLE3D(AngleDeg  (45.0f) , AngleDeg  (45.0f) , AngleDeg  (45.0f));
  m_colLight = C_WHITE ;
  m_colAmbient = C_BLACK ;
  m_fnmLightAnimation = CTString("");
  m_iLightAnimation = 0;
  m_aoLightAnimation.SetData(NULL);

  m_bAttachments = TRUE ;
  m_bActive = TRUE ;
  m_fMipAdd = 0.0f;
  m_fMipMul = 1.0f;
  m_fMipFadeDist = 0.0f;
  m_fMipFadeLen = 0.0f;
  m_rMipFadeDistMetric = -1.0f;
  m_fMipFadeLenMetric = -1.0f;
  m_bRandomStretch = FALSE ;
  m_fStretchRndX = 0.2f;
  m_fStretchRndY = 0.2f;
  m_fStretchRndZ = 0.2f;
  m_fStretchRndAll = 0.0f;
  m_fStretchRandom = FLOAT3D(1 , 1 , 1);
  m_penDestruction = NULL;
  m_vDamage = FLOAT3D(0 , 0 , 0);
  m_tmLastDamage = -1000.0f;
  m_penDestroyTarget = NULL;
  m_penLastDamager = NULL;
  m_tmSpraySpawned = 0.0f;
  m_fSprayDamage = 0.0f;
  m_penSpray = NULL;
  m_fMaxDamageAmmount = 0.0f;
  m_fClassificationStretch = 1.0f;
  m_colBurning = COLOR(C_WHITE  | CT_OPAQUE );
  m_dmtLastDamageType = DMT_CHAINSAW ;
  m_fChainSawCutDamage = 300.0f;
  m_iFirstRandomAnimation = -1;
  m_fMaxTessellationLevel = 0.0f;
  CRationalEntity::SetDefaultProperties();
}
  
#line 105 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void CModelHolder2::Precache(void) {
#line 106 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
PrecacheClass  (CLASS_BLOOD_SPRAY  , 0);
#line 107 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 110 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
BOOL CModelHolder2::FillEntityStatistics(EntityStats * pes) 
#line 111 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 112 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_strName  = m_fnModel  . FileName  () + ", " + m_fnTexture  . FileName  ();
#line 113 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_ctCount  = 1;
#line 114 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_ctAmmount  = 1;
#line 115 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestruction  != NULL ){
#line 116 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_strName  += " (destroyable)";
#line 117 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_fValue  = GetDestruction  () -> m_fHealth ;
#line 118 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_iScore  = 0;
#line 119 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 120 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_fValue  = 0;
#line 121 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pes  -> es_iScore  = 0;
#line 122 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 123 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE ;
#line 124 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 127 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D CModelHolder2::GetClassificationBoxStretch(void) 
#line 128 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 129 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return FLOAT3D (m_fClassificationStretch  , m_fClassificationStretch  , m_fClassificationStretch );
#line 130 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 134 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT CModelHolder2::GetMaxTessellationLevel(void) 
#line 135 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 136 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return m_fMaxTessellationLevel ;
#line 137 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 141 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void CModelHolder2::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 142 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 143 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 144 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fNewDamage  = fDamageAmmount ;
#line 147 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestruction  == NULL ){
#line 149 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return ;
#line 150 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 151 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(dmtType  == DMT_BURNING )
#line 152 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 153 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
UBYTE  ubR  , ubG  , ubB  , ubA ;
#line 154 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGBA  (m_colBurning  , ubR  , ubG  , ubB  , ubA );
#line 155 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ubR  = ClampDn  (ubR  - 4 , 32);
#line 156 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_colBurning  = RGBAToColor  (ubR  , ubR  , ubR  , ubA );
#line 157 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 159 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CModelDestruction  * penDestruction  = GetDestruction  ();
#line 161 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fNewDamage  *= DamageStrength  (penDestruction  -> m_eibtBodyType  , dmtType );
#line 163 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(fNewDamage  == 0){
#line 165 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return ;
#line 166 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 167 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fKickDamage  = fNewDamage ;
#line 168 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if((dmtType  == DMT_EXPLOSION ) || (dmtType  == DMT_IMPACT ) || (dmtType  == DMT_CANNONBALL_EXPLOSION ))
#line 169 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 170 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fKickDamage  *= 1.5f;
#line 171 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 172 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(dmtType  == DMT_CLOSERANGE ){
#line 173 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fKickDamage  = 0.0f;
#line 174 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 175 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(dmtType  == DMT_CHAINSAW ){
#line 176 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fKickDamage  = 0.0f;
#line 177 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 178 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(dmtType  == DMT_BULLET  && penDestruction  -> m_eibtBodyType  == EIBT_ROCK ){
#line 179 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fKickDamage  = 0.0f;
#line 180 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 181 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(dmtType  == DMT_BURNING )
#line 182 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 183 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fKickDamage  = 0.0f;
#line 184 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 187 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 188 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
TIME  tmDelta  = tmNow  - m_tmLastDamage ;
#line 189 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_tmLastDamage  = tmNow ;
#line 192 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_penLastDamager  = penInflictor ;
#line 195 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(tmDelta  >= _pTimer  -> TickQuantum  * 3){
#line 196 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_vDamage  = FLOAT3D (0 , 0 , 0);
#line 197 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 199 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vDirectionFixed ;
#line 200 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(vDirection  . ManhattanNorm  () > 0.5f){
#line 201 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
vDirectionFixed  = vDirection ;
#line 202 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 203 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
vDirectionFixed  = FLOAT3D (0 , 1 , 0);
#line 204 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 205 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vDamageOld  = m_vDamage ;
#line 206 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_vDamage  += vDirectionFixed  * fKickDamage ;
#line 209 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_vDamage  . Length  () > GetHealth  ()){
#line 210 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(! penDestruction  -> m_bRequireExplosion  || 
#line 211 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
dmtType  == DMT_EXPLOSION  || dmtType  == DMT_CANNONBALL  || dmtType  == DMT_CANNONBALL_EXPLOSION )
#line 212 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 213 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
EDeath  eDeath ;
#line 214 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SendEvent  (eDeath );
#line 216 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_dmtLastDamageType  = dmtType ;
#line 217 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 218 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 220 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fMaxDamageAmmount  < fDamageAmmount ){
#line 221 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fMaxDamageAmmount  = fDamageAmmount ;
#line 222 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 225 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if((dmtType  != DMT_BURNING ) && (dmtType  != DMT_CHAINSAW ) && 
#line 226 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
(m_tmSpraySpawned  <= _pTimer  -> CurrentTick  () - _pTimer  -> TickQuantum  * 8 || 
#line 227 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fSprayDamage  + fNewDamage  > 50.0f))
#line 228 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 230 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CPlacement3D plSpray  = CPlacement3D (vHitPoint  , ANGLE3D (0 , 0 , 0));
#line 231 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 232 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_penSpray  -> SetParent  (this );
#line 233 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ESpawnSpray  eSpawnSpray ;
#line 236 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fMaxDamageAmmount  > 10.0f){
#line 237 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . fDamagePower  = 3.0f;
#line 238 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else if(m_fSprayDamage  + fNewDamage  > 50.0f){
#line 239 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 240 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 241 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 242 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 244 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . sptType  = penDestruction  -> m_sptType ;
#line 245 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . fSizeMultiplier  = penDestruction  -> m_fParticleSize ;
#line 248 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vDn  (- en_mRotation  (1 , 2) , - en_mRotation  (2 , 2) , - en_mRotation  (3 , 2));
#line 251 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vHitPointRelative  = vHitPoint  - GetPlacement  () . pl_PositionVector ;
#line 252 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vReflectingNormal ;
#line 253 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetNormalComponent  (vHitPointRelative  , vDn  , vReflectingNormal );
#line 254 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
vReflectingNormal  . Normalize  ();
#line 256 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vProjectedComponent  = vReflectingNormal  * (vDirection  % vReflectingNormal );
#line 257 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT3D vSpilDirection  = vDirection  - vProjectedComponent  * 2.0f - vDn  * 0.5f;
#line 259 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . vDirection  = vSpilDirection ;
#line 260 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . penOwner  = this ;
#line 261 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . colCentralColor  = penDestruction  -> m_colParticles ;
#line 262 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . colBurnColor  = m_colBurning ;
#line 263 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
eSpawnSpray  . fLaunchPower  = penDestruction  -> m_fParticleLaunchPower ;
#line 265 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_penSpray  -> Initialize  (eSpawnSpray );
#line 266 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_tmSpraySpawned  = _pTimer  -> CurrentTick  ();
#line 267 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fSprayDamage  = 0.0f;
#line 268 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fMaxDamageAmmount  = 0.0f;
#line 269 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 271 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(dmtType  == DMT_CHAINSAW  && m_fChainSawCutDamage  > 0)
#line 272 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 273 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fChainSawCutDamage  -= fDamageAmmount ;
#line 274 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fChainSawCutDamage  <= 0)
#line 275 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 276 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
EDeath  eDeath ;
#line 277 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SendEvent  (eDeath );
#line 279 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_dmtLastDamageType  = dmtType ;
#line 280 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 281 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 283 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fSprayDamage  += fNewDamage ;
#line 284 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 287 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void * CModelHolder2::GetEntityInfo(void) {
#line 288 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CModelDestruction  * pmd  = GetDestruction  ();
#line 289 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(pmd  != NULL )
#line 290 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 291 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return GetStdEntityInfo  (pmd  -> m_eibtBodyType );
#line 292 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 293 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return CEntity  :: GetEntityInfo  ();
#line 294 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 296 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
class CModelDestruction * CModelHolder2::GetDestruction(void) 
#line 297 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 298 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ASSERT  (m_penDestruction  == NULL  || IsOfClass  (m_penDestruction  , "ModelDestruction"));
#line 299 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return (CModelDestruction  *) & * m_penDestruction ;
#line 300 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 301 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
BOOL CModelHolder2::IsTargetable(void)const 
#line 302 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 303 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return m_bTargetable ;
#line 304 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 307 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CAnimData * CModelHolder2::GetAnimData(SLONG slPropertyOffset) 
#line 308 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 309 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(slPropertyOffset  == offsetof  (CModelHolder2  , m_iModelAnimation )){
#line 310 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return GetModelObject  () -> GetData  ();
#line 311 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else if(slPropertyOffset  == offsetof  (CModelHolder2  , m_iTextureAnimation )){
#line 312 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return GetModelObject  () -> mo_toTexture  . GetData  ();
#line 313 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else if(slPropertyOffset  == offsetof  (CModelHolder2  , m_iLightAnimation )){
#line 314 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return m_aoLightAnimation  . GetData  ();
#line 315 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 316 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return CEntity  :: GetAnimData  (slPropertyOffset );
#line 317 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 318 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 321 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void CModelHolder2::AdjustMipFactor(FLOAT & fMipFactor) 
#line 322 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 324 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fMipFadeDist  > 0){
#line 325 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CModelObject * pmo  = GetModelObject  ();
#line 326 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(pmo  == NULL ){
#line 327 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return ;
#line 328 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 330 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fMipForFade  = fMipFactor ;
#line 337 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(fMipForFade  > m_fMipFadeDist ){
#line 339 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fMipFactor  = UpperLimit  (0.0f);
#line 340 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return ;
#line 341 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 344 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fFade  = (m_fMipFadeDist  - fMipForFade );
#line 345 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fMipFadeLen  > 0){
#line 346 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fFade  /= m_fMipFadeLen ;
#line 347 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 348 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(fFade  > 0){
#line 349 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fFade  = 1.0f;
#line 350 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 351 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 353 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fFade  = Clamp  (fFade  , 0.0f , 1.0f);
#line 355 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pmo  -> mo_colBlendColor  = (pmo  -> mo_colBlendColor  & ~ 255) | UBYTE  (255 * fFade );
#line 356 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 358 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
fMipFactor  = fMipFactor  * m_fMipMul  + m_fMipAdd ;
#line 359 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 362 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
BOOL CModelHolder2::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 363 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 364 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
switch(m_cstCustomShading )
#line 365 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 366 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
case CST_FULL_CUSTOMIZED : 
#line 367 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 369 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 371 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SLONG  colFrame0  , colFrame1 ;FLOAT fRatio ;
#line 372 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_aoLightAnimation  . GetFrame  (colFrame0  , colFrame1  , fRatio );
#line 373 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
UBYTE  ubAnimR0  , ubAnimG0  , ubAnimB0 ;
#line 374 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
UBYTE  ubAnimR1  , ubAnimG1  , ubAnimB1 ;
#line 375 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGB  (colFrame0  , ubAnimR0  , ubAnimG0  , ubAnimB0 );
#line 376 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGB  (colFrame1  , ubAnimR1  , ubAnimG1  , ubAnimB1 );
#line 379 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fAnimR  = NormByteToFloat  (Lerp  (ubAnimR0  , ubAnimR1  , fRatio ));
#line 380 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fAnimG  = NormByteToFloat  (Lerp  (ubAnimG0  , ubAnimG1  , fRatio ));
#line 381 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fAnimB  = NormByteToFloat  (Lerp  (ubAnimB0  , ubAnimB1  , fRatio ));
#line 384 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
UBYTE  ubLightR  , ubLightG  , ubLightB ;
#line 385 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
UBYTE  ubAmbientR  , ubAmbientG  , ubAmbientB ;
#line 386 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGB  (m_colLight  , ubLightR  , ubLightG  , ubLightB );
#line 387 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGB  (m_colAmbient  , ubAmbientR  , ubAmbientG  , ubAmbientB );
#line 388 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colLight  = RGBToColor  (ubLightR  * fAnimR  , ubLightG  * fAnimG  , ubLightB  * fAnimB );
#line 389 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colAmbient  = RGBToColor  (ubAmbientR  * fAnimR  , ubAmbientG  * fAnimG  , ubAmbientB  * fAnimB );
#line 392 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 393 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colLight  = m_colLight ;
#line 394 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colAmbient  = m_colAmbient ;
#line 395 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 398 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 399 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(pwsc  != NULL  && pwsc  -> m_bApplyShadingToModels )
#line 400 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 402 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
COLOR colShade  = GetWorld  () -> wo_atbTextureBlendings  [ 9 ] . tb_colMultiply ;
#line 403 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colLight  = MulColors  (colLight  , colShade );
#line 404 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colAmbient  = MulColors  (colAmbient  , colShade );
#line 405 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 407 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
AnglesToDirectionVector  (m_aShadingDirection  , vLightDirection );
#line 408 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
vLightDirection  = - vLightDirection ;
#line 409 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
break ;
#line 410 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 411 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
case CST_CONSTANT_SHADING : 
#line 412 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 414 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
UBYTE  lR  , lG  , lB  , aR  , aG  , aB  , rR  , rG  , rB ;
#line 415 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGB  (colLight  , lR  , lG  , lB );
#line 416 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ColorToRGB  (colAmbient  , aR  , aG  , aB );
#line 417 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colLight  = 0;
#line 418 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
rR  = (UBYTE ) Clamp  ((ULONG ) lR  + aR  , (ULONG ) 0 , (ULONG ) 255);
#line 419 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
rG  = (UBYTE ) Clamp  ((ULONG ) lG  + aG  , (ULONG ) 0 , (ULONG ) 255);
#line 420 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
rB  = (UBYTE ) Clamp  ((ULONG ) lB  + aB  , (ULONG ) 0 , (ULONG ) 255);
#line 421 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colAmbient  = RGBToColor  (rR  , rG  , rB );
#line 422 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
break ;
#line 423 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 424 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
case CST_NONE : 
#line 425 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 427 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
break ;
#line 428 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 429 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 431 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_colBurning  != COLOR (C_WHITE  | CT_OPAQUE ))
#line 432 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 433 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colAmbient  = MulColors  (colAmbient  , m_colBurning );
#line 434 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
colLight  = MulColors  (colLight  , m_colBurning );
#line 435 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE ;
#line 436 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 437 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return m_stClusterShadows  != ST_NONE ;
#line 438 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 441 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void CModelHolder2::MirrorAndStretch(FLOAT fStretch,BOOL bMirrorX) 
#line 442 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 443 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchAll  *= fStretch ;
#line 444 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(bMirrorX ){
#line 445 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchX  = - m_fStretchX ;
#line 446 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 447 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 450 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void CModelHolder2::StretchModel(void) {
#line 452 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(Abs  (m_fStretchX ) < 0.01f){m_fStretchX  = 0.01f;}
#line 453 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(Abs  (m_fStretchY ) < 0.01f){m_fStretchY  = 0.01f;}
#line 454 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(Abs  (m_fStretchZ ) < 0.01f){m_fStretchZ  = 0.01f;}
#line 455 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fStretchAll  < 0.01f){m_fStretchAll  = 0.01f;}
#line 457 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(Abs  (m_fStretchX ) > 1000.0f){m_fStretchX  = 1000.0f * Sgn  (m_fStretchX );}
#line 458 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(Abs  (m_fStretchY ) > 1000.0f){m_fStretchY  = 1000.0f * Sgn  (m_fStretchY );}
#line 459 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(Abs  (m_fStretchZ ) > 1000.0f){m_fStretchZ  = 1000.0f * Sgn  (m_fStretchZ );}
#line 460 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fStretchAll  > 1000.0f){m_fStretchAll  = 1000.0f;}
#line 462 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_bRandomStretch ){
#line 463 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_bRandomStretch  = FALSE ;
#line 465 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRndX  = Clamp  (m_fStretchRndX  , 0.0f , 1.0f);
#line 466 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRndY  = Clamp  (m_fStretchRndY  , 0.0f , 1.0f);
#line 467 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRndZ  = Clamp  (m_fStretchRndZ  , 0.0f , 1.0f);
#line 468 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRndAll  = Clamp  (m_fStretchRndAll  , 0.0f , 1.0f);
#line 470 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRandom  (1) = (FRnd  () * m_fStretchRndX  * 2 - m_fStretchRndX ) + 1;
#line 471 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRandom  (2) = (FRnd  () * m_fStretchRndY  * 2 - m_fStretchRndY ) + 1;
#line 472 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRandom  (3) = (FRnd  () * m_fStretchRndZ  * 2 - m_fStretchRndZ ) + 1;
#line 474 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT fRNDAll  = (FRnd  () * m_fStretchRndAll  * 2 - m_fStretchRndAll ) + 1;
#line 475 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRandom  (1) *= fRNDAll ;
#line 476 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRandom  (2) *= fRNDAll ;
#line 477 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchRandom  (3) *= fRNDAll ;
#line 478 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 480 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> StretchModel  (FLOAT3D (
#line 481 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchAll  * m_fStretchX  * m_fStretchRandom  (1) , 
#line 482 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchAll  * m_fStretchY  * m_fStretchRandom  (2) , 
#line 483 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fStretchAll  * m_fStretchZ  * m_fStretchRandom  (3)));
#line 484 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ModelChangeNotify  ();
#line 485 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 488 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
void CModelHolder2::InitModelHolder(void) {
#line 491 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fnModel  == ""){
#line 492 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnModel  = CTFILENAME  ("Models\\Editor\\Axis.mdl");
#line 493 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 495 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fnReflection  == CTString ("Models\\Editor\\Vector.tex")){
#line 496 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnReflection  = CTString ("");
#line 497 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 498 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fnSpecular  == CTString ("Models\\Editor\\Vector.tex")){
#line 499 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnSpecular  = CTString ("");
#line 500 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 501 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fnBump  == CTString ("Models\\Editor\\Vector.tex")){
#line 502 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnBump  = CTString ("");
#line 503 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 505 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_bActive ){
#line 506 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
InitAsModel  ();
#line 507 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 508 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
InitAsEditorModel  ();
#line 509 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 511 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetModel  (m_fnModel );
#line 512 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
INDEX iAnim  = m_iModelAnimation ;
#line 513 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
FLOAT tmOffsetPhase  = 0.0f;
#line 514 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_iFirstRandomAnimation  >= 0)
#line 515 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 516 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
INDEX ctAnims  = GetModelObject  () -> GetAnimsCt  () - m_iFirstRandomAnimation ;
#line 517 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
iAnim  = m_iFirstRandomAnimation  + Clamp  (INDEX (FRnd  () * ctAnims ) , INDEX (0) , ctAnims );
#line 518 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
tmOffsetPhase  = FRnd  () * 10.0f;
#line 519 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 521 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> PlayAnim  (iAnim  , AOF_LOOPING );
#line 522 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> OffsetPhase  (tmOffsetPhase );
#line 525 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fnOldModel  == ""){
#line 527 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnOldModel  = m_fnModel ;
#line 529 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 531 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fnOldModel  != m_fnModel ){
#line 532 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnOldModel  = m_fnModel ;
#line 533 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> AutoSetTextures  ();
#line 534 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnTexture  = GetModelObject  () -> mo_toTexture  . GetName  ();
#line 535 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnReflection  = GetModelObject  () -> mo_toReflection  . GetName  ();
#line 536 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnSpecular  = GetModelObject  () -> mo_toSpecular  . GetName  ();
#line 537 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnBump  = GetModelObject  () -> mo_toBump  . GetName  ();
#line 538 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 539 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 541 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_bAttachments )
#line 542 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 543 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> AutoSetAttachments  ();
#line 544 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 545 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
else 
#line 546 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 547 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> RemoveAllAttachmentModels  ();
#line 548 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 550 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
try 
#line 551 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 552 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> mo_toTexture  . SetData_t  (m_fnTexture );
#line 553 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> mo_toTexture  . PlayAnim  (m_iTextureAnimation  , AOF_LOOPING );
#line 554 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> mo_toReflection  . SetData_t  (m_fnReflection );
#line 555 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> mo_toSpecular  . SetData_t  (m_fnSpecular );
#line 556 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> mo_toBump  . SetData_t  (m_fnBump );
#line 557 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}catch  (char  * strError ){
#line 558 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
WarningMessage  (strError );
#line 559 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 562 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
StretchModel  ();
#line 563 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
ModelChangeNotify  ();
#line 565 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_bColliding  && m_bActive ){
#line 566 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetPhysicsFlags  (EPF_MODEL_FIXED );
#line 567 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetCollisionFlags  (ECF_MODEL_HOLDER );
#line 568 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 569 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 570 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 571 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 573 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
switch(m_stClusterShadows ){
#line 574 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
case ST_NONE : 
#line 575 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 576 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 578 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
break ;
#line 579 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 580 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
case ST_CLUSTER : 
#line 581 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 582 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetFlags  (GetFlags  () | ENF_CLUSTERSHADOWS );
#line 584 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
break ;
#line 585 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 586 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
case ST_POLYGONAL : 
#line 587 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 589 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 590 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
break ;
#line 591 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 592 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 594 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_bBackground ){
#line 595 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetFlags  (GetFlags  () | ENF_BACKGROUND );
#line 596 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 597 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetFlags  (GetFlags  () & ~ ENF_BACKGROUND );
#line 598 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 600 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
try {
#line 601 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_aoLightAnimation  . SetData_t  (m_fnmLightAnimation );
#line 602 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}catch  (char  * strError ){
#line 603 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
WarningMessage  (TRANS  ("Cannot load '%s': %s") , (CTString &) m_fnmLightAnimation  , strError );
#line 604 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fnmLightAnimation  = "";
#line 605 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 606 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 607 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_aoLightAnimation  . PlayAnim  (m_iLightAnimation  , AOF_LOOPING );
#line 608 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 610 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestruction  == NULL ){
#line 611 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_strDescription  . PrintF  ("%s,%s undestroyable" , (CTString &) m_fnModel  . FileName  () , (CTString &) m_fnTexture  . FileName  ());
#line 612 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 613 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_strDescription  . PrintF  ("%s,%s -> %s" , (CTString &) m_fnModel  . FileName  () , (CTString &) m_fnTexture  . FileName  () , 
#line 614 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_penDestruction  -> GetName  ());
#line 615 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 617 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return ;
#line 618 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
  
#line 622 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SLONG CModelHolder2::GetUsedMemory(void) 
#line 623 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 625 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SLONG  slUsedMemory  = sizeof  (CLight ) - sizeof  (CRationalEntity ) + CRationalEntity  :: GetUsedMemory  ();
#line 627 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_fnModel  . Length  ();
#line 628 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_fnTexture  . Length  ();
#line 629 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_fnReflection  . Length  ();
#line 630 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_fnSpecular  . Length  ();
#line 631 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_fnBump  . Length  ();
#line 632 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_strName  . Length  ();
#line 633 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 634 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += m_fnmLightAnimation  . Length  ();
#line 635 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
slUsedMemory  += 1 * sizeof  (CAnimObject);
#line 636 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return slUsedMemory ;
#line 637 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
BOOL CModelHolder2::
#line 642 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
Die(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CModelHolder2_Die
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CModelHolder2::Die expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 645 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{FOREACHINLIST  (CEntity  , en_lnInParent  , en_lhChildren  , itenChild ){
#line 647 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
itenChild  -> SendEvent  (ERangeModelDestruction  ());
#line 648 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}}
#line 651 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CModelDestruction  * pmd  = GetDestruction  ();
#line 652 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
pmd  -> SpawnDebris  (this );
#line 654 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CModelHolder2  * penNext  = pmd  -> GetNextPhase  ();
#line 655 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(penNext  != NULL ){
#line 657 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CEntity  * penNew  = GetWorld  () -> CopyEntityInWorld  (* penNext  , GetPlacement  ());
#line 658 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
penNew  -> GetModelObject  () -> StretchModel  (GetModelObject  () -> mo_Stretch );
#line 659 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
penNew  -> ModelChangeNotify  ();
#line 660 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
((CModelHolder2  *) penNew ) -> m_colBurning  = m_colBurning ;
#line 661 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
((CModelHolder2  *) penNew ) -> m_fChainSawCutDamage  = m_fChainSawCutDamage ;
#line 663 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(pmd  -> m_iStartAnim  != - 1)
#line 664 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 665 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
penNew  -> GetModelObject  () -> PlayAnim  (pmd  -> m_iStartAnim  , 0);
#line 666 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 669 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
CModelHolder2  & mhNew  = * ((CModelHolder2  *) penNew );
#line 670 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_cstCustomShading  = m_cstCustomShading ;
#line 671 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_colLight  = m_colLight ;
#line 672 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_colAmbient  = m_colAmbient ;
#line 673 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_fMipFadeDist  = m_fMipFadeDist ;
#line 674 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_fMipFadeLen  = m_fMipFadeLen ;
#line 675 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_fMipAdd  = m_fMipAdd ;
#line 676 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_fMipMul  = m_fMipMul ;
#line 679 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_dmtLastDamageType  == DMT_CHAINSAW )
#line 680 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{
#line 681 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
EDeath  eDeath ;
#line 682 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_fChainSawCutDamage  = 0.0f;
#line 683 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
mhNew  . m_dmtLastDamageType  = DMT_CHAINSAW ;
#line 684 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
penNew  -> SendEvent  (eDeath );
#line 685 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 686 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 698 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestroyTarget  != NULL ){
#line 700 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SendToTarget  (m_penDestroyTarget  , EET_TRIGGER  , m_penLastDamager );
#line 701 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 704 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
Destroy  ();
#line 705 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
Return(STATE_CURRENT,EVoid());
#line 705 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CModelHolder2::
#line 707 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CModelHolder2_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CModelHolder2::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 710 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
InitModelHolder  ();
#line 713 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_fMipFadeLenMetric  > m_rMipFadeDistMetric ){m_fMipFadeLenMetric  = m_rMipFadeDistMetric ;}
#line 736 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_rMipFadeDistMetric  > 0.0f){
#line 737 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fMipFadeDist  = Log2  (m_rMipFadeDistMetric  * 1024.0f * MIPRATIO );
#line 738 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fMipFadeLen  = Log2  ((m_rMipFadeDistMetric  + m_fMipFadeLenMetric ) * 1024.0f * MIPRATIO ) - m_fMipFadeDist ;
#line 739 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}else {
#line 740 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fMipFadeDist  = 0.0f;
#line 741 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_fMipFadeLen  = 0.0f;
#line 742 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 746 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestruction  != NULL  && ! IsOfClass  (m_penDestruction  , "ModelDestruction")){
#line 747 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
WarningMessage  ("Destruction '%s' is wrong class!" , m_penDestruction  -> GetName  ());
#line 748 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_penDestruction  = NULL ;
#line 749 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 752 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00d20001, FALSE, EBegin());return TRUE;}BOOL CModelHolder2::H0x00d20001_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00d20001
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 756 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestruction  != NULL ){
#line 757 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetHealth  (GetDestruction  () -> m_fHealth );
#line 758 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 759 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 760 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;

#line 763 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SwitchToModel  ();
#line 764 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_bActive  = TRUE ;
#line 765 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_bColliding ){
#line 766 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetPhysicsFlags  (EPF_MODEL_FIXED );
#line 767 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetCollisionFlags  (ECF_MODEL_HOLDER );
#line 768 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 769 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 770 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 772 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SwitchToEditorModel  ();
#line 773 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 774 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 775 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_bActive  = FALSE ;
#line 776 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 777 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 778 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 779 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;case(EVENTCODE_ERangeModelDestruction):{const ERangeModelDestruction&e= (ERangeModelDestruction&)__eeInput;

#line 783 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
{FOREACHINLIST  (CEntity  , en_lnInParent  , en_lhChildren  , itenChild ){
#line 785 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
itenChild  -> SendEvent  (ERangeModelDestruction  ());
#line 786 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}}
#line 788 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
Destroy  ();
#line 789 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 790 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 793 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_penDestruction  != NULL ){
#line 794 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
Jump(STATE_CURRENT, STATE_CModelHolder2_Die, TRUE, EVoid());return TRUE;
#line 795 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 796 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 797 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;case(EVENTCODE_EChangeAnim):{const EChangeAnim&eChange= (EChangeAnim&)__eeInput;

#line 800 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_iModelAnimation  = eChange  . iModelAnim ;
#line 801 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_iTextureAnimation  = eChange  . iTextureAnim ;
#line 802 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_iLightAnimation  = eChange  . iLightAnim ;
#line 803 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 804 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
m_aoLightAnimation  . PlayAnim  (m_iLightAnimation  , eChange  . bLightLoop  ? AOF_LOOPING  : 0);
#line 805 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 806 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(GetModelObject  () -> GetData  () != NULL ){
#line 807 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> PlayAnim  (m_iModelAnimation  , eChange  . bModelLoop  ? AOF_LOOPING  : 0);
#line 808 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 809 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
if(GetModelObject  () -> mo_toTexture  . GetData  () != NULL ){
#line 810 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
GetModelObject  () -> mo_toTexture  . PlayAnim  (m_iTextureAnimation  , eChange  . bTextureLoop  ? AOF_LOOPING  : 0);
#line 811 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}
#line 812 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 813 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;default:{
#line 815 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
return TRUE;
#line 816 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}ASSERT(FALSE);break;
#line 817 "C:/MyMod/Sources/EntitiesMP/ModelHolder2.es"
}return TRUE;}BOOL CModelHolder2::H0x00d20002_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00d20002
; ASSERT(FALSE); return TRUE;};
/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/MyMod/Sources/EntitiesMP/Fish.es"

#include "StdH.h"
#include "Models/Enemies/Fish/Fish.h"

#include <EntitiesMP/Fish.h>
#include <EntitiesMP/Fish_tables.h>
#line 9 "C:/MyMod/Sources/EntitiesMP/Fish.es"

static EntityInfo eiFish = {
  EIBT_FLESH, 100.0f,
  0.0f, 0.0f, 0.0f,
  0.0f, 0.0f, 0.0f,
};

#define DISTANCE_ELECTRICITY   8.0f

void CFish::SetDefaultProperties(void) {
  m_bAttackingByElectricity = FALSE ;
  m_tmElectricityTimeStart = 0.0f;
  CEnemyDive::SetDefaultProperties();
}
  CTString CFish::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 47 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 48 "C:/MyMod/Sources/EntitiesMP/Fish.es"
CTString str ;
#line 49 "C:/MyMod/Sources/EntitiesMP/Fish.es"
str  . PrintF  (TRANS  ("%s was electrocuted by a fish") , strPlayerName );
#line 50 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return str ;
#line 51 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  const CTFileName & CFish::GetComputerMessageName(void)const {
#line 53 "C:/MyMod/Sources/EntitiesMP/Fish.es"
static DECLARE_CTFILENAME  (fnm  , "Data\\Messages\\Enemies\\Fish.txt");
#line 54 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return fnm ;
#line 55 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 56 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::Precache(void) {
#line 57 "C:/MyMod/Sources/EntitiesMP/Fish.es"
CEnemyBase  :: Precache  ();
#line 58 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheModel  (MODEL_GLOW );
#line 59 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheTexture  (TEXTURE_GLOW );
#line 60 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_IDLE );
#line 61 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_SIGHT );
#line 62 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_WOUND );
#line 63 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_DEATH );
#line 64 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_WOUNDAIR );
#line 65 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_DEATHAIR );
#line 66 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PrecacheSound  (SOUND_ATTACK );
#line 67 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 70 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void * CFish::GetEntityInfo(void) 
#line 71 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 72 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return & eiFish ;
#line 73 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 76 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 77 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 78 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 79 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(dmtType  == DMT_DROWNING ){
#line 81 "C:/MyMod/Sources/EntitiesMP/Fish.es"
fDamageAmmount  /= 2.0f;
#line 82 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 84 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(! IsOfClass  (penInflictor  , "Fish")){
#line 85 "C:/MyMod/Sources/EntitiesMP/Fish.es"
CEnemyDive  :: ReceiveDamage  (penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 86 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 87 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 91 "C:/MyMod/Sources/EntitiesMP/Fish.es"
INDEX CFish::AnimForDamage(FLOAT fDamage) 
#line 92 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 93 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_bAttackingByElectricity  = FALSE ;
#line 94 "C:/MyMod/Sources/EntitiesMP/Fish.es"
INDEX iAnim  = FISH_ANIM_WOUND ;
#line 95 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StartModelAnim  (iAnim  , 0);
#line 96 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return iAnim ;
#line 97 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 100 "C:/MyMod/Sources/EntitiesMP/Fish.es"
INDEX CFish::AnimForDeath(void) {
#line 101 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(! m_bInLiquid ){
#line 102 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return AnimForDamage  (10.0f);
#line 103 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 104 "C:/MyMod/Sources/EntitiesMP/Fish.es"
INDEX iAnim ;
#line 105 "C:/MyMod/Sources/EntitiesMP/Fish.es"
switch(IRnd  () % 3){
#line 106 "C:/MyMod/Sources/EntitiesMP/Fish.es"
default  : iAnim  = FISH_ANIM_DEATH ;break ;
#line 107 "C:/MyMod/Sources/EntitiesMP/Fish.es"
case 0: iAnim  = FISH_ANIM_DEATH ;break ;
#line 108 "C:/MyMod/Sources/EntitiesMP/Fish.es"
case 1: iAnim  = FISH_ANIM_DEATH02 ;break ;
#line 109 "C:/MyMod/Sources/EntitiesMP/Fish.es"
case 2: iAnim  = FISH_ANIM_DEATH03 ;break ;
#line 110 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 111 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StartModelAnim  (iAnim  , 0);
#line 112 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return iAnim ;
#line 113 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 115 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::DeathNotify(void) 
#line 116 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 117 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_bAttackingByElectricity  = FALSE ;
#line 118 "C:/MyMod/Sources/EntitiesMP/Fish.es"
en_fDensity  = 500.0f;
#line 119 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 121 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::RenderParticles(void) 
#line 122 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 123 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(m_bAttackingByElectricity  && m_penEnemy  != NULL )
#line 124 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 126 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT3D vSource  = GetPlacement  () . pl_PositionVector ;
#line 127 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT3D vTarget  = m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 128 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT3D vDirection  = (vTarget  - vSource ) . Normalize  ();
#line 129 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Particles_Ghostbuster  (vSource  , vTarget  , 32 , 1.0f);
#line 132 "C:/MyMod/Sources/EntitiesMP/Fish.es"
for(INDEX i  = 0;i  < 4;i  ++)
#line 133 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 134 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT3D vDirection  = vSource ;
#line 135 "C:/MyMod/Sources/EntitiesMP/Fish.es"
vDirection  (1) += ((FLOAT (rand  ()) / RAND_MAX ) - 0.5f) * DISTANCE_ELECTRICITY  / 1.0f;
#line 136 "C:/MyMod/Sources/EntitiesMP/Fish.es"
vDirection  (2) += ((FLOAT (rand  ()) / RAND_MAX ) - 0.5f) * DISTANCE_ELECTRICITY  / 1.0f;
#line 137 "C:/MyMod/Sources/EntitiesMP/Fish.es"
vDirection  (3) += ((FLOAT (rand  ()) / RAND_MAX ) - 0.5f) * DISTANCE_ELECTRICITY  / 1.0f;
#line 138 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Particles_Ghostbuster  (vSource  , vDirection  , 32 , 1.0f);
#line 139 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 140 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 141 "C:/MyMod/Sources/EntitiesMP/Fish.es"
CEnemyBase  :: RenderParticles  ();
#line 142 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 144 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::StandingAnim(void) 
#line 145 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 146 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StartModelAnim  (FISH_ANIM_IDLE  , AOF_LOOPING  | AOF_NORESTART );
#line 147 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 148 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::WalkingAnim(void) 
#line 149 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 150 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(m_bInLiquid ){
#line 151 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StartModelAnim  (FISH_ANIM_SWIM  , AOF_LOOPING  | AOF_NORESTART );
#line 152 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}else {
#line 153 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StartModelAnim  (FISH_ANIM_WOUND  , AOF_LOOPING  | AOF_NORESTART );
#line 154 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 155 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 156 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::RunningAnim(void) 
#line 157 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 158 "C:/MyMod/Sources/EntitiesMP/Fish.es"
WalkingAnim  ();
#line 159 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 160 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::RotatingAnim(void) 
#line 161 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 162 "C:/MyMod/Sources/EntitiesMP/Fish.es"
WalkingAnim  ();
#line 163 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 166 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::IdleSound(void) 
#line 167 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 168 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_IDLE  , SOF_3D  | SOF_NOFILTER );
#line 169 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 170 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::SightSound(void) 
#line 171 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 172 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_SIGHT  , SOF_3D  | SOF_NOFILTER );
#line 173 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 174 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::WoundSound(void) 
#line 175 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 176 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(m_bInLiquid ){
#line 177 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_WOUND  , SOF_3D  | SOF_NOFILTER );
#line 178 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}else {
#line 179 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_WOUNDAIR  , SOF_3D  | SOF_NOFILTER );
#line 180 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 181 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 182 "C:/MyMod/Sources/EntitiesMP/Fish.es"
void CFish::DeathSound(void) 
#line 183 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 184 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(m_bInLiquid ){
#line 185 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_DEATH  , SOF_3D  | SOF_NOFILTER );
#line 186 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}else {
#line 187 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_DEATHAIR  , SOF_3D  | SOF_NOFILTER );
#line 188 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 189 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
  
#line 191 "C:/MyMod/Sources/EntitiesMP/Fish.es"
BOOL CFish::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 192 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 193 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT fTimePassed  = _pTimer  -> GetLerpedCurrentTick  () - m_tmElectricityTimeStart ;
#line 194 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(m_bAttackingByElectricity  && (fTimePassed  > 0))
#line 195 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 196 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT fDieFactor  = 1.0f;
#line 197 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(fTimePassed  > 0.25f)
#line 198 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 200 "C:/MyMod/Sources/EntitiesMP/Fish.es"
fDieFactor  = 1.0 - (ClampUp  (fTimePassed  - 0.25f , 0.5f) / 0.5f);
#line 201 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 203 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT fR  = 0.7f + 0.1f * (FLOAT (rand  ()) / RAND_MAX );
#line 204 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT fG  = 0.7f + 0.2f * (FLOAT (rand  ()) / RAND_MAX );
#line 205 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT fB  = 0.7f + 0.3f * (FLOAT (rand  ()) / RAND_MAX );
#line 206 "C:/MyMod/Sources/EntitiesMP/Fish.es"
colAmbient  = RGBToColor  (fR  * 128 * fDieFactor  , fG  * 128 * fDieFactor  , fB  * 128 * fDieFactor );
#line 207 "C:/MyMod/Sources/EntitiesMP/Fish.es"
colLight  = C_WHITE ;
#line 208 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return CEnemyBase  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 209 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 210 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return CEnemyBase  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 211 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
BOOL CFish::
#line 217 "C:/MyMod/Sources/EntitiesMP/Fish.es"
DiveHit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CFish_DiveHit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CFish::DiveHit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 219 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(CalcDist  (m_penEnemy ) > DISTANCE_ELECTRICITY )
#line 220 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 222 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + 0.25f;
#line 223 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Return(STATE_CURRENT,EReturn  ());
#line 223 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return TRUE;
#line 224 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 227 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetTimerAfter(0.6f);
Jump(STATE_CURRENT, 0x01510001, FALSE, EBegin());return TRUE;}BOOL CFish::H0x01510001_DiveHit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01510001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01510002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CFish::H0x01510002_DiveHit_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01510002
;
#line 229 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_bAttackingByElectricity  = TRUE ;
#line 230 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_tmElectricityTimeStart  = _pTimer  -> CurrentTick  ();
#line 232 "C:/MyMod/Sources/EntitiesMP/Fish.es"
AddAttachmentToModel  (this  , * GetModelObject  () , FISH_ATTACHMENT_GLOW  , MODEL_GLOW  , TEXTURE_GLOW  , 0 , 0 , 0);
#line 233 "C:/MyMod/Sources/EntitiesMP/Fish.es"
CModelObject & moGlow  = GetModelObject  () -> GetAttachmentModel  (FISH_ATTACHMENT_GLOW ) -> amo_moModelObject ;
#line 234 "C:/MyMod/Sources/EntitiesMP/Fish.es"
moGlow  . StretchModel  (FLOAT3D (4.0f , 4.0f , 4.0f));
#line 237 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StartModelAnim  (FISH_ANIM_ATTACK  , 0);
#line 238 "C:/MyMod/Sources/EntitiesMP/Fish.es"
PlaySound  (m_soSound  , SOUND_ATTACK  , SOF_3D  | SOF_NOFILTER );
#line 239 "C:/MyMod/Sources/EntitiesMP/Fish.es"
if(CalcDist  (m_penEnemy ) < DISTANCE_ELECTRICITY )
#line 240 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 242 "C:/MyMod/Sources/EntitiesMP/Fish.es"
InflictRangeDamage  (this  , DMT_CLOSERANGE  , 15.0f , GetPlacement  () . pl_PositionVector  , 1.0f , DISTANCE_ELECTRICITY );
#line 244 "C:/MyMod/Sources/EntitiesMP/Fish.es"
FLOAT3D vSpeed ;
#line 245 "C:/MyMod/Sources/EntitiesMP/Fish.es"
GetHeadingDirection  (0.0f , vSpeed );
#line 246 "C:/MyMod/Sources/EntitiesMP/Fish.es"
vSpeed  = vSpeed  * 30.0f;
#line 247 "C:/MyMod/Sources/EntitiesMP/Fish.es"
KickEntity  (m_penEnemy  , vSpeed );
#line 248 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 249 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetTimerAfter(0.5f);
Jump(STATE_CURRENT, 0x01510003, FALSE, EBegin());return TRUE;}BOOL CFish::H0x01510003_DiveHit_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01510003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01510004, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CFish::H0x01510004_DiveHit_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01510004
;
#line 251 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_bAttackingByElectricity  = FALSE ;
#line 252 "C:/MyMod/Sources/EntitiesMP/Fish.es"
GetModelObject  () -> RemoveAttachmentModel  (FISH_ATTACHMENT_GLOW );
#line 254 "C:/MyMod/Sources/EntitiesMP/Fish.es"
StandingAnim  ();
#line 255 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetTimerAfter(0.2f + FRnd  () / 3);
Jump(STATE_CURRENT, 0x01510005, FALSE, EBegin());return TRUE;}BOOL CFish::H0x01510005_DiveHit_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01510005
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01510006, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CFish::H0x01510006_DiveHit_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01510006
;
#line 256 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Return(STATE_CURRENT,EReturn  ());
#line 256 "C:/MyMod/Sources/EntitiesMP/Fish.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CFish::
#line 259 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CFish_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CFish::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 261 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Jump(STATE_CURRENT, STATE_CFish_DiveHit, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CFish::
#line 267 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CFish_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CFish::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 269 "C:/MyMod/Sources/EntitiesMP/Fish.es"
InitAsModel  ();
#line 271 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetPhysicsFlags  ((EPF_MODEL_WALKING  | EPF_HASGILLS ) & ~ EPF_ONBLOCK_CLIMBORSLIDE  | EPF_ONBLOCK_SLIDE );
#line 272 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetCollisionFlags  (ECF_MODEL );
#line 273 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetFlags  (GetFlags  () | ENF_ALIVE );
#line 274 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetHealth  (30.0f);
#line 275 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fMaxHealth  = 30.0f;
#line 276 "C:/MyMod/Sources/EntitiesMP/Fish.es"
en_tmMaxHoldBreath  = 15.0f;
#line 277 "C:/MyMod/Sources/EntitiesMP/Fish.es"
en_fDensity  = 1000.0f;
#line 278 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_EedtType  = EDT_GROUND_DIVE ;
#line 281 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetModel  (MODEL_FISH );
#line 282 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetModelMainTexture  (TEXTURE_FISH );
#line 283 "C:/MyMod/Sources/EntitiesMP/Fish.es"
SetModelSpecularTexture  (TEXTURE_SPECULAR );
#line 285 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveWalkSpeed  = 15.0f;
#line 286 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveAttackRunSpeed  = 20.0f;
#line 287 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveCloseRunSpeed  = 25.0f;
#line 289 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fWalkSpeed  = 15.0f;
#line 290 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aWalkRotateSpeed  = 900.0f;
#line 291 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fAttackRunSpeed  = 10.0f;
#line 292 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fCloseRunSpeed  = 12.0f;
#line 294 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aDiveWalkRotateSpeed  = 360.0f;
#line 295 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aDiveAttackRotateSpeed  = 1800.0f;
#line 296 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aDiveCloseRotateSpeed  = 3600.0f;
#line 298 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveIgnoreRange  = 200.0f;
#line 299 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveAttackDistance  = 100.0f;
#line 300 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveCloseDistance  = 15.0f;
#line 301 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveStopDistance  = 2.0f;
#line 303 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveAttackFireTime  = 0.0f;
#line 304 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDiveCloseFireTime  = 0.0f;
#line 306 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fBlowUpAmount  = 80.0f;
#line 307 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fBodyParts  = 2;
#line 308 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fDamageWounded  = 1.0f;
#line 309 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_iScore  = 500;
#line 311 "C:/MyMod/Sources/EntitiesMP/Fish.es"
{
#line 313 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aWalkRotateSpeed  = 360.0f;
#line 314 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aAttackRotateSpeed  = 1800.0f;
#line 315 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_aCloseRotateSpeed  = 3600.0f;
#line 317 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fIgnoreRange  = 200.0f;
#line 318 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fAttackDistance  = 100.0f;
#line 319 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fCloseDistance  = 15.0f;
#line 320 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fStopDistance  = 2.0f;
#line 322 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fAttackFireTime  = 0.0f;
#line 323 "C:/MyMod/Sources/EntitiesMP/Fish.es"
m_fCloseFireTime  = 0.0f;
#line 324 "C:/MyMod/Sources/EntitiesMP/Fish.es"
}
#line 326 "C:/MyMod/Sources/EntitiesMP/Fish.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.0f , 1.0f , 1.0f));
#line 327 "C:/MyMod/Sources/EntitiesMP/Fish.es"
ModelChangeNotify  ();
#line 329 "C:/MyMod/Sources/EntitiesMP/Fish.es"
en_fAcceleration  = 200.0f;
#line 330 "C:/MyMod/Sources/EntitiesMP/Fish.es"
en_fDeceleration  = 200.0f;
#line 333 "C:/MyMod/Sources/EntitiesMP/Fish.es"
Jump(STATE_CURRENT, STATE_CEnemyDive_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};